 ([], 0) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> [] in list_drop) : NatList -> Nat -> NatList)
0.00383800000009 false false

 ([], 1) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> [] in list_drop) : NatList -> Nat -> NatList)
0.00371300000006 false false

 ([0], 0) -> [0];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> xs in list_drop) : NatList -> Nat -> NatList)
0.00396099999989 false false

 ([0], 1) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> [] in list_drop) : NatList -> Nat -> NatList)
0.003782 false false

 ([1], 0) -> [1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> xs in list_drop) : NatList -> Nat -> NatList)
0.00396300000011 false false

 ([1], 1) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> [] in list_drop) : NatList -> Nat -> NatList)
0.00374000000011 false false

 ([1, 0], 0) -> [1, 0];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> xs in list_drop) : NatList -> Nat -> NatList)
0.00417199999993 false false

 ([1, 0], 1) -> [0];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> [0] in list_drop) : NatList -> Nat -> NatList)
0.00401800000009 false false

 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> [] in list_drop) : NatList -> Nat -> NatList)
0.00371100000007 false false

 ([0, 1], 1) -> [1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> [n] in list_drop) : NatList -> Nat -> NatList)
0.00407500000006 false false

 ([], 1) -> [];
 ([1], 0) -> [1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> xs in list_drop) : NatList -> Nat -> NatList)
0.00368299999991 false false

 ([0], 1) -> [];
 ([1, 0], 1) -> [0];
=================================
NOSOL

 ([0], 1) -> [];
 ([1], 1) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> [] in list_drop) : NatList -> Nat -> NatList)
0.0036970000001 false false

 ([], 0) -> [];
 ([1], 0) -> [1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> xs in list_drop) : NatList -> Nat -> NatList)
0.00360000000001 false false

 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [n] in list_drop) : NatList -> Nat -> NatList)
0.00800800000002 false false

 ([], 1) -> [];
 ([1], 1) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> [] in list_drop) : NatList -> Nat -> NatList)
0.0035969999999 false false

 ([1], 0) -> [1];
 ([0, 1], 0) -> [0, 1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> xs in list_drop) : NatList -> Nat -> NatList)
0.00387000000001 false false

 ([], 0) -> [];
 ([0, 1], 0) -> [0, 1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> xs in list_drop) : NatList -> Nat -> NatList)
0.00361799999996 false false

 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [0] in list_drop) : NatList -> Nat -> NatList)
0.00740100000007 false false

 ([], 0) -> [];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> [] in list_drop) : NatList -> Nat -> NatList)
0.00362300000006 false false

 ([], 1) -> [];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00650399999995 false false

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 1) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> [] in list_drop) : NatList -> Nat -> NatList)
0.00363500000003 false false

 ([0], 0) -> [0];
 ([1], 1) -> [];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.0049939999999 false false

 ([], 0) -> [];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [n] in list_drop) : NatList -> Nat -> NatList)
0.00668999999994 false false

 ([], 1) -> [];
 ([0], 1) -> [];
 ([0, 1], 0) -> [0, 1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.0110400000001 false false

 ([], 0) -> [];
 ([], 1) -> [];
 ([1, 0], 1) -> [0];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
0.00607100000002 false false

 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      case y1 of
        Z y2 -> 
          [0]

        S y2 -> 
          [] in list_drop) : NatList -> Nat -> NatList)
0.00867199999993 false false

 ([0], 1) -> [];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00519299999996 false false

 ([], 1) -> [];
 ([0], 0) -> [0];
 ([1, 0], 1) -> [0];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      [0] in list_drop) : NatList -> Nat -> NatList)
0.00621799999999 false false

 ([0], 1) -> [];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00542599999994 false false

 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([0, 1], 0) -> [0, 1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00504999999998 false false

 ([], 1) -> [];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([0, 1], 1) -> [1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          [#2.1 y1]

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          Cons (#2.1 y1, list_drop (#2.2 y1) n)

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
0.020268 false false

 ([], 0) -> [];
 ([1], 0) -> [1];
 ([1, 0], 1) -> [0];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.02665 true true

 ([], 0) -> [];
 ([0], 0) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.0063869999999 false false

 ([], 0) -> [];
 ([0], 0) -> [0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [0] in list_drop) : NatList -> Nat -> NatList)
0.00705500000004 false false

 ([0], 0) -> [0];
 ([1, 0], 0) -> [1, 0];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      case y1 of
        Z y2 -> 
          [n]

        S y2 -> 
          [] in list_drop) : NatList -> Nat -> NatList)
0.00786700000003 false false

 ([], 0) -> [];
 ([1], 0) -> [1];
 ([1, 0], 1) -> [0];
 ([0, 1], 1) -> [1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          [#2.1 y1]

        Cons y2 -> 
          [#2.1 y2] in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Cons (#2.1 y1, list_drop (#2.2 y1) n)

        Cons y2 -> 
          [#2.1 y2] in list_drop) : NatList -> Nat -> NatList)
0.0167899999999 false false

 ([0], 0) -> [0];
 ([1, 0], 1) -> [0];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
NOSOL

 ([], 0) -> [];
 ([], 1) -> [];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      case xs of
        Nil y2 -> 
          []

        Cons y2 -> 
          list_drop (#2.2 y2) y1 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      case xs of
        Nil y2 -> 
          []

        Cons y2 -> 
          list_drop (#2.2 y2) y1 in list_drop) : NatList -> Nat -> NatList)
0.0168739999999 true true

 ([], 1) -> [];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          [1, 0]

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          Cons
            ( 1
            , Cons (0, list_drop (#2.2 y1) (#2.1 y1))
            )

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
0.0225150000001 false false

 ([], 1) -> [];
 ([0], 0) -> [0];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([0, 1], 0) -> [0, 1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00664699999993 false false

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 1) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00620200000003 false false

 ([0], 1) -> [];
 ([1], 1) -> [];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
=================================
NOSOL

 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 1) -> [1];
=================================
NOSOL

 ([], 0) -> [];
 ([0], 1) -> [];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.026008 true true

 ([], 1) -> [];
 ([0], 1) -> [];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00670700000001 false false

 ([], 0) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00641300000007 false false

 ([], 1) -> [];
 ([0], 0) -> [0];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([0, 1], 1) -> [1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          Cons (#2.1 y1, list_drop (#2.2 y1) n)

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
0.0220389999999 false false

 ([0], 0) -> [0];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([0, 1], 1) -> [1];
=================================
NOSOL

 ([0], 0) -> [0];
 ([1], 1) -> [];
 ([1, 0], 1) -> [0];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
NOSOL

 ([], 0) -> [];
 ([0], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0368289999999 true true

 ([], 1) -> [];
 ([1], 1) -> [];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0403550000001 true true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00632300000007 false false

 ([], 1) -> [];
 ([1], 0) -> [1];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.03163 true true

 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1, 0], 0) -> [1, 0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00529600000004 false false

 ([], 0) -> [];
 ([0], 0) -> [0];
 ([1], 0) -> [1];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.047875 false true

 ([], 0) -> [];
 ([0], 0) -> [0];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0279 false true

 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
NOSOL

 ([0], 0) -> [0];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
=================================
NOSOL

 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1, 0], 1) -> [0];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.02262 true true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([0, 1], 1) -> [1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          Cons (#2.1 y1, list_drop (#2.2 y1) n)

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
0.0497089999999 false false

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 1) -> [0];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          [#2.1 y1]

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          Cons (#2.1 y1, list_drop (#2.2 y1) n)

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
0.072604 false false

 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 1) -> [];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
NOSOL

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([1], 1) -> [];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.061483 true true

 ([0], 1) -> [];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
NOSOL

 ([], 0) -> [];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0294409999999 true true

 ([], 0) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 1) -> [];
 ([1, 0], 1) -> [0];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.036826 true true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 1) -> [];
 ([1], 1) -> [];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.059608 true true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          Cons (#2.1 y1, list_drop (#2.2 y1) n)

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
0.0499809999999 false false

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 1) -> [];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          Cons (#2.1 y1, list_drop (#2.2 y1) n)

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
0.050033 false false

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0999899999999 true true

 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.04296 true true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0814849999999 true true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00637400000005 false false

 ([], 1) -> [];
 ([0], 0) -> [0];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.029002 false true

 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.033148 true true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0912920000001 true true

 ([], 0) -> [];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0322430000001 true true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.054592 false true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0832150000001 true true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 1) -> [];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.103843 true true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 1) -> [1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.057967 false true

 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0365879999999 true true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0597150000001 false true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.105174 true true

 ([], 1) -> [];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.036145 true true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          Cons (#2.1 y1, list_drop (#2.2 y1) n)

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
0.058374 false false

 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.030898 false true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 1) -> [0];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          [#2.1 y1]

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          [#2.1 y1]

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0533 false false

 ([], 0) -> [];
 ([], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.09223 true true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0636460000001 false true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.09617 true true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.092515 true true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0972670000001 true true

 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0371399999999 true true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.099054 true true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.108234 true true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.096229 true true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0960620000001 true true

 ([], 0) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0336070000001 true true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.102742 true true

