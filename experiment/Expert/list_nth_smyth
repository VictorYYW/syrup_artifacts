([], 0) -> 0;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> 0 in list_nth) : NatList -> Nat -> Nat)
0.003557 false false

([], 1) -> 0;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> 0 in list_nth) : NatList -> Nat -> Nat)
0.00361399999997 false false

([2], 0) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> 2 in list_nth) : NatList -> Nat -> Nat)
0.00361300000009 false false

([2], 1) -> 0;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> 0 in list_nth) : NatList -> Nat -> Nat)
0.00360799999999 false false

([1, 2], 0) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> 1 in list_nth) : NatList -> Nat -> Nat)
0.00368099999992 false false

([1, 2], 1) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> S n in list_nth) : NatList -> Nat -> Nat)
0.00363500000003 false false

([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> 1 in list_nth) : NatList -> Nat -> Nat)
0.00360599999999 false false

([3, 2, 1], 0) -> 3;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> 3 in list_nth) : NatList -> Nat -> Nat)
0.00366600000007 false false

([2, 1], 0) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> 2 in list_nth) : NatList -> Nat -> Nat)
0.00370500000008 false false

([2, 1], 1) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> n in list_nth) : NatList -> Nat -> Nat)
0.00358000000006 false false

([1, 2], 0) -> 1;
([1], 0) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> 1 in list_nth) : NatList -> Nat -> Nat)
0.00361999999996 false false

([2], 1) -> 0;
([3, 2, 1], 2) -> 1;
=================================
NOSOL

([1], 0) -> 1;
([3, 2, 1], 1) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> S n in list_nth) : NatList -> Nat -> Nat)
0.00358699999992 false false

([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
NOSOL

([1, 2], 0) -> 1;
([3, 2, 1], 0) -> 3;
=================================
NOSOL

([2], 1) -> 0;
([3, 2, 1], 0) -> 3;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case n of
    Z y1 -> 
      3

    S y1 -> 
      0 in list_nth) : NatList -> Nat -> Nat)
0.00473899999997 false false

([2], 0) -> 2;
([3, 2, 1], 0) -> 3;
=================================
NOSOL

([2], 0) -> 2;
([1, 2], 0) -> 1;
=================================
NOSOL

([], 0) -> 0;
([2, 1], 1) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> n in list_nth) : NatList -> Nat -> Nat)
0.00358899999992 false false

([], 1) -> 0;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      1 in list_nth) : NatList -> Nat -> Nat)
0.00521600000002 false false

([1], 1) -> 0;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case n of
    Z y1 -> 
      3

    S y1 -> 
      y1 in list_nth) : NatList -> Nat -> Nat)
0.00465299999996 false false

([2, 1], 0) -> 2;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 2) -> 1;
=================================
NOSOL

([], 1) -> 0;
([1, 2], 0) -> 1;
([2, 1], 1) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      1 in list_nth) : NatList -> Nat -> Nat)
0.00574299999994 false false

([], 0) -> 0;
([], 1) -> 0;
([1, 2], 1) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      S n in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      S (list_nth (#2.2 y1) n) in list_nth) : NatList -> Nat -> Nat)
0.0058019999999 false false

([], 0) -> 0;
([2], 0) -> 2;
([2, 1], 0) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      #2.1 y1 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      n

    Cons y1 -> 
      list_nth (#2.2 y1) 2 in list_nth) : NatList -> Nat -> Nat)
0.00556200000005 false false

([], 1) -> 0;
([2], 0) -> 2;
([1, 2], 0) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      #2.1 y1 in list_nth) : NatList -> Nat -> Nat)
0.00623300000007 false false

([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
=================================
NOSOL

([], 0) -> 0;
([1, 2], 0) -> 1;
([2, 1], 1) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      1 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      n

    Cons y1 -> 
      list_nth (#2.2 y1) 1 in list_nth) : NatList -> Nat -> Nat)
0.00625100000002 false false

([2], 0) -> 2;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> S
    (case n of
      Z y1 -> 
        1

      S y1 -> 
        case y1 of
          Z y2 -> 
            n

          S y2 -> 
            0) in list_nth) : NatList -> Nat -> Nat)
0.00986400000011 false false

([2], 0) -> 2;
([1], 0) -> 1;
([3, 2, 1], 1) -> 2;
=================================
NOSOL

([2], 1) -> 0;
([1, 2], 0) -> 1;
([1], 1) -> 0;
([3, 2, 1], 0) -> 3;
=================================
NOSOL

([], 0) -> 0;
([1], 1) -> 0;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
None
([], 0) -> 0;
([2], 0) -> 2;
([1, 2], 1) -> 2;
([2, 1], 0) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      n

    Cons y1 -> 
      list_nth (#2.2 y1) 2 in list_nth) : NatList -> Nat -> Nat)
0.00705300000004 false false

([], 0) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([3, 2, 1], 0) -> 3;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          0 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) n in list_nth) : NatList -> Nat -> Nat)
0.0420300000001 false false

([], 1) -> 0;
([1, 2], 1) -> 2;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
None
([], 1) -> 0;
([2], 1) -> 0;
([2, 1], 0) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case n of
    Z y1 -> 
      2

    S y1 -> 
      y1 in list_nth) : NatList -> Nat -> Nat)
0.00604999999996 false false

([1, 2], 1) -> 2;
([1], 0) -> 1;
([2, 1], 0) -> 2;
([3, 2, 1], 0) -> 3;
=================================
NOSOL

([], 0) -> 0;
([1], 0) -> 1;
([2, 1], 1) -> 1;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      1 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      n

    Cons y1 -> 
      list_nth (#2.2 y1) (#2.1 y1) in list_nth) : NatList -> Nat -> Nat)
0.00642599999992 false false

([2], 1) -> 0;
([1, 2], 0) -> 1;
([2, 1], 0) -> 2;
([3, 2, 1], 0) -> 3;
=================================
NOSOL

([2], 0) -> 2;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 1) -> 2;
=================================
NOSOL

([], 0) -> 0;
([], 1) -> 0;
([1, 2], 1) -> 2;
([1], 1) -> 0;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          0

        S y2 -> 
          y2

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          0

        Cons y2 -> 
          S (list_nth (#2.2 y2) (#2.1 y2)) in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          0

        S y2 -> 
          y2

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          0

        Cons y2 -> 
          S (list_nth (#2.2 y2) (#2.1 y2)) in list_nth) : NatList -> Nat -> Nat)
0.030467 false false

([2], 1) -> 0;
([1, 2], 1) -> 2;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 2) -> 1;
=================================
NOSOL

([], 0) -> 0;
([2], 0) -> 2;
([1, 2], 0) -> 1;
([2, 1], 0) -> 2;
([3, 2, 1], 0) -> 3;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      #2.1 y1 in list_nth) : NatList -> Nat -> Nat)
0.00596799999994 false false

([2], 0) -> 2;
([1, 2], 0) -> 1;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 2) -> 1;
=================================
NOSOL

([], 1) -> 0;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([2, 1], 0) -> 2;
([3, 2, 1], 0) -> 3;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          0

        Cons y2 -> 
          #2.1 y1 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          list_nth (#2.2 y1) n

        Cons y2 -> 
          #2.1 y1 in list_nth) : NatList -> Nat -> Nat)
0.046701 false false

([], 0) -> 0;
([2], 1) -> 0;
([1], 1) -> 0;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0381259999999 true true

([2], 1) -> 0;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([3, 2, 1], 1) -> 2;
=================================
NOSOL

([], 0) -> 0;
([], 1) -> 0;
([1, 2], 0) -> 1;
([1], 0) -> 1;
([3, 2, 1], 0) -> 3;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      #2.1 y1 in list_nth) : NatList -> Nat -> Nat)
0.00629499999991 false false

([], 0) -> 0;
([], 1) -> 0;
([1], 0) -> 1;
([2, 1], 0) -> 2;
([3, 2, 1], 1) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          0

        S y2 -> 
          0

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          1

        Cons y2 -> 
          2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          0

        S y2 -> 
          0

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          S (list_nth (#2.2 y1) n)

        Cons y2 -> 
          2 in list_nth) : NatList -> Nat -> Nat)
0.0361190000001 false false

([], 0) -> 0;
([], 1) -> 0;
([1, 2], 1) -> 2;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          0

        S y2 -> 
          0

    Cons y1 -> 
      case n of
        Z y2 -> 
          3

        S y2 -> 
          S n in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          0

        S y2 -> 
          0

    Cons y1 -> 
      case n of
        Z y2 -> 
          S (list_nth (#2.2 y1) n)

        S y2 -> 
          S n in list_nth) : NatList -> Nat -> Nat)
0.0318299999999 false false

([], 0) -> 0;
([], 1) -> 0;
([1], 1) -> 0;
([2, 1], 1) -> 1;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
None
([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1], 0) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          0

        S y2 -> 
          0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          0 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          0

        S y2 -> 
          0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) n in list_nth) : NatList -> Nat -> Nat)
0.056967 false false

([], 0) -> 0;
([], 1) -> 0;
([1, 2], 1) -> 2;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 1) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0930410000001 true true

([], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([2, 1], 0) -> 2;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0366770000001 true true

([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([2, 1], 0) -> 2;
([3, 2, 1], 1) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.02829 true true

([2], 0) -> 2;
([1, 2], 0) -> 1;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([3, 2, 1], 1) -> 2;
=================================
NOSOL

([], 0) -> 0;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([2, 1], 1) -> 1;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0539670000001 true true

([], 0) -> 0;
([2], 0) -> 2;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([2, 1], 0) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0643359999999 true true

([], 0) -> 0;
([], 1) -> 0;
([1], 0) -> 1;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          0

        S y2 -> 
          0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          1 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          0

        S y2 -> 
          0

    Cons y1 -> 
      case n of
        Z y2 -> 
          S (list_nth (#2.2 y1) n)

        S y2 -> 
          n in list_nth) : NatList -> Nat -> Nat)
0.0858040000001 false false

([2], 1) -> 0;
([1, 2], 0) -> 1;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 2) -> 1;
=================================
NOSOL

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([2, 1], 0) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.120296 true true

([], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([2, 1], 0) -> 2;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.044482 true true

([], 0) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0321939999999 true true

([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 1) -> 0;
([2, 1], 1) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0286120000001 true true

([], 1) -> 0;
([2], 0) -> 2;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          S n in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.044265 false true

([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0327500000001 false true

([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 2) -> 1;
=================================
NOSOL

([], 0) -> 0;
([2], 0) -> 2;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.036065 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([2, 1], 1) -> 1;
([3, 2, 1], 1) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          #2.1 y1

        Cons y2 -> 
          #2.1 y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.125501 false true

([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0325780000001 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 1) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.074339 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0809589999999 true true

([], 0) -> 0;
([2], 0) -> 2;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.037744 true true

([], 0) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0703559999999 true true

([], 0) -> 0;
([2], 0) -> 2;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0807890000001 true true

([2], 0) -> 2;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 2) -> 1;
=================================
NOSOL

([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 1) -> 2;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.033285 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1], 0) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0872159999999 false true

([], 1) -> 0;
([2], 0) -> 2;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0349430000001 true true

([], 0) -> 0;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.036795 true true

([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0358430000001 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([2, 1], 0) -> 2;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0815130000001 true true

([], 0) -> 0;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 1) -> 1;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0382119999999 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 1) -> 0;
([1, 2], 1) -> 2;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.134482 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.086284 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.077622 true true

([], 0) -> 0;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 1) -> 0;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0695639999999 true true

([], 0) -> 0;
([2], 0) -> 2;
([1, 2], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0402280000001 true true

([], 1) -> 0;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.036795 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1], 1) -> 0;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.092592 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0854449999999 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0950029999999 true true

([], 0) -> 0;
([2], 0) -> 2;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0406399999999 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 1) -> 0;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0918469999999 true true

([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.059624 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1], 0) -> 1;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.088708 true true

([], 0) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0392589999999 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([2, 1], 0) -> 2;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0957060000001 true true

([], 0) -> 0;
([2], 0) -> 2;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0417319999999 true true

([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0374879999999 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.100432 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.092488 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0957820000001 true true

([], 0) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0427589999999 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.096264 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0914230000001 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.177127 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.095204 true true

([], 0) -> 0;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0444660000001 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0966060000001 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.100777 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.103235 true true

([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.041426 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.103523 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.103112 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.103711 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.104468 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.100859 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0994920000001 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.103867 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.109731 true true

