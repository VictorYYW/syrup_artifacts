([], []) -> [];
=================================
fix (f : list * list -> list) = fun (x:list * list) -> Nil

0.0000 false

([], [0]) -> [0];
=================================
fix (f : list * list -> list) = fun (x:list * list) -> x . 1

0.0033 false

([], [1]) -> [1];
=================================
fix (f : list * list -> list) = fun (x:list * list) -> x . 1

0.0038 false

([], [1, 0]) -> [1, 0];
=================================
fix (f : list * list -> list) = fun (x:list * list) -> x . 1

0.0056 false

([0], []) -> [0];
=================================
fix (f : list * list -> list) = fun (x:list * list) -> x . 0

0.0033 false

([1], []) -> [1];
=================================
fix (f : list * list -> list) = fun (x:list * list) -> x . 0

0.0037 false

([1], [0]) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) -> Cons (Un_Cons (x . 0) . 0, x . 1)

0.0218 false

([0, 1], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    Cons (Un_Cons (Un_Cons (x . 0) . 1) . 0,
           Cons (Un_Cons (x . 0) . 0, x . 1))

0.1722 false

([], []) -> [];
([], [0]) -> [0];
=================================
fix (f : list * list -> list) = fun (x:list * list) -> x . 1

0.0034 false

([1], [0]) -> [1, 0];
([0, 1], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) -> Cons (1, Cons (0, Nil))

0.1110 false

([0], []) -> [0];
([0, 1], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> Cons (0, x . 0)
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> x . 0
                     | Cons _ -> Cons (Un_Cons (Un_Cons (x . 0) . 1) . 0,
                                        f (x . 1, x . 1)))

0.0666 false

([], [1]) -> [1];
([1], []) -> [1];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) -> match x . 0 with
                           | Nil _ -> x . 1
                           | Cons _ -> x . 0

0.0066 false

([], [1, 0]) -> [1, 0];
([0], []) -> [0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) -> match x . 0 with
                           | Nil _ -> x . 1
                           | Cons _ -> x . 0

0.0102 false

([0], []) -> [0];
([1], []) -> [1];
=================================
fix (f : list * list -> list) = fun (x:list * list) -> x . 0

0.0034 false

([1], []) -> [1];
([1], [0]) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) -> Cons (Un_Cons (x . 0) . 0, x . 1)

0.0106 false

([1], []) -> [1];
([0, 1], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> Cons (0, x . 0)
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> x . 0
                     | Cons _ -> Cons (Un_Cons (Un_Cons (x . 0) . 1) . 0,
                                        f (x . 1, x . 1)))

0.0214 false

([], [0]) -> [0];
([], [1, 0]) -> [1, 0];
=================================
fix (f : list * list -> list) = fun (x:list * list) -> x . 1

0.0035 false

([], [0]) -> [0];
([0], []) -> [0];
=================================
fix (f : list * list -> list) = fun (x:list * list) -> Cons (0, Nil)

0.0053 false

([0], []) -> [0];
([1], []) -> [1];
([1], [0]) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) -> Cons (Un_Cons (x . 0) . 0, x . 1)

0.0120 false

([], []) -> [];
([], [0]) -> [0];
([], [1, 0]) -> [1, 0];
=================================
fix (f : list * list -> list) = fun (x:list * list) -> x . 1

0.0034 false

([], []) -> [];
([1], []) -> [1];
([1], [0]) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 1 with
      | Nil _ -> x . 0
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, x . 1)

0.0180 false

([], []) -> [];
([1], []) -> [1];
([0, 1], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 0) . 0 with
                     | O _ -> Cons (Un_Cons (Un_Cons (x . 0) . 1) . 0,
                                     Cons (Un_Cons (x . 0) . 0, x . 1))
                     | S _ -> x . 0)

0.0290 false

([], [0]) -> [0];
([], [1, 0]) -> [1, 0];
([1], []) -> [1];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) -> match x . 1 with
                           | Nil _ -> x . 0
                           | Cons _ -> x . 1

0.0061 false

([], [0]) -> [0];
([0], []) -> [0];
([0, 1], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> Cons (0, x . 0)
      | Cons _ -> (match Un_Cons (x . 0) . 0 with
                     | O _ -> f (Un_Cons (x . 0) . 1, x . 1)
                     | S _ -> Cons (Un_Cons (x . 0) . 0, f (x . 1, x . 1)))

0.0720 false

([], []) -> [];
([], [1, 0]) -> [1, 0];
([0], []) -> [0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) -> match x . 1 with
                           | Nil _ -> x . 0
                           | Cons _ -> x . 1

0.0101 false

([], [1]) -> [1];
([], [1, 0]) -> [1, 0];
([1], []) -> [1];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) -> match x . 1 with
                           | Nil _ -> x . 0
                           | Cons _ -> x . 1

0.0068 false

([], []) -> [];
([0], []) -> [0];
([1], [0]) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 1 with
      | Nil _ -> x . 0
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, x . 1)

0.0222 false

([], []) -> [];
([], [1, 0]) -> [1, 0];
([0, 1], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (1, Cons (0, x . 1))

0.1204 false

([], [0]) -> [0];
([], [1, 0]) -> [1, 0];
([0], []) -> [0];
([1], [0]) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, x . 1)

0.0342 false

([], []) -> [];
([], [0]) -> [0];
([], [1]) -> [1];
([0], []) -> [0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) -> match x . 1 with
                           | Nil _ -> x . 0
                           | Cons _ -> x . 1

0.0098 false

([], []) -> [];
([], [1]) -> [1];
([0], []) -> [0];
([1], []) -> [1];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) -> match x . 1 with
                           | Nil _ -> x . 0
                           | Cons _ -> x . 1

0.0055 false

([], [0]) -> [0];
([0], []) -> [0];
([1], []) -> [1];
([1], [0]) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, x . 1)

0.0266 false

([], []) -> [];
([], [1]) -> [1];
([], [1, 0]) -> [1, 0];
([0], []) -> [0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) -> match x . 1 with
                           | Nil _ -> x . 0
                           | Cons _ -> x . 1

0.0057 false

([], [0]) -> [0];
([1], []) -> [1];
([1], [0]) -> [1, 0];
([0, 1], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 0) . 0 with
                     | O _ -> Cons (Un_Cons (Un_Cons (x . 0) . 1) . 0,
                                     Cons (Un_Cons (x . 0) . 0, x . 1))
                     | S _ -> Cons (Un_Cons (x . 0) . 0, x . 1))

0.0315 false

([], [0]) -> [0];
([], [1]) -> [1];
([], [1, 0]) -> [1, 0];
([0, 1], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 1 with
      | Nil _ -> Cons (Un_Cons (Un_Cons (x . 0) . 1) . 0,
                        Cons (Un_Cons (x . 0) . 0, x . 1))
      | Cons _ -> x . 1

0.2856 false

([], [0]) -> [0];
([], [1, 0]) -> [1, 0];
([1], []) -> [1];
([0, 1], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 1 with
      | Nil _ -> (match x . 0 with
                    | Nil _ -> Cons (0, x . 1)
                    | Cons _ -> (match Un_Cons (x . 0) . 1 with
                                   | Nil _ -> x . 0
                                   | Cons _ -> Cons (Un_Cons (Un_Cons (x . 0)
                                                                . 1)
                                                       . 0,
                                                      f (x . 1, x . 1))))
      | Cons _ -> x . 1

0.0403 false

([], []) -> [];
([], [0]) -> [0];
([], [1, 0]) -> [1, 0];
([0, 1], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (1, Cons (0, x . 1))

0.0569 false

([], [1]) -> [1];
([], [1, 0]) -> [1, 0];
([1], []) -> [1];
([1], [0]) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, x . 1)

0.0177 false

([], []) -> [];
([], [0]) -> [0];
([], [1]) -> [1];
([], [1, 0]) -> [1, 0];
([0], []) -> [0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) -> match x . 0 with
                           | Nil _ -> x . 1
                           | Cons _ -> x . 0

0.0100 false

([], []) -> [];
([], [0]) -> [0];
([], [1]) -> [1];
([], [1, 0]) -> [1, 0];
([1], []) -> [1];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) -> match x . 0 with
                           | Nil _ -> x . 1
                           | Cons _ -> x . 0

0.0054 false

([], []) -> [];
([], [1]) -> [1];
([], [1, 0]) -> [1, 0];
([0], []) -> [0];
([1], [0]) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, x . 1)

0.0163 false

([], []) -> [];
([], [1]) -> [1];
([1], []) -> [1];
([1], [0]) -> [1, 0];
([0, 1], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (Un_Cons (x . 0) . 1) . 0,
                                        Cons (Un_Cons (x . 0) . 0, x . 1)))

0.0524 false

([], []) -> [];
([], [1]) -> [1];
([], [1, 0]) -> [1, 0];
([0], []) -> [0];
([0, 1], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> x . 0
                     | Cons _ -> Cons (Un_Cons (Un_Cons (x . 0) . 1) . 0,
                                        Cons (Un_Cons (x . 0) . 0, x . 1)))

0.1150 false

([], [1]) -> [1];
([], [1, 0]) -> [1, 0];
([0], []) -> [0];
([1], [0]) -> [1, 0];
([0, 1], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> (match x . 1 with
                    | Nil _ -> Cons (0, x . 1)
                    | Cons _ -> x . 1)
      | Cons _ -> (match Un_Cons (x . 0) . 0 with
                     | O _ -> f (Un_Cons (x . 0) . 1, x . 1)
                     | S _ -> Cons (Un_Cons (x . 0) . 0,
                                     f (Un_Cons (x . 0) . 1, x . 1)))

0.1763 false

([], []) -> [];
([], [0]) -> [0];
([], [1]) -> [1];
([0], []) -> [0];
([0, 1], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> x . 0
                     | Cons _ -> Cons (Un_Cons (Un_Cons (x . 0) . 1) . 0,
                                        Cons (Un_Cons (x . 0) . 0, x . 1)))

0.1207 false

([], [1]) -> [1];
([0], []) -> [0];
([1], []) -> [1];
([1], [0]) -> [1, 0];
([0, 1], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (Un_Cons (x . 0) . 1) . 0,
                                        Cons (Un_Cons (x . 0) . 0, x . 1)))

0.0380 false

([], []) -> [];
([], [1]) -> [1];
([], [1, 0]) -> [1, 0];
([1], [0]) -> [1, 0];
([0, 1], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (1, Cons (0, Nil))

0.5426 false

([], []) -> [];
([], [1]) -> [1];
([0], []) -> [0];
([1], [0]) -> [1, 0];
([0, 1], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (Un_Cons (x . 0) . 1) . 0,
                                        Cons (Un_Cons (x . 0) . 0, x . 1)))

1.3990 false

([], [0]) -> [0];
([], [1]) -> [1];
([], [1, 0]) -> [1, 0];
([1], []) -> [1];
([1], [0]) -> [1, 0];
([0, 1], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (Un_Cons (x . 0) . 1) . 0,
                                        Cons (Un_Cons (x . 0) . 0, x . 1)))

0.0313 false

([], []) -> [];
([], [0]) -> [0];
([], [1, 0]) -> [1, 0];
([0], []) -> [0];
([1], []) -> [1];
([1], [0]) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, x . 1)

0.0182 false

([], []) -> [];
([], [0]) -> [0];
([], [1]) -> [1];
([], [1, 0]) -> [1, 0];
([0], []) -> [0];
([0, 1], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> x . 0
                     | Cons _ -> Cons (Un_Cons (Un_Cons (x . 0) . 1) . 0,
                                        Cons (Un_Cons (x . 0) . 0, x . 1)))

0.1236 false

([], []) -> [];
([], [1]) -> [1];
([], [1, 0]) -> [1, 0];
([0], []) -> [0];
([1], []) -> [1];
([1], [0]) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, x . 1)

0.0147 false

([], []) -> [];
([], [1]) -> [1];
([], [1, 0]) -> [1, 0];
([0], []) -> [0];
([1], [0]) -> [1, 0];
([0, 1], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (Un_Cons (x . 0) . 1) . 0,
                                        Cons (Un_Cons (x . 0) . 0, x . 1)))

1.4770 false

([], []) -> [];
([], [0]) -> [0];
([], [1]) -> [1];
([], [1, 0]) -> [1, 0];
([1], [0]) -> [1, 0];
([0, 1], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (1, Cons (0, Nil))

0.1538 false

([], [1]) -> [1];
([], [1, 0]) -> [1, 0];
([0], []) -> [0];
([1], []) -> [1];
([1], [0]) -> [1, 0];
([0, 1], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (Un_Cons (x . 0) . 1) . 0,
                                        Cons (Un_Cons (x . 0) . 0, x . 1)))

0.0379 false

([], []) -> [];
([], [0]) -> [0];
([], [1]) -> [1];
([0], []) -> [0];
([1], []) -> [1];
([0, 1], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> x . 0
                     | Cons _ -> Cons (Un_Cons (Un_Cons (x . 0) . 1) . 0,
                                        Cons (Un_Cons (x . 0) . 0, x . 1)))

0.0308 false

([], []) -> [];
([], [0]) -> [0];
([], [1]) -> [1];
([0], []) -> [0];
([1], [0]) -> [1, 0];
([0, 1], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (Un_Cons (x . 0) . 1) . 0,
                                        Cons (Un_Cons (x . 0) . 0, x . 1)))

0.3106 false

([], [0]) -> [0];
([], [1]) -> [1];
([], [1, 0]) -> [1, 0];
([0], []) -> [0];
([1], []) -> [1];
([0, 1], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> (match x . 1 with
                    | Nil _ -> Cons (0, x . 0)
                    | Cons _ -> x . 1)
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> x . 0
                     | Cons _ -> Cons (Un_Cons (Un_Cons (x . 0) . 1) . 0,
                                        f (x . 1, x . 1)))

0.0488 false

([], []) -> [];
([], [0]) -> [0];
([], [1]) -> [1];
([], [1, 0]) -> [1, 0];
([0], []) -> [0];
([1], []) -> [1];
([1], [0]) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, x . 1)

0.0186 false

([], []) -> [];
([], [0]) -> [0];
([], [1]) -> [1];
([], [1, 0]) -> [1, 0];
([0], []) -> [0];
([1], []) -> [1];
([0, 1], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> x . 0
                     | Cons _ -> Cons (Un_Cons (Un_Cons (x . 0) . 1) . 0,
                                        Cons (Un_Cons (x . 0) . 0, x . 1)))

0.0312 false

([], []) -> [];
([], [0]) -> [0];
([], [1]) -> [1];
([], [1, 0]) -> [1, 0];
([0], []) -> [0];
([1], [0]) -> [1, 0];
([0, 1], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (Un_Cons (x . 0) . 1) . 0,
                                        Cons (Un_Cons (x . 0) . 0, x . 1)))

0.3190 false

([], []) -> [];
([], [0]) -> [0];
([], [1]) -> [1];
([], [1, 0]) -> [1, 0];
([1], []) -> [1];
([1], [0]) -> [1, 0];
([0, 1], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (Un_Cons (x . 0) . 1) . 0,
                                        Cons (Un_Cons (x . 0) . 0, x . 1)))

0.0445 false

([], []) -> [];
([], [0]) -> [0];
([], [1]) -> [1];
([0], []) -> [0];
([1], []) -> [1];
([1], [0]) -> [1, 0];
([0, 1], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (Un_Cons (x . 0) . 1) . 0,
                                        Cons (Un_Cons (x . 0) . 0, x . 1)))

0.0508 false

([], []) -> [];
([], [0]) -> [0];
([], [1, 0]) -> [1, 0];
([0], []) -> [0];
([1], []) -> [1];
([1], [0]) -> [1, 0];
([0, 1], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (Un_Cons (x . 0) . 1) . 0,
                                        Cons (Un_Cons (x . 0) . 0, x . 1)))

0.0508 false

([], []) -> [];
([], [1]) -> [1];
([], [1, 0]) -> [1, 0];
([0], []) -> [0];
([1], []) -> [1];
([1], [0]) -> [1, 0];
([0, 1], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (Un_Cons (x . 0) . 1) . 0,
                                        Cons (Un_Cons (x . 0) . 0, x . 1)))

0.0537 false

([], [0]) -> [0];
([], [1]) -> [1];
([], [1, 0]) -> [1, 0];
([0], []) -> [0];
([1], []) -> [1];
([1], [0]) -> [1, 0];
([0, 1], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (Un_Cons (x . 0) . 1) . 0,
                                        Cons (Un_Cons (x . 0) . 0, x . 1)))

0.0640 false

([], []) -> [];
([], [0]) -> [0];
([], [1]) -> [1];
([], [1, 0]) -> [1, 0];
([0], []) -> [0];
([1], []) -> [1];
([1], [0]) -> [1, 0];
([0, 1], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (Un_Cons (x . 0) . 1) . 0,
                                        Cons (Un_Cons (x . 0) . 0, x . 1)))

0.0516 false

