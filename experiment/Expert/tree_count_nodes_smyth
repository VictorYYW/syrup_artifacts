Leaf () -> 0;
=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_count_nodes = \tree -> 0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.00817099999995 false false

Node (Leaf (), 0, Leaf ()) -> 1;
=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_count_nodes = \tree -> 1 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.008331 false false

Node (Node (Leaf (), 0, Leaf ()), 0, Leaf ()) -> 2;
=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_count_nodes = \tree -> 2 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.00841700000001 false false

Node (Leaf (), 0, Node(Leaf (), 0, Leaf ())) -> 2;
=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_count_nodes = \tree -> 2 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0085140000001 false false

Node (Node (Leaf (), 0, Node (Leaf (), 0, Leaf ())), 0, Leaf ()) -> 3;
=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_count_nodes = \tree -> 3 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.00865500000009 false false

Node (Leaf (), 0, Node (Leaf (), 0, Node (Leaf (), 0, Leaf ()))) -> 3;
=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_count_nodes = \tree -> 3 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.00853699999993 false false

Leaf () -> 0;
Node (Leaf (), 0, Leaf ()) -> 1;
=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      1

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (tree_count_nodes (#3.1 y1))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0111569999999 false false

Node (Node (Leaf (), 0, Leaf ()), 0, Leaf ()) -> 2;
Node (Node (Leaf (), 0, Node (Leaf (), 0, Leaf ())), 0, Leaf ()) -> 3;
=================================
NOSOL

Node (Node (Leaf (), 0, Node (Leaf (), 0, Leaf ())), 0, Leaf ()) -> 3;
Node (Leaf (), 0, Node (Leaf (), 0, Node (Leaf (), 0, Leaf ()))) -> 3;
=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_count_nodes = \tree -> 3 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.00924800000007 false false

Leaf () -> 0;
Node (Node (Leaf (), 0, Node (Leaf (), 0, Leaf ())), 0, Leaf ()) -> 3;
=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      3

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (S (S (tree_count_nodes (#3.3 y1))))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0126379999999 false false

Leaf () -> 0;
Node (Leaf (), 0, Node (Leaf (), 0, Node (Leaf (), 0, Leaf ()))) -> 3;
=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      3

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (tree_count_nodes (#3.3 y1))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0255689999999 false false

Node (Leaf (), 0, Leaf ()) -> 1;
Node (Node (Leaf (), 0, Leaf ()), 0, Leaf ()) -> 2;
=================================
NOSOL

Node (Node (Leaf (), 0, Leaf ()), 0, Leaf ()) -> 2;
Node (Leaf (), 0, Node (Leaf (), 0, Node (Leaf (), 0, Leaf ()))) -> 3;
=================================
NOSOL

Node (Leaf (), 0, Leaf ()) -> 1;
Node (Node (Leaf (), 0, Node (Leaf (), 0, Leaf ())), 0, Leaf ()) -> 3;
=================================
NOSOL

Node (Leaf (), 0, Leaf ()) -> 1;
Node (Leaf (), 0, Node (Leaf (), 0, Node (Leaf (), 0, Leaf ()))) -> 3;
=================================
NOSOL

Node (Node (Leaf (), 0, Leaf ()), 0, Leaf ()) -> 2;
Node (Leaf (), 0, Node(Leaf (), 0, Leaf ())) -> 2;
=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_count_nodes = \tree -> 2 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.00916400000006 false false

Node (Node (Leaf (), 0, Leaf ()), 0, Leaf ()) -> 2;
Node (Node (Leaf (), 0, Node (Leaf (), 0, Leaf ())), 0, Leaf ()) -> 3;
Node (Leaf (), 0, Node (Leaf (), 0, Node (Leaf (), 0, Leaf ()))) -> 3;
=================================
NOSOL

Leaf () -> 0;
Node (Leaf (), 0, Leaf ()) -> 1;
Node (Leaf (), 0, Node(Leaf (), 0, Leaf ())) -> 2;
=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (tree_count_nodes (#3.3 y1))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (tree_count_nodes (#3.3 y1))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0151800000001 false false

Node (Leaf (), 0, Leaf ()) -> 1;
Node (Leaf (), 0, Node(Leaf (), 0, Leaf ())) -> 2;
Node (Node (Leaf (), 0, Node (Leaf (), 0, Leaf ())), 0, Leaf ()) -> 3;
=================================
NOSOL

Leaf () -> 0;
Node (Leaf (), 0, Leaf ()) -> 1;
Node (Leaf (), 0, Node (Leaf (), 0, Node (Leaf (), 0, Leaf ()))) -> 3;
=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (tree_count_nodes (#3.3 y1))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (tree_count_nodes (#3.3 y1))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.016239 false false

Node (Leaf (), 0, Leaf ()) -> 1;
Node (Leaf (), 0, Node(Leaf (), 0, Leaf ())) -> 2;
Node (Leaf (), 0, Node (Leaf (), 0, Node (Leaf (), 0, Leaf ()))) -> 3;
=================================
NOSOL

Node (Node (Leaf (), 0, Leaf ()), 0, Leaf ()) -> 2;
Node (Leaf (), 0, Node(Leaf (), 0, Leaf ())) -> 2;
Node (Leaf (), 0, Node (Leaf (), 0, Node (Leaf (), 0, Leaf ()))) -> 3;
=================================
NOSOL

Node (Leaf (), 0, Leaf ()) -> 1;
Node (Node (Leaf (), 0, Leaf ()), 0, Leaf ()) -> 2;
Node (Leaf (), 0, Node(Leaf (), 0, Leaf ())) -> 2;
=================================
NOSOL

Node (Leaf (), 0, Node(Leaf (), 0, Leaf ())) -> 2;
Node (Node (Leaf (), 0, Node (Leaf (), 0, Leaf ())), 0, Leaf ()) -> 3;
Node (Leaf (), 0, Node (Leaf (), 0, Node (Leaf (), 0, Leaf ()))) -> 3;
=================================
NOSOL

Leaf () -> 0;
Node (Leaf (), 0, Node(Leaf (), 0, Leaf ())) -> 2;
Node (Leaf (), 0, Node (Leaf (), 0, Node (Leaf (), 0, Leaf ()))) -> 3;
=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (tree_count_nodes (#3.3 y1))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (tree_count_nodes (#3.3 y1))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.020495 false false

Leaf () -> 0;
Node (Node (Leaf (), 0, Node (Leaf (), 0, Leaf ())), 0, Leaf ()) -> 3;
Node (Leaf (), 0, Node (Leaf (), 0, Node (Leaf (), 0, Leaf ()))) -> 3;
=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      3

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0156159999999 false false

Leaf () -> 0;
Node (Leaf (), 0, Leaf ()) -> 1;
Node (Node (Leaf (), 0, Leaf ()), 0, Leaf ()) -> 2;
Node (Leaf (), 0, Node(Leaf (), 0, Leaf ())) -> 2;
=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.262803 true true

Leaf () -> 0;
Node (Leaf (), 0, Leaf ()) -> 1;
Node (Node (Leaf (), 0, Leaf ()), 0, Leaf ()) -> 2;
Node (Node (Leaf (), 0, Node (Leaf (), 0, Leaf ())), 0, Leaf ()) -> 3;
=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.261109 true true

Leaf () -> 0;
Node (Leaf (), 0, Leaf ()) -> 1;
Node (Node (Leaf (), 0, Leaf ()), 0, Leaf ()) -> 2;
Node (Leaf (), 0, Node (Leaf (), 0, Node (Leaf (), 0, Leaf ()))) -> 3;
=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.357893 true true

Node (Leaf (), 0, Leaf ()) -> 1;
Node (Leaf (), 0, Node(Leaf (), 0, Leaf ())) -> 2;
Node (Node (Leaf (), 0, Node (Leaf (), 0, Leaf ())), 0, Leaf ()) -> 3;
Node (Leaf (), 0, Node (Leaf (), 0, Node (Leaf (), 0, Leaf ()))) -> 3;
=================================
NOSOL

Leaf () -> 0;
Node (Leaf (), 0, Leaf ()) -> 1;
Node (Leaf (), 0, Node(Leaf (), 0, Leaf ())) -> 2;
Node (Leaf (), 0, Node (Leaf (), 0, Node (Leaf (), 0, Leaf ()))) -> 3;
=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (tree_count_nodes (#3.3 y1))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (tree_count_nodes (#3.3 y1))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.018945 false false

Leaf () -> 0;
Node (Leaf (), 0, Leaf ()) -> 1;
Node (Node (Leaf (), 0, Node (Leaf (), 0, Leaf ())), 0, Leaf ()) -> 3;
Node (Leaf (), 0, Node (Leaf (), 0, Node (Leaf (), 0, Leaf ()))) -> 3;
=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.365355 true true

Leaf () -> 0;
Node (Node (Leaf (), 0, Leaf ()), 0, Leaf ()) -> 2;
Node (Leaf (), 0, Node(Leaf (), 0, Leaf ())) -> 2;
Node (Node (Leaf (), 0, Node (Leaf (), 0, Leaf ())), 0, Leaf ()) -> 3;
=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.434855 true true

Node (Leaf (), 0, Leaf ()) -> 1;
Node (Node (Leaf (), 0, Leaf ()), 0, Leaf ()) -> 2;
Node (Leaf (), 0, Node(Leaf (), 0, Leaf ())) -> 2;
Node (Node (Leaf (), 0, Node (Leaf (), 0, Leaf ())), 0, Leaf ()) -> 3;
=================================
NOSOL

Leaf () -> 0;
Node (Node (Leaf (), 0, Leaf ()), 0, Leaf ()) -> 2;
Node (Node (Leaf (), 0, Node (Leaf (), 0, Leaf ())), 0, Leaf ()) -> 3;
Node (Leaf (), 0, Node (Leaf (), 0, Node (Leaf (), 0, Leaf ()))) -> 3;
=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.60304 true true

Node (Node (Leaf (), 0, Leaf ()), 0, Leaf ()) -> 2;
Node (Leaf (), 0, Node(Leaf (), 0, Leaf ())) -> 2;
Node (Node (Leaf (), 0, Node (Leaf (), 0, Leaf ())), 0, Leaf ()) -> 3;
Node (Leaf (), 0, Node (Leaf (), 0, Node (Leaf (), 0, Leaf ()))) -> 3;
=================================
NOSOL

Leaf () -> 0;
Node (Leaf (), 0, Leaf ()) -> 1;
Node (Node (Leaf (), 0, Leaf ()), 0, Leaf ()) -> 2;
Node (Leaf (), 0, Node(Leaf (), 0, Leaf ())) -> 2;
Node (Node (Leaf (), 0, Node (Leaf (), 0, Leaf ())), 0, Leaf ()) -> 3;
=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.357016 true true

Leaf () -> 0;
Node (Leaf (), 0, Leaf ()) -> 1;
Node (Node (Leaf (), 0, Leaf ()), 0, Leaf ()) -> 2;
Node (Leaf (), 0, Node(Leaf (), 0, Leaf ())) -> 2;
Node (Leaf (), 0, Node (Leaf (), 0, Node (Leaf (), 0, Leaf ()))) -> 3;
=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.44159 true true

Leaf () -> 0;
Node (Leaf (), 0, Leaf ()) -> 1;
Node (Node (Leaf (), 0, Leaf ()), 0, Leaf ()) -> 2;
Node (Node (Leaf (), 0, Node (Leaf (), 0, Leaf ())), 0, Leaf ()) -> 3;
Node (Leaf (), 0, Node (Leaf (), 0, Node (Leaf (), 0, Leaf ()))) -> 3;
=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.454646 true true

Leaf () -> 0;
Node (Leaf (), 0, Leaf ()) -> 1;
Node (Leaf (), 0, Node(Leaf (), 0, Leaf ())) -> 2;
Node (Node (Leaf (), 0, Node (Leaf (), 0, Leaf ())), 0, Leaf ()) -> 3;
Node (Leaf (), 0, Node (Leaf (), 0, Node (Leaf (), 0, Leaf ()))) -> 3;
=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.452939 true true

Leaf () -> 0;
Node (Node (Leaf (), 0, Leaf ()), 0, Leaf ()) -> 2;
Node (Leaf (), 0, Node(Leaf (), 0, Leaf ())) -> 2;
Node (Node (Leaf (), 0, Node (Leaf (), 0, Leaf ())), 0, Leaf ()) -> 3;
Node (Leaf (), 0, Node (Leaf (), 0, Node (Leaf (), 0, Leaf ()))) -> 3;
=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.724655 true true

Node (Leaf (), 0, Leaf ()) -> 1;
Node (Node (Leaf (), 0, Leaf ()), 0, Leaf ()) -> 2;
Node (Leaf (), 0, Node(Leaf (), 0, Leaf ())) -> 2;
Node (Node (Leaf (), 0, Node (Leaf (), 0, Leaf ())), 0, Leaf ()) -> 3;
Node (Leaf (), 0, Node (Leaf (), 0, Node (Leaf (), 0, Leaf ()))) -> 3;
=================================
NOSOL

Leaf () -> 0;
Node (Leaf (), 0, Leaf ()) -> 1;
Node (Node (Leaf (), 0, Leaf ()), 0, Leaf ()) -> 2;
Node (Leaf (), 0, Node(Leaf (), 0, Leaf ())) -> 2;
Node (Node (Leaf (), 0, Node (Leaf (), 0, Leaf ())), 0, Leaf ()) -> 3;
Node (Leaf (), 0, Node (Leaf (), 0, Node (Leaf (), 0, Leaf ()))) -> 3;
=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.53906 true true

