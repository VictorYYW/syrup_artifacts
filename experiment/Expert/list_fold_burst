(add, 0, []) -> 0;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) -> 0

0.0001 false

(add, 0, [1]) -> 1;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) -> Un_Cons (x . 2) . 0

0.0100 false

(add, 0, [2, 1]) -> 3;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) -> S (Un_Cons (x . 2) . 0)

0.0197 false

(add, 0, [3, 2, 1]) -> 6;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    x . 0 (Un_Cons (x . 2) . 0) (Un_Cons (x . 2) . 0)

0.0537 false

(add, 1, []) -> 1;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) -> x . 1

0.0127 false

(countOdd, 0, []) -> 0;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) -> 0

0.0001 false

(countOdd, 0, [1]) -> 1;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) -> Un_Cons (x . 2) . 0

0.0102 false

(countOdd, 0, [2, 1]) -> 1;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) -> S (x . 1)

0.0197 false

(countOdd, 0, [3, 2, 1]) -> 2;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) -> Un_S (Un_Cons (x . 2) . 0)

0.0541 false

(add, 1, []) -> 1;
(countOdd, 0, []) -> 0;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) -> x . 1

0.0127 false

(add, 0, [2, 1]) -> 3;
(add, 0, [3, 2, 1]) -> 6;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    x . 0 Un_S (Un_Cons (x . 2) . 0)
      (x . 0 Un_S (Un_Cons (x . 2) . 0) Un_S (Un_Cons (x . 2) . 0))

0.2833 false

(add, 0, []) -> 0;
(add, 0, [3, 2, 1]) -> 6;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (Un_Cons (x . 2) . 0) (Un_Cons (x . 2) . 0)

0.1042 false

(add, 0, [1]) -> 1;
(countOdd, 0, []) -> 0;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> Un_Cons (x . 2) . 0

0.0323 false

(add, 0, [3, 2, 1]) -> 6;
(countOdd, 0, [2, 1]) -> 1;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    x . 0 Un_S (Un_Cons (x . 2) . 0)
      (countOdd (Un_Cons (x . 2) . 0) (Un_Cons (x . 2) . 0))

5.8659 false

(countOdd, 0, [2, 1]) -> 1;
(countOdd, 0, [3, 2, 1]) -> 2;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) -> Un_S (Un_Cons (x . 2) . 0)

0.1127 false

(add, 0, [2, 1]) -> 3;
(countOdd, 0, [3, 2, 1]) -> 2;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    S (x . 0 (x . 1) (Un_Cons (x . 2) . 0))

1.2025 false

(countOdd, 0, []) -> 0;
(countOdd, 0, [1]) -> 1;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> Un_Cons (x . 2) . 0

0.0337 false

(add, 0, [1]) -> 1;
(add, 0, [2, 1]) -> 3;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    x . 0 (Un_Cons (x . 2) . 0) Un_S (Un_Cons (x . 2) . 0)

0.0375 false

(add, 0, [1]) -> 1;
(add, 1, []) -> 1;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) -> 1

0.0601 false

(add, 0, [2, 1]) -> 3;
(countOdd, 0, [1]) -> 1;
(countOdd, 0, [2, 1]) -> 1;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    x . 0 Un_S (Un_Cons (x . 2) . 0) (Un_Cons (x . 2) . 0)

0.7494 false

(add, 0, []) -> 0;
(add, 1, []) -> 1;
(countOdd, 0, []) -> 0;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) -> x . 1

0.0221 false

(add, 0, []) -> 0;
(add, 0, [1]) -> 1;
(add, 1, []) -> 1;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> Un_Cons (x . 2) . 0

0.0345 false

(add, 0, [1]) -> 1;
(add, 1, []) -> 1;
(countOdd, 0, [2, 1]) -> 1;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) -> 1

0.0649 false

(add, 0, [1]) -> 1;
(add, 1, []) -> 1;
(countOdd, 0, []) -> 0;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> Un_Cons (x . 2) . 0

1.2358 false

(add, 0, [3, 2, 1]) -> 6;
(add, 1, []) -> 1;
(countOdd, 0, []) -> 0;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (Un_Cons (x . 2) . 0) (Un_Cons (x . 2) . 0)

0.7437 false

(add, 0, []) -> 0;
(add, 0, [3, 2, 1]) -> 6;
(add, 1, []) -> 1;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (Un_Cons (x . 2) . 0) (Un_Cons (x . 2) . 0)

0.1101 false

(add, 0, [2, 1]) -> 3;
(add, 0, [3, 2, 1]) -> 6;
(countOdd, 0, [2, 1]) -> 1;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    x . 0 Un_S (Un_Cons (x . 2) . 0)
      (countOdd (Un_Cons (x . 2) . 0) (Un_Cons (x . 2) . 0))

0.2921 false

(add, 0, []) -> 0;
(add, 0, [2, 1]) -> 3;
(add, 1, []) -> 1;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> S (Un_Cons (x . 2) . 0)

0.0515 false

(add, 0, [3, 2, 1]) -> 6;
(countOdd, 0, [1]) -> 1;
(countOdd, 0, [3, 2, 1]) -> 2;
=================================
None
(add, 0, [1]) -> 1;
(add, 0, [3, 2, 1]) -> 6;
(countOdd, 0, []) -> 0;
(countOdd, 0, [1]) -> 1;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (f (x . 0, x . 1, Un_Cons (x . 2) . 1))
                    (Un_Cons (x . 2) . 0)

27.1936 true

(add, 0, [1]) -> 1;
(add, 0, [3, 2, 1]) -> 6;
(countOdd, 0, []) -> 0;
(countOdd, 0, [2, 1]) -> 1;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (f (x . 0, x . 1, Un_Cons (x . 2) . 1))
                    (Un_Cons (x . 2) . 0)

41.1541 true

(add, 0, []) -> 0;
(add, 0, [1]) -> 1;
(add, 1, []) -> 1;
(countOdd, 0, [2, 1]) -> 1;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> S (x . 1)

0.1661 false

(add, 0, []) -> 0;
(add, 0, [1]) -> 1;
(countOdd, 0, [1]) -> 1;
(countOdd, 0, [2, 1]) -> 1;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> S (x . 1)

0.1631 false

(add, 0, [2, 1]) -> 3;
(add, 1, []) -> 1;
(countOdd, 0, [2, 1]) -> 1;
(countOdd, 0, [3, 2, 1]) -> 2;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 S (x . 1) (Un_Cons (x . 2) . 0)

74.2980 false

(add, 0, [1]) -> 1;
(add, 0, [3, 2, 1]) -> 6;
(add, 1, []) -> 1;
(countOdd, 0, [2, 1]) -> 1;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (f (x . 0, x . 1, Un_Cons (x . 2) . 1))
                    (Un_Cons (x . 2) . 0)

77.8843 true

(add, 0, [1]) -> 1;
(add, 0, [3, 2, 1]) -> 6;
(add, 1, []) -> 1;
(countOdd, 0, [3, 2, 1]) -> 2;
=================================
None
(add, 0, []) -> 0;
(add, 0, [1]) -> 1;
(add, 0, [3, 2, 1]) -> 6;
(countOdd, 0, []) -> 0;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (f (x . 0, x . 1, Un_Cons (x . 2) . 1))
                    (Un_Cons (x . 2) . 0)

0.1555 true

(add, 0, [1]) -> 1;
(add, 0, [2, 1]) -> 3;
(add, 1, []) -> 1;
(countOdd, 0, [3, 2, 1]) -> 2;
=================================
None
(add, 0, []) -> 0;
(countOdd, 0, []) -> 0;
(countOdd, 0, [1]) -> 1;
(countOdd, 0, [3, 2, 1]) -> 2;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (f (x . 0, x . 1, Un_Cons (x . 2) . 1))
                    (Un_Cons (x . 2) . 0)

2.1917 true

(add, 0, []) -> 0;
(add, 0, [2, 1]) -> 3;
(countOdd, 0, []) -> 0;
(countOdd, 0, [1]) -> 1;
(countOdd, 0, [2, 1]) -> 1;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 Un_S (Un_Cons (x . 2) . 0) (Un_Cons (x . 2) . 0)

0.1799 false

(add, 0, [2, 1]) -> 3;
(add, 0, [3, 2, 1]) -> 6;
(add, 1, []) -> 1;
(countOdd, 0, []) -> 0;
(countOdd, 0, [3, 2, 1]) -> 2;
=================================
None
(add, 0, []) -> 0;
(add, 0, [3, 2, 1]) -> 6;
(add, 1, []) -> 1;
(countOdd, 0, [1]) -> 1;
(countOdd, 0, [3, 2, 1]) -> 2;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (f (x . 0, x . 1, Un_Cons (x . 2) . 1))
                    (Un_Cons (x . 2) . 0)

2.3527 true

(add, 0, [1]) -> 1;
(add, 1, []) -> 1;
(countOdd, 0, []) -> 0;
(countOdd, 0, [2, 1]) -> 1;
(countOdd, 0, [3, 2, 1]) -> 2;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (f (x . 0, x . 1, Un_Cons (x . 2) . 1))
                    (Un_Cons (x . 2) . 0)

23.7671 true

(add, 0, []) -> 0;
(add, 0, [1]) -> 1;
(add, 1, []) -> 1;
(countOdd, 0, []) -> 0;
(countOdd, 0, [1]) -> 1;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> Un_Cons (x . 2) . 0

0.0371 false

(add, 0, []) -> 0;
(add, 1, []) -> 1;
(countOdd, 0, [1]) -> 1;
(countOdd, 0, [2, 1]) -> 1;
(countOdd, 0, [3, 2, 1]) -> 2;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (f (x . 0, x . 1, Un_Cons (x . 2) . 1))
                    (Un_Cons (x . 2) . 0)

1.8779 true

(add, 0, [2, 1]) -> 3;
(add, 1, []) -> 1;
(countOdd, 0, []) -> 0;
(countOdd, 0, [1]) -> 1;
(countOdd, 0, [2, 1]) -> 1;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 Un_S (Un_Cons (x . 2) . 0) (Un_Cons (x . 2) . 0)

33.8951 false

(add, 0, [1]) -> 1;
(add, 0, [2, 1]) -> 3;
(add, 1, []) -> 1;
(countOdd, 0, [1]) -> 1;
(countOdd, 0, [2, 1]) -> 1;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 1 with
      | O _ -> x . 0 Un_S (Un_Cons (x . 2) . 0) (Un_Cons (x . 2) . 0)
      | S _ -> x . 1

28.2626 false

(add, 0, [1]) -> 1;
(add, 0, [2, 1]) -> 3;
(add, 1, []) -> 1;
(countOdd, 0, []) -> 0;
(countOdd, 0, [3, 2, 1]) -> 2;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (f (x . 0, x . 1, Un_Cons (x . 2) . 1))
                    (Un_Cons (x . 2) . 0)

91.9585 true

(add, 0, []) -> 0;
(add, 0, [3, 2, 1]) -> 6;
(add, 1, []) -> 1;
(countOdd, 0, [2, 1]) -> 1;
(countOdd, 0, [3, 2, 1]) -> 2;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 Un_S (Un_Cons (x . 2) . 0)
                    (countOdd (Un_Cons (x . 2) . 0) (Un_Cons (x . 2) . 0))

18.3567 false

(add, 0, [1]) -> 1;
(add, 0, [2, 1]) -> 3;
(add, 0, [3, 2, 1]) -> 6;
(countOdd, 0, []) -> 0;
(countOdd, 0, [1]) -> 1;
(countOdd, 0, [3, 2, 1]) -> 2;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (f (x . 0, x . 1, Un_Cons (x . 2) . 1))
                    (Un_Cons (x . 2) . 0)

6.0497 true

(add, 0, []) -> 0;
(add, 0, [2, 1]) -> 3;
(countOdd, 0, []) -> 0;
(countOdd, 0, [1]) -> 1;
(countOdd, 0, [2, 1]) -> 1;
(countOdd, 0, [3, 2, 1]) -> 2;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (f (x . 0, x . 1, Un_Cons (x . 2) . 1))
                    (Un_Cons (x . 2) . 0)

8.8738 true

(add, 0, []) -> 0;
(add, 0, [1]) -> 1;
(add, 0, [2, 1]) -> 3;
(add, 0, [3, 2, 1]) -> 6;
(add, 1, []) -> 1;
(countOdd, 0, [2, 1]) -> 1;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (f (x . 0, x . 1, Un_Cons (x . 2) . 1))
                    (Un_Cons (x . 2) . 0)

33.7990 true

(add, 0, [1]) -> 1;
(add, 0, [2, 1]) -> 3;
(add, 0, [3, 2, 1]) -> 6;
(countOdd, 0, [1]) -> 1;
(countOdd, 0, [2, 1]) -> 1;
(countOdd, 0, [3, 2, 1]) -> 2;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 0 Un_S (Un_Cons (x . 2) . 0)
            (x . 0 Un_S (Un_Cons (x . 2) . 0) Un_S (Un_Cons (x . 2) . 0)) with
      | O _ -> Un_Cons (x . 2) . 0
      | S _ -> x . 0 Un_S (Un_Cons (x . 2) . 0)
                 (x . 0 Un_S (Un_Cons (x . 2) . 0) Un_S (Un_Cons (x . 2) . 0))

2.9876 false

(add, 0, [1]) -> 1;
(add, 0, [2, 1]) -> 3;
(add, 0, [3, 2, 1]) -> 6;
(add, 1, []) -> 1;
(countOdd, 0, [2, 1]) -> 1;
(countOdd, 0, [3, 2, 1]) -> 2;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (f (x . 0, x . 1, Un_Cons (x . 2) . 1))
                    (Un_Cons (x . 2) . 0)

75.8260 true

(add, 0, [2, 1]) -> 3;
(add, 1, []) -> 1;
(countOdd, 0, []) -> 0;
(countOdd, 0, [1]) -> 1;
(countOdd, 0, [2, 1]) -> 1;
(countOdd, 0, [3, 2, 1]) -> 2;
=================================
None
(add, 0, []) -> 0;
(add, 0, [3, 2, 1]) -> 6;
(add, 1, []) -> 1;
(countOdd, 0, [1]) -> 1;
(countOdd, 0, [2, 1]) -> 1;
(countOdd, 0, [3, 2, 1]) -> 2;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (f (x . 0, x . 1, Un_Cons (x . 2) . 1))
                    (Un_Cons (x . 2) . 0)

16.5122 true

(add, 0, [1]) -> 1;
(add, 0, [2, 1]) -> 3;
(add, 0, [3, 2, 1]) -> 6;
(add, 1, []) -> 1;
(countOdd, 0, []) -> 0;
(countOdd, 0, [1]) -> 1;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (f (x . 0, x . 1, Un_Cons (x . 2) . 1))
                    (Un_Cons (x . 2) . 0)

41.3694 true

(add, 0, [1]) -> 1;
(add, 0, [3, 2, 1]) -> 6;
(countOdd, 0, []) -> 0;
(countOdd, 0, [1]) -> 1;
(countOdd, 0, [2, 1]) -> 1;
(countOdd, 0, [3, 2, 1]) -> 2;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (f (x . 0, x . 1, Un_Cons (x . 2) . 1))
                    (Un_Cons (x . 2) . 0)

26.6613 true

(add, 0, [2, 1]) -> 3;
(add, 0, [3, 2, 1]) -> 6;
(add, 1, []) -> 1;
(countOdd, 0, []) -> 0;
(countOdd, 0, [1]) -> 1;
(countOdd, 0, [3, 2, 1]) -> 2;
=================================
None
(add, 0, []) -> 0;
(add, 0, [1]) -> 1;
(add, 0, [3, 2, 1]) -> 6;
(add, 1, []) -> 1;
(countOdd, 0, []) -> 0;
(countOdd, 0, [2, 1]) -> 1;
(countOdd, 0, [3, 2, 1]) -> 2;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (f (x . 0, x . 1, Un_Cons (x . 2) . 1))
                    (Un_Cons (x . 2) . 0)

0.1603 true

(add, 0, [1]) -> 1;
(add, 0, [3, 2, 1]) -> 6;
(add, 1, []) -> 1;
(countOdd, 0, []) -> 0;
(countOdd, 0, [1]) -> 1;
(countOdd, 0, [2, 1]) -> 1;
(countOdd, 0, [3, 2, 1]) -> 2;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (f (x . 0, x . 1, Un_Cons (x . 2) . 1))
                    (Un_Cons (x . 2) . 0)

83.7187 true

(add, 0, []) -> 0;
(add, 0, [1]) -> 1;
(add, 0, [2, 1]) -> 3;
(add, 0, [3, 2, 1]) -> 6;
(add, 1, []) -> 1;
(countOdd, 0, []) -> 0;
(countOdd, 0, [3, 2, 1]) -> 2;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (f (x . 0, x . 1, Un_Cons (x . 2) . 1))
                    (Un_Cons (x . 2) . 0)

41.5019 true

(add, 0, []) -> 0;
(add, 0, [1]) -> 1;
(add, 0, [2, 1]) -> 3;
(add, 1, []) -> 1;
(countOdd, 0, []) -> 0;
(countOdd, 0, [1]) -> 1;
(countOdd, 0, [3, 2, 1]) -> 2;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (f (x . 0, x . 1, Un_Cons (x . 2) . 1))
                    (Un_Cons (x . 2) . 0)

2.0411 true

(add, 0, []) -> 0;
(add, 0, [2, 1]) -> 3;
(add, 0, [3, 2, 1]) -> 6;
(countOdd, 0, []) -> 0;
(countOdd, 0, [1]) -> 1;
(countOdd, 0, [2, 1]) -> 1;
(countOdd, 0, [3, 2, 1]) -> 2;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (f (x . 0, x . 1, Un_Cons (x . 2) . 1))
                    (Un_Cons (x . 2) . 0)

23.6185 true

(add, 0, []) -> 0;
(add, 0, [1]) -> 1;
(add, 0, [3, 2, 1]) -> 6;
(add, 1, []) -> 1;
(countOdd, 0, []) -> 0;
(countOdd, 0, [1]) -> 1;
(countOdd, 0, [2, 1]) -> 1;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (f (x . 0, x . 1, Un_Cons (x . 2) . 1))
                    (Un_Cons (x . 2) . 0)

0.1604 true

(add, 0, []) -> 0;
(add, 0, [1]) -> 1;
(add, 0, [2, 1]) -> 3;
(add, 0, [3, 2, 1]) -> 6;
(countOdd, 0, []) -> 0;
(countOdd, 0, [1]) -> 1;
(countOdd, 0, [2, 1]) -> 1;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (f (x . 0, x . 1, Un_Cons (x . 2) . 1))
                    (Un_Cons (x . 2) . 0)

6.1669 true

(add, 0, [1]) -> 1;
(add, 0, [2, 1]) -> 3;
(add, 1, []) -> 1;
(countOdd, 0, []) -> 0;
(countOdd, 0, [1]) -> 1;
(countOdd, 0, [2, 1]) -> 1;
(countOdd, 0, [3, 2, 1]) -> 2;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (f (x . 0, x . 1, Un_Cons (x . 2) . 1))
                    (Un_Cons (x . 2) . 0)

43.9401 true

(add, 0, []) -> 0;
(add, 0, [1]) -> 1;
(add, 0, [2, 1]) -> 3;
(add, 0, [3, 2, 1]) -> 6;
(countOdd, 0, []) -> 0;
(countOdd, 0, [2, 1]) -> 1;
(countOdd, 0, [3, 2, 1]) -> 2;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (f (x . 0, x . 1, Un_Cons (x . 2) . 1))
                    (Un_Cons (x . 2) . 0)

1.1678 true

(add, 0, [1]) -> 1;
(add, 0, [2, 1]) -> 3;
(add, 0, [3, 2, 1]) -> 6;
(countOdd, 0, []) -> 0;
(countOdd, 0, [1]) -> 1;
(countOdd, 0, [2, 1]) -> 1;
(countOdd, 0, [3, 2, 1]) -> 2;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (f (x . 0, x . 1, Un_Cons (x . 2) . 1))
                    (Un_Cons (x . 2) . 0)

11.0313 true

(add, 0, []) -> 0;
(add, 0, [1]) -> 1;
(add, 0, [2, 1]) -> 3;
(add, 0, [3, 2, 1]) -> 6;
(add, 1, []) -> 1;
(countOdd, 0, []) -> 0;
(countOdd, 0, [1]) -> 1;
(countOdd, 0, [2, 1]) -> 1;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (f (x . 0, x . 1, Un_Cons (x . 2) . 1))
                    (Un_Cons (x . 2) . 0)

6.0123 true

(add, 0, []) -> 0;
(add, 0, [1]) -> 1;
(add, 0, [2, 1]) -> 3;
(add, 0, [3, 2, 1]) -> 6;
(add, 1, []) -> 1;
(countOdd, 0, []) -> 0;
(countOdd, 0, [1]) -> 1;
(countOdd, 0, [3, 2, 1]) -> 2;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (f (x . 0, x . 1, Un_Cons (x . 2) . 1))
                    (Un_Cons (x . 2) . 0)

1.1731 true

(add, 0, []) -> 0;
(add, 0, [1]) -> 1;
(add, 0, [2, 1]) -> 3;
(add, 0, [3, 2, 1]) -> 6;
(add, 1, []) -> 1;
(countOdd, 0, []) -> 0;
(countOdd, 0, [2, 1]) -> 1;
(countOdd, 0, [3, 2, 1]) -> 2;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (f (x . 0, x . 1, Un_Cons (x . 2) . 1))
                    (Un_Cons (x . 2) . 0)

1.1270 true

(add, 0, []) -> 0;
(add, 0, [1]) -> 1;
(add, 0, [2, 1]) -> 3;
(add, 0, [3, 2, 1]) -> 6;
(add, 1, []) -> 1;
(countOdd, 0, [1]) -> 1;
(countOdd, 0, [2, 1]) -> 1;
(countOdd, 0, [3, 2, 1]) -> 2;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (f (x . 0, x . 1, Un_Cons (x . 2) . 1))
                    (Un_Cons (x . 2) . 0)

21.1200 true

(add, 0, []) -> 0;
(add, 0, [1]) -> 1;
(add, 0, [2, 1]) -> 3;
(add, 0, [3, 2, 1]) -> 6;
(countOdd, 0, []) -> 0;
(countOdd, 0, [1]) -> 1;
(countOdd, 0, [2, 1]) -> 1;
(countOdd, 0, [3, 2, 1]) -> 2;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (f (x . 0, x . 1, Un_Cons (x . 2) . 1))
                    (Un_Cons (x . 2) . 0)

6.1158 true

(add, 0, []) -> 0;
(add, 0, [1]) -> 1;
(add, 0, [2, 1]) -> 3;
(add, 1, []) -> 1;
(countOdd, 0, []) -> 0;
(countOdd, 0, [1]) -> 1;
(countOdd, 0, [2, 1]) -> 1;
(countOdd, 0, [3, 2, 1]) -> 2;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (f (x . 0, x . 1, Un_Cons (x . 2) . 1))
                    (Un_Cons (x . 2) . 0)

1.7377 true

(add, 0, []) -> 0;
(add, 0, [1]) -> 1;
(add, 0, [3, 2, 1]) -> 6;
(add, 1, []) -> 1;
(countOdd, 0, []) -> 0;
(countOdd, 0, [1]) -> 1;
(countOdd, 0, [2, 1]) -> 1;
(countOdd, 0, [3, 2, 1]) -> 2;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (f (x . 0, x . 1, Un_Cons (x . 2) . 1))
                    (Un_Cons (x . 2) . 0)

1.3622 true

(add, 0, []) -> 0;
(add, 0, [2, 1]) -> 3;
(add, 0, [3, 2, 1]) -> 6;
(add, 1, []) -> 1;
(countOdd, 0, []) -> 0;
(countOdd, 0, [1]) -> 1;
(countOdd, 0, [2, 1]) -> 1;
(countOdd, 0, [3, 2, 1]) -> 2;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (f (x . 0, x . 1, Un_Cons (x . 2) . 1))
                    (Un_Cons (x . 2) . 0)

2.0957 true

(add, 0, [1]) -> 1;
(add, 0, [2, 1]) -> 3;
(add, 0, [3, 2, 1]) -> 6;
(add, 1, []) -> 1;
(countOdd, 0, []) -> 0;
(countOdd, 0, [1]) -> 1;
(countOdd, 0, [2, 1]) -> 1;
(countOdd, 0, [3, 2, 1]) -> 2;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (f (x . 0, x . 1, Un_Cons (x . 2) . 1))
                    (Un_Cons (x . 2) . 0)

39.3260 true

(add, 0, []) -> 0;
(add, 0, [1]) -> 1;
(add, 0, [2, 1]) -> 3;
(add, 0, [3, 2, 1]) -> 6;
(add, 1, []) -> 1;
(countOdd, 0, []) -> 0;
(countOdd, 0, [1]) -> 1;
(countOdd, 0, [2, 1]) -> 1;
(countOdd, 0, [3, 2, 1]) -> 2;
=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 (f (x . 0, x . 1, Un_Cons (x . 2) . 1))
                    (Un_Cons (x . 2) . 0)

1.1369 true

