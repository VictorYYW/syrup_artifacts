[] -> 0;
=================================
fix (f : list -> nat) = fun (x:list) -> 0

0.0000 false

[1] -> 1;
=================================
fix (f : list -> nat) = fun (x:list) -> Un_Cons x . 0

0.0064 false

[2, 1] -> 3;
=================================
fix (f : list -> nat) = fun (x:list) -> S (Un_Cons x . 0)

0.0995 false

[] -> 0;
[1] -> 1;
=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0181 true

[] -> 0;
[2, 1] -> 3;
=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.1234 true

[1] -> 1;
[2, 1] -> 3;
=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0762 true

[] -> 0;
[1] -> 1;
[2, 1] -> 3;
=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0166 true

