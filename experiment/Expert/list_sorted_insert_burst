([], 0) -> [0];
=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, x . 0)

0.0032 false

([], 1) -> [1];
=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, x . 0)

0.0126 false

([], 2) -> [2];
=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, x . 0)

0.0416 false

([0], 0) -> [0];
=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> x . 0

0.0049 false

([0], 1) -> [0, 1];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    Cons (Un_S (x . 1), Cons (x . 1, Un_Cons (x . 0) . 1))

0.3855 false

([0, 1], 2) -> [0, 1, 2];
=================================
None
([1], 1) -> [1];
=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> x . 0

0.0125 false

([1], 2) -> [1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    Cons (Un_S (x . 1), Cons (x . 1, Un_Cons (x . 0) . 1))

5.7068 false

([2], 0) -> [0, 2];
=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, x . 0)

0.0056 false

([2], 1) -> [1, 2];
=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, x . 0)

0.0344 false

([1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
None
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> Cons (0, Cons (1, Un_Cons (x . 0) . 1))

0.4884 false

([1], 1) -> [1];
([0, 1], 2) -> [0, 1, 2];
=================================
None
([], 2) -> [2];
([1], 1) -> [1];
=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, Nil)

0.1118 false

([], 0) -> [0];
([1], 0) -> [0, 1];
=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, x . 0)

0.0033 false

([], 1) -> [1];
([0, 1], 0) -> [0, 1];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Cons (x . 1, x . 0)

0.0392 false

([2], 0) -> [0, 2];
([0, 1], 2) -> [0, 1, 2];
=================================
None
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Cons (x . 1, x . 0)
      | S _ -> Cons (Un_S (x . 1), Cons (x . 1, Un_Cons (x . 0) . 1))

36.4321 false

([2], 1) -> [1, 2];
([0, 1], 2) -> [0, 1, 2];
=================================
None
([], 2) -> [2];
([2], 0) -> [0, 2];
=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, x . 0)

0.0433 false

([], 0) -> [0];
([], 2) -> [2];
([1], 0) -> [0, 1];
=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, x . 0)

0.0033 false

([0], 0) -> [0];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match Un_Cons (x . 0) . 0 with
      | O _ -> x . 0
      | S _ -> Cons (x . 1, x . 0)

0.0122 false

([1], 2) -> [1, 2];
([2], 1) -> [1, 2];
([0, 1], 2) -> [0, 1, 2];
=================================
None
([], 0) -> [0];
([0], 0) -> [0];
([2], 1) -> [1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Cons (x . 1, Nil)
      | S _ -> Cons (x . 1, x . 0)

0.0275 false

([], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
=================================
None
([], 1) -> [1];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, x . 0)

0.0133 false

([0], 0) -> [0];
([1], 2) -> [1, 2];
([0, 1], 0) -> [0, 1];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Cons (Un_S (x . 1), Cons (x . 1, Un_Cons (x . 0) . 1))

65.4832 false

([], 2) -> [2];
([2], 0) -> [0, 2];
([0, 1], 2) -> [0, 1, 2];
=================================
None
([], 0) -> [0];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Cons (x . 1, x . 0)
      | S _ -> Cons (Un_S (x . 1), Cons (x . 1, Un_Cons (x . 0) . 1))

3.2117 false

([], 2) -> [2];
([1], 2) -> [1, 2];
([0, 1], 2) -> [0, 1, 2];
=================================
None
([], 1) -> [1];
([1], 1) -> [1];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
None
([], 0) -> [0];
([0], 0) -> [0];
([2], 0) -> [0, 2];
([0, 1], 0) -> [0, 1];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match Un_Cons (x . 0) . 0 with
                     | O _ -> x . 0
                     | S _ -> Cons (x . 1, x . 0))

0.0152 false

([], 0) -> [0];
([], 1) -> [1];
([1], 0) -> [0, 1];
([1], 2) -> [1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match x . 1 with
                     | O _ -> Cons (x . 1, x . 0)
                     | S _ -> Cons (Un_S (x . 1),
                                     f (Un_Cons (x . 0) . 1, x . 1)))

3.0319 false

([], 0) -> [0];
([], 2) -> [2];
([1], 1) -> [1];
([2], 1) -> [1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match Un_S (Un_Cons (x . 0) . 0) with
                     | O _ -> x . 0
                     | S _ -> Cons (x . 1, x . 0))

0.3003 false

([], 0) -> [0];
([1], 0) -> [0, 1];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
None
([], 1) -> [1];
([], 2) -> [2];
([0], 1) -> [0, 1];
([2], 1) -> [1, 2];
=================================
None
([], 2) -> [2];
([1], 1) -> [1];
([2], 1) -> [1, 2];
([0, 1], 2) -> [0, 1, 2];
=================================
None
([], 1) -> [1];
([0], 1) -> [0, 1];
([2], 1) -> [1, 2];
([0, 1], 2) -> [0, 1, 2];
=================================
None
([], 1) -> [1];
([0], 0) -> [0];
([1], 0) -> [0, 1];
([1], 2) -> [1, 2];
=================================
None
([], 2) -> [2];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 1) -> [1, 2];
=================================
None
([], 0) -> [0];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 2) -> [1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_S (x . 1),
                                      f (Un_Cons (x . 0) . 1, x . 1)))

0.3091 false

([], 0) -> [0];
([], 1) -> [1];
([], 2) -> [2];
([1], 1) -> [1];
([2], 0) -> [0, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Cons (x . 1, x . 0)
      | S _ -> Cons (x . 1, Nil)

0.0660 false

([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 1) -> [1];
([2], 0) -> [0, 2];
([0, 1], 2) -> [0, 1, 2];
=================================
None
([], 1) -> [1];
([], 2) -> [2];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
None
([], 2) -> [2];
([0], 0) -> [0];
([1], 0) -> [0, 1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
=================================
None
([], 1) -> [1];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 2) -> [1, 2];
([0, 1], 2) -> [0, 1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> (match x . 1 with
                    | O _ -> x . 0
                    | S _ -> Cons (x . 1, x . 0))
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

3.7202 false

([], 1) -> [1];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_S (x . 1),
                                      f (Un_Cons (x . 0) . 1, x . 1)))

6.6996 false

([], 0) -> [0];
([], 2) -> [2];
([0], 0) -> [0];
([1], 0) -> [0, 1];
([2], 1) -> [1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match Un_Cons (x . 0) . 0 with
                     | O _ -> x . 0
                     | S _ -> Cons (x . 1, x . 0))

0.0146 false

([], 0) -> [0];
([], 1) -> [1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([0, 1], 2) -> [0, 1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

99.7144 true

([], 1) -> [1];
([0], 1) -> [0, 1];
([1], 1) -> [1];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
=================================
None
([0], 0) -> [0];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
None
([], 2) -> [2];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
None
([], 2) -> [2];
([0], 1) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([0, 1], 2) -> [0, 1, 2];
=================================
None
([], 0) -> [0];
([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([2], 0) -> [0, 2];
([0, 1], 0) -> [0, 1];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match Un_Cons (x . 0) . 0 with
                     | O _ -> x . 0
                     | S _ -> Cons (x . 1, x . 0))

0.0147 false

([], 0) -> [0];
([], 1) -> [1];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([2], 1) -> [1, 2];
([0, 1], 2) -> [0, 1, 2];
=================================
None
([], 0) -> [0];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
None
([], 1) -> [1];
([0], 0) -> [0];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([2], 0) -> [0, 2];
([0, 1], 0) -> [0, 1];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> (match Un_Cons (x . 0) . 0 with
                  | O _ -> x . 0
                  | S _ -> Cons (x . 1, x . 0))
      | S _ -> Cons (x . 1, Nil)

0.1044 false

([], 0) -> [0];
([], 1) -> [1];
([], 2) -> [2];
([0], 1) -> [0, 1];
([2], 1) -> [1, 2];
([0, 1], 2) -> [0, 1, 2];
=================================
None
([], 0) -> [0];
([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([1], 0) -> [0, 1];
([1], 2) -> [1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | LT _ -> Cons (Un_S (x . 1),
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | EQ _ -> x . 0
                     | GT _ -> Cons (x . 1, x . 0))

0.6116 false

([], 1) -> [1];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 1) -> [1];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
=================================
None
([], 0) -> [0];
([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([1], 1) -> [1];
([2], 1) -> [1, 2];
([0, 1], 2) -> [0, 1, 2];
=================================
None
([], 0) -> [0];
([], 1) -> [1];
([0], 0) -> [0];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | LT _ -> Cons (Un_S (x . 1),
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | EQ _ -> x . 0
                     | GT _ -> Cons (x . 1, x . 0))

0.4538 false

([], 1) -> [1];
([0], 0) -> [0];
([1], 0) -> [0, 1];
([1], 2) -> [1, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
None
([], 0) -> [0];
([], 1) -> [1];
([], 2) -> [2];
([0], 1) -> [0, 1];
([1], 1) -> [1];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | LT _ -> Cons (Un_S (x . 1),
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | EQ _ -> x . 0
                     | GT _ -> Cons (x . 1, x . 0))

12.3536 false

([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([2], 1) -> [1, 2];
([0, 1], 2) -> [0, 1, 2];
=================================
None
([], 0) -> [0];
([], 1) -> [1];
([], 2) -> [2];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([2], 0) -> [0, 2];
([0, 1], 2) -> [0, 1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | LT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | EQ _ -> x . 0
                     | GT _ -> Cons (x . 1, x . 0))

80.5356 true

([], 0) -> [0];
([], 1) -> [1];
([], 2) -> [2];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | LT _ -> ()
                     | EQ _ -> x . 0
                     | GT _ -> Cons (x . 1, x . 0))

0.1053 false

([], 0) -> [0];
([], 2) -> [2];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([0, 1], 2) -> [0, 1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | LT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | EQ _ -> x . 0
                     | GT _ -> Cons (x . 1, x . 0))

3.5737 true

([], 1) -> [1];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([0, 1], 0) -> [0, 1];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_S (x . 1),
                                      f (Un_Cons (x . 0) . 1, x . 1)))

5.0521 false

([], 0) -> [0];
([], 2) -> [2];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_S (x . 1),
                                      f (Un_Cons (x . 0) . 1, x . 1)))

3.3790 false

([], 1) -> [1];
([], 2) -> [2];
([0], 1) -> [0, 1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
None
([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
None
([], 0) -> [0];
([0], 0) -> [0];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 2) -> [0, 1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

38.2857 true

([], 0) -> [0];
([], 2) -> [2];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 1) -> [1, 2];
([0, 1], 2) -> [0, 1, 2];
=================================
None
([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([2], 0) -> [0, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
None
([], 0) -> [0];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

2.3288 true

([], 0) -> [0];
([], 2) -> [2];
([1], 0) -> [0, 1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | LT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | EQ _ -> f (Un_Cons (x . 0) . 1, x . 1)
                     | GT _ -> Cons (x . 1, x . 0))

115.7784 false

([], 0) -> [0];
([], 2) -> [2];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

81.0736 true

([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
None
([], 1) -> [1];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
=================================
None
([], 0) -> [0];
([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | LT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | EQ _ -> x . 0
                     | GT _ -> Cons (x . 1, x . 0))

6.7077 true

([], 0) -> [0];
([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([2], 0) -> [0, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | LT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | EQ _ -> x . 0
                     | GT _ -> Cons (x . 1, x . 0))

1.3522 true

([], 0) -> [0];
([], 1) -> [1];
([], 2) -> [2];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_S (x . 1),
                                      f (Un_Cons (x . 0) . 1, x . 1)))

0.8796 false

([], 0) -> [0];
([], 2) -> [2];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

52.6955 true

([], 0) -> [0];
([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
None
([], 1) -> [1];
([], 2) -> [2];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
None
([], 0) -> [0];
([], 2) -> [2];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

75.6053 true

([], 0) -> [0];
([], 1) -> [1];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

1.1140 true

([], 2) -> [2];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 2) -> [0, 1, 2];
=================================
None
([], 0) -> [0];
([], 1) -> [1];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | LT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | EQ _ -> (match Un_Cons (x . 0) . 1 with
                                  | Nil _ -> Cons (1, Un_Cons (x . 0) . 1)
                                  | Cons _ -> x . 0)
                     | GT _ -> Cons (x . 1, x . 0))

5.2502 false

([], 0) -> [0];
([], 1) -> [1];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | LT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | EQ _ -> (match Un_Cons (x . 0) . 1 with
                                  | Nil _ -> Cons (1, Un_Cons (x . 0) . 1)
                                  | Cons _ -> x . 0)
                     | GT _ -> Cons (x . 1, x . 0))

33.9298 false

([], 0) -> [0];
([], 1) -> [1];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

2.4896 true

([], 0) -> [0];
([], 1) -> [1];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
None
([], 0) -> [0];
([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

3.5997 true

([], 0) -> [0];
([], 1) -> [1];
([], 2) -> [2];
([0], 1) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
None
([], 0) -> [0];
([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | LT _ -> Cons (Un_S (x . 1),
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | EQ _ -> x . 0
                     | GT _ -> Cons (x . 1, x . 0))

0.2301 false

([], 0) -> [0];
([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
None
([], 0) -> [0];
([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 2) -> [0, 1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

3.4121 true

([], 0) -> [0];
([], 2) -> [2];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

1.1409 true

([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_S (x . 1),
                                      f (Un_Cons (x . 0) . 1, x . 1)))

4.9970 false

([], 0) -> [0];
([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_S (x . 1),
                                      f (Un_Cons (x . 0) . 1, x . 1)))

0.2933 false

([], 0) -> [0];
([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 2) -> [0, 1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

1.8677 true

([], 0) -> [0];
([], 2) -> [2];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

1.1745 true

([], 0) -> [0];
([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

0.9189 true

([], 0) -> [0];
([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | LT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | EQ _ -> x . 0
                     | GT _ -> Cons (x . 1, x . 0))

1.9400 true

([], 0) -> [0];
([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

2.4858 true

([], 0) -> [0];
([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
None
([], 0) -> [0];
([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | LT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | EQ _ -> x . 0
                     | GT _ -> Cons (x . 1, x . 0))

1.5472 true

([], 0) -> [0];
([], 1) -> [1];
([], 2) -> [2];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

74.0758 true

([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | LT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | EQ _ -> x . 0
                     | GT _ -> Cons (x . 1, x . 0))

95.3350 true

([], 0) -> [0];
([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

0.8212 true

