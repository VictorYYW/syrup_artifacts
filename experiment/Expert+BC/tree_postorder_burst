tree_postorder
Node (Leaf (), 1, Leaf ()) -> [1];
Leaf () -> [];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, Nil)

0.0054 false

Node (Leaf (), 2, Leaf ()) -> [2];
Leaf () -> [];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, Nil)

0.0062 false

Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Leaf () -> [];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> (match Un_Node x . 0 with
                     | Leaf _ -> Cons (S (Un_Node x . 1), Nil)
                     | Node _ -> Cons (Un_S (Un_Node x . 1),
                                        f (Un_Node x . 0)))

0.0525 false

Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Leaf () -> [];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> (match Un_S (Un_Node x . 1) with
                     | O _ -> Cons (Un_Node (Un_Node x . 2) . 1,
                                     f (Un_Node x . 2))
                     | S _ -> Cons (Un_S (Un_Node x . 1), Nil))

0.0561 false

Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Leaf () -> [];
=================================
None
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Leaf () -> [];
=================================
None
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Leaf () -> [];
=================================
None
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
Leaf () -> [];
=================================
None
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Leaf () -> [];
=================================
None
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Leaf () -> [];
=================================
None
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Leaf () -> [];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> (match f (Un_Node x . 2) with
                     | Nil _ -> Cons (Un_Node x . 1, Nil)
                     | Cons _ -> append (f (Un_Node x . 2))
                                   Cons (Un_Node x . 1, Nil))

0.0521 false

Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Leaf () -> [];
=================================
None
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
Leaf () -> [];
=================================
None
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Leaf () -> [];
=================================
None
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
Leaf () -> [];
=================================
None
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Leaf () -> [];
=================================
None
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
Leaf () -> [];
=================================
None
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Leaf () -> [];
=================================
None
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
Leaf () -> [];
=================================
None
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Leaf () -> [];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 2)) (f (Un_Node x . 0)))
                    Cons (Un_Node x . 1, Nil)

21.2765 false

Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Leaf () -> [];
=================================
None
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Leaf () -> [];
=================================
None
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Leaf () -> [];
=================================
None
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Leaf () -> [];
=================================
None
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
Leaf () -> [];
=================================
None
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Leaf () -> [];
=================================
None
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Leaf () -> [];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

34.8077 true

Node (Leaf (), 2, Leaf ()) -> [2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Leaf () -> [];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

75.0910 true

Node (Leaf (), 1, Leaf ()) -> [1];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
Leaf () -> [];
=================================
None
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
Leaf () -> [];
=================================
None
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
Leaf () -> [];
=================================
None
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
Leaf () -> [];
=================================
None
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Leaf () -> [];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

1.0070 true

Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
Leaf () -> [];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

1.0093 true

Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
Leaf () -> [];
=================================
None
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Leaf () -> [];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

79.1547 true

Node (Leaf (), 1, Leaf ()) -> [1];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
Leaf () -> [];
=================================
None
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Leaf () -> [];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

1.0733 true

Node (Leaf (), 1, Leaf ()) -> [1];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Leaf () -> [];
=================================
None
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
Leaf () -> [];
=================================
None
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
Leaf () -> [];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

74.9241 true

Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
Leaf () -> [];
=================================
None
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Leaf () -> [];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

1.4539 true

Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
Leaf () -> [];
=================================
None
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
Leaf () -> [];
=================================
None
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
Leaf () -> [];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

1.5451 true

Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
Leaf () -> [];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

1.0110 true

Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Leaf () -> [];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

1.4589 true

Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
Leaf () -> [];
=================================
None
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
Leaf () -> [];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    (append (f (Un_Node x . 2)) Cons (Un_Node x . 1, Nil))

21.6513 true

Node (Leaf (), 1, Leaf ()) -> [1];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
Leaf () -> [];
=================================
None
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
Leaf () -> [];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

27.6626 true

Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
Leaf () -> [];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

5.7234 true

Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
Leaf () -> [];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

24.2421 true

Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Leaf () -> [];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

1.6064 true

Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
Leaf () -> [];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

1.7456 true

Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
Leaf () -> [];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

1.7383 true

Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
Leaf () -> [];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

1.4505 true

Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Leaf () -> [];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

1.1598 true

Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
Leaf () -> [];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

1.1907 true

Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
Leaf () -> [];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

1.2152 true

Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
Leaf () -> [];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

1.2130 true

Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
Leaf () -> [];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

1.7583 true

Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
Leaf () -> [];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

1.3526 true

Node (Leaf (), 1, Leaf ()) -> [1];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
Leaf () -> [];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

21.4012 true

Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
Leaf () -> [];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

27.1561 true

Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
Leaf () -> [];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

5.8748 true

