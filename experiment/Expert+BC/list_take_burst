list_take
(0, [1]) -> [];
(0, []) -> [];
=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> Nil

0.0001 false

(0, [0, 1]) -> [];
(0, []) -> [];
=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> Nil

0.0000 false

(0, [1, 0, 1]) -> [];
(0, []) -> [];
=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> Nil

0.0000 false

(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> Cons (Un_S (x . 0), f Un_Cons (x . 1))

44.2617 false

(1, [1]) -> [1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> x . 1

0.0105 false

(1, [0, 1]) -> [0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> x . 1
      | S _ -> Cons (Un_S (x . 0), Nil)

0.7907 false

(1, [1, 0, 1]) -> [1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> x . 1
      | S _ -> f Un_Cons (x . 1)

4.0650 false

(2, []) -> [];
(0, []) -> [];
=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> Nil

0.0000 false

(2, [1]) -> [1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> x . 1

0.0219 false

(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> x . 1

0.1036 false

(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> x . 1
      | S _ -> Cons (Un_Cons (x . 1) . 0, Nil)

4.2846 false

(0, [0, 1]) -> [];
(1, [1, 0, 1]) -> [1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> Un_Cons (Un_Cons (x . 1) . 1) . 1

18.2102 false

(0, [1]) -> [];
(1, []) -> [];
(0, []) -> [];
=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> Nil

0.0001 false

(1, [1]) -> [1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(0, [1]) -> [];
(1, [0, 1]) -> [0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> Cons (Un_S (x . 0), Nil)

0.1854 false

(0, [1]) -> [];
(1, [1, 0, 1]) -> [1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> Un_Cons (Un_Cons (x . 1) . 1) . 1

4.7690 false

(0, [0, 1]) -> [];
(1, [1]) -> [1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

0.1741 false

(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> x . 1
      | S _ -> Cons (Un_Cons (x . 1) . 0, Nil)

1.0927 false

(1, []) -> [];
(2, []) -> [];
(0, []) -> [];
=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> Nil

0.0001 false

(0, [1]) -> [];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(0, [1]) -> [];
(1, [0, 1]) -> [0];
(2, [1]) -> [1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> Cons (Un_S (x . 0), Nil)

0.1853 false

(0, [0, 1]) -> [];
(1, [1, 0, 1]) -> [1];
(2, [1]) -> [1];
(0, []) -> [];
=================================
None
(0, [1]) -> [];
(0, [0, 1]) -> [];
(1, [1]) -> [1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

0.0578 false

(1, []) -> [];
(1, [0, 1]) -> [0];
(2, []) -> [];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_S (x . 0), Nil)

0.2017 false

(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 1) . 0, Nil)

60.7098 false

(1, []) -> [];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(1, []) -> [];
(2, [1]) -> [1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(1, []) -> [];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> Un_Cons (Un_Cons (x . 1) . 1) . 1

3.1602 false

(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1, 0, 1]) -> [1];
(0, []) -> [];
=================================
None
(0, [0, 1]) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> Cons (Un_Cons (x . 1) . 0, Nil)

3.5632 false

(1, []) -> [];
(1, [1, 0, 1]) -> [1];
(2, [1]) -> [1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(0, [0, 1]) -> [];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

0.2762 false

(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 1) . 0, Nil)

6.1703 false

(0, [1, 0, 1]) -> [];
(1, []) -> [];
(2, [1]) -> [1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(1, []) -> [];
(1, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(0, [0, 1]) -> [];
(1, [0, 1]) -> [0];
(2, []) -> [];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match Un_S (x . 0) with
                  | O _ -> Cons (Un_S (x . 0), Nil)
                  | S _ -> x . 1)

0.9865 false

(0, [1]) -> [];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
None
(0, [1]) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match x . 1 with
                  | Nil _ -> Cons x
                  | Cons _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Nil)))

6.7277 false

(0, [0, 1]) -> [];
(1, [1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

0.1901 false

(0, [1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(2, []) -> [];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

0.0203 false

(0, [1]) -> [];
(1, []) -> [];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Un_Cons (x . 1) . 1
                     | S _ -> Cons (Un_Cons (x . 1) . 0, Nil))

0.3395 false

(0, [1]) -> [];
(1, []) -> [];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match x . 1 with
                  | Nil _ -> x . 1
                  | Cons _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

14.7358 true

(0, [1]) -> [];
(0, [0, 1]) -> [];
(1, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

0.0599 false

(0, [1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match x . 1 with
                  | Nil _ -> x . 1
                  | Cons _ -> Cons (Un_Cons (x . 1) . 0, Nil))

0.2539 false

(0, [1]) -> [];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(0, [1]) -> [];
(0, [1, 0, 1]) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(2, []) -> [];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0, Nil))

3.0887 false

(0, [1, 0, 1]) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
None
(0, [1, 0, 1]) -> [];
(1, [1, 0, 1]) -> [1];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(0, [1, 0, 1]) -> [];
(1, [1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(0, [1]) -> [];
(0, [0, 1]) -> [];
(1, [1]) -> [1];
(1, [1, 0, 1]) -> [1];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
None
(0, [1]) -> [];
(0, [1, 0, 1]) -> [];
(1, [0, 1]) -> [0];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match Un_S (x . 0) with
                  | O _ -> Cons (Un_S (x . 0), Nil)
                  | S _ -> x . 1)

0.4922 false

(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, [1]) -> [1];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

0.0587 false

(0, [1]) -> [];
(0, [1, 0, 1]) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match Un_S (x . 0) with
                  | O _ -> Cons (Un_Cons (x . 1) . 0, Nil)
                  | S _ -> x . 1)

58.7982 false

(0, [1]) -> [];
(0, [0, 1]) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(2, []) -> [];
(2, [1]) -> [1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0, Nil))

1.0431 false

(0, [1, 0, 1]) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(2, []) -> [];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, [1]) -> [1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> Cons (Un_Cons (x . 1) . 0, Nil)

3.6048 false

(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [0, 1]) -> [0];
(2, []) -> [];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

3.1698 true

(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(2, []) -> [];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match x . 1 with
                  | Nil _ -> x . 1
                  | Cons _ -> Cons (Un_S (x . 0), f Un_Cons (x . 1)))

1.5772 false

(0, [1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [1, 0, 1]) -> [1];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

44.8681 true

(0, [1]) -> [];
(0, [1, 0, 1]) -> [];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(0, [1]) -> [];
(0, [0, 1]) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match Un_S (x . 0) with
                  | O _ -> Cons (Un_Cons (x . 1) . 0, Nil)
                  | S _ -> x . 1)

12.3789 false

(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [0, 1]) -> [0];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match x . 1 with
                  | Nil _ -> x . 1
                  | Cons _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.4611 true

(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [0, 1]) -> [0];
(2, []) -> [];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.4120 true

(0, [1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(0, [0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match x . 1 with
                  | Nil _ -> x . 1
                  | Cons _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

1.4514 true

(0, [1]) -> [];
(0, [1, 0, 1]) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> Cons (Un_Cons (x . 1) . 0,
                      f (Un_S (x . 0), Un_Cons (x . 1) . 1))

28.1604 false

(0, [0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(2, []) -> [];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match x . 1 with
                  | Nil _ -> x . 1
                  | Cons _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.7021 true

(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(0, [1]) -> [];
(0, [0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.2508 true

(0, [1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match x . 1 with
                  | Nil _ -> x . 1
                  | Cons _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

9.7148 true

(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [0, 1]) -> [0];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match x . 1 with
                  | Nil _ -> x . 1
                  | Cons _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.4671 true

(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0, Nil))

0.2345 false

(0, [1]) -> [];
(0, [0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [1, 0, 1]) -> [1];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match x . 1 with
                  | Nil _ -> x . 1
                  | Cons _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

76.4368 true

(0, [1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match x . 1 with
                  | Nil _ -> x . 1
                  | Cons _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

1.3787 true

(0, [1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

81.1423 true

(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

72.0033 true

(0, [1]) -> [];
(0, [0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.1019 true

(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(0, [1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

27.0184 true

(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.2227 true

(0, [1]) -> [];
(0, [0, 1]) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(0, [1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match x . 1 with
                  | Nil _ -> x . 1
                  | Cons _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.6112 true

(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(2, []) -> [];
(2, [1]) -> [1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match x . 1 with
                  | Nil _ -> x . 1
                  | Cons _ -> Cons (Un_Cons (x . 1) . 0, f Un_Cons (x . 1)))

0.2055 false

(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
STACKOVERFLOW

(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match x . 1 with
                  | Nil _ -> x . 1
                  | Cons _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.5886 true

(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.1035 true

(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match x . 1 with
                  | Nil _ -> x . 1
                  | Cons _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.3995 true

(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match x . 1 with
                  | Nil _ -> x . 1
                  | Cons _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.1146 true

(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match x . 1 with
                  | Nil _ -> x . 1
                  | Cons _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.2195 true

(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.1020 true

(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match x . 1 with
                  | Nil _ -> x . 1
                  | Cons _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

1.1246 true

(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.5966 true

(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(0, [1]) -> [];
(0, [0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.1007 true

(0, [1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.5943 true

(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.1027 true

