list_snoc
([], 1) -> [1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, x . 0)

0.0035 false

([0], 0) -> [0, 0];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, x . 0)

0.0038 false

([0], 1) -> [0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_S (x . 1), f (Un_Cons (x . 0) . 1, x . 1))

0.1730 false

([1, 0], 0) -> [1, 0, 0];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1338 true

([1, 0], 1) -> [1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

3.1356 true

([2, 1, 0], 0) -> [2, 1, 0, 0];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

1.1168 true

([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
None
([0], 1) -> [0, 1];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

1.1902 true

([0], 1) -> [0, 1];
([1, 0], 0) -> [1, 0, 0];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.2125 true

([], 1) -> [1];
([1, 0], 0) -> [1, 0, 0];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0662 true

([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

3.3540 true

([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

3.1280 true

([], 1) -> [1];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

8.1104 true

([0], 1) -> [0, 1];
([1, 0], 1) -> [1, 0, 1];
([], 0) -> [0];
=================================
None
([0], 0) -> [0, 0];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
None
([1, 0], 0) -> [1, 0, 0];
([1, 0], 1) -> [1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.3615 true

([0], 0) -> [0, 0];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.3256 true

([0], 0) -> [0, 0];
([0], 1) -> [0, 1];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.4250 true

([], 1) -> [1];
([1, 0], 0) -> [1, 0, 0];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0288 true

([], 1) -> [1];
([0], 0) -> [0, 0];
([1, 0], 1) -> [1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.3065 true

([], 1) -> [1];
([0], 0) -> [0, 0];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.5269 true

([], 1) -> [1];
([1, 0], 0) -> [1, 0, 0];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0609 true

([0], 0) -> [0, 0];
([1, 0], 0) -> [1, 0, 0];
([1, 0], 1) -> [1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1233 true

([0], 0) -> [0, 0];
([1, 0], 0) -> [1, 0, 0];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.8425 true

([0], 0) -> [0, 0];
([0], 1) -> [0, 1];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
None
([], 1) -> [1];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

6.5489 true

([], 1) -> [1];
([1, 0], 0) -> [1, 0, 0];
([1, 0], 1) -> [1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0311 true

([], 1) -> [1];
([1, 0], 0) -> [1, 0, 0];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0642 true

([], 1) -> [1];
([0], 0) -> [0, 0];
([0], 1) -> [0, 1];
([1, 0], 1) -> [1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0321 true

([], 1) -> [1];
([0], 1) -> [0, 1];
([1, 0], 0) -> [1, 0, 0];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1060 true

([0], 0) -> [0, 0];
([1, 0], 0) -> [1, 0, 0];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1195 true

([], 1) -> [1];
([0], 1) -> [0, 1];
([1, 0], 0) -> [1, 0, 0];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1622 true

([0], 1) -> [0, 1];
([1, 0], 0) -> [1, 0, 0];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.4461 true

([], 1) -> [1];
([0], 1) -> [0, 1];
([1, 0], 0) -> [1, 0, 0];
([1, 0], 1) -> [1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1613 true

([], 1) -> [1];
([0], 1) -> [0, 1];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

1.4568 true

([], 1) -> [1];
([0], 0) -> [0, 0];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.2986 true

([], 1) -> [1];
([0], 1) -> [0, 1];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.8141 true

([], 1) -> [1];
([0], 0) -> [0, 0];
([0], 1) -> [0, 1];
([1, 0], 0) -> [1, 0, 0];
([1, 0], 1) -> [1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0333 true

([], 1) -> [1];
([0], 1) -> [0, 1];
([1, 0], 0) -> [1, 0, 0];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1624 true

([0], 0) -> [0, 0];
([0], 1) -> [0, 1];
([1, 0], 0) -> [1, 0, 0];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1876 true

([], 1) -> [1];
([0], 0) -> [0, 0];
([0], 1) -> [0, 1];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0336 true

([], 1) -> [1];
([0], 0) -> [0, 0];
([0], 1) -> [0, 1];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0338 true

([0], 0) -> [0, 0];
([0], 1) -> [0, 1];
([1, 0], 0) -> [1, 0, 0];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1422 true

([], 1) -> [1];
([0], 0) -> [0, 0];
([1, 0], 0) -> [1, 0, 0];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0235 true

([], 1) -> [1];
([1, 0], 0) -> [1, 0, 0];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0294 true

([0], 0) -> [0, 0];
([1, 0], 0) -> [1, 0, 0];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1254 true

([], 1) -> [1];
([0], 1) -> [0, 1];
([1, 0], 0) -> [1, 0, 0];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1266 true

([], 1) -> [1];
([0], 0) -> [0, 0];
([0], 1) -> [0, 1];
([1, 0], 0) -> [1, 0, 0];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0334 true

([], 1) -> [1];
([0], 0) -> [0, 0];
([0], 1) -> [0, 1];
([1, 0], 0) -> [1, 0, 0];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0341 true

([], 1) -> [1];
([0], 0) -> [0, 0];
([0], 1) -> [0, 1];
([1, 0], 0) -> [1, 0, 0];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0333 true

([], 1) -> [1];
([0], 0) -> [0, 0];
([0], 1) -> [0, 1];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0330 true

([], 1) -> [1];
([0], 0) -> [0, 0];
([1, 0], 0) -> [1, 0, 0];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0887 true

([], 1) -> [1];
([0], 1) -> [0, 1];
([1, 0], 0) -> [1, 0, 0];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1308 true

([0], 0) -> [0, 0];
([0], 1) -> [0, 1];
([1, 0], 0) -> [1, 0, 0];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1429 true

([], 1) -> [1];
([0], 0) -> [0, 0];
([0], 1) -> [0, 1];
([1, 0], 0) -> [1, 0, 0];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0324 true

