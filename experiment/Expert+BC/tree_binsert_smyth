tree_binsert
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_binsert = \tree -> let f1 = \x1 -> Node (Leaf, x1, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.011546 false false

(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_binsert = \tree -> let f1 = \x1 -> Node (Leaf, x1, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.0120999999999 false false

(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      let f1 = \x1 -> Node (#3.1 y1, x1, Leaf) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, 0, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      let f1 = \x1 -> Node
        ( tree_binsert (#3.3 y1) x1
        , x1
        , Leaf
        ) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, 0, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.032469 false false

(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_binsert = \tree -> let f1 = \x1 -> Node (Leaf, x1, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.0113610000001 false false

(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      let f1 = \x1 -> Node
        ( Leaf
        , 0
        , Node (Leaf, 1, Node (Leaf, x1, Leaf))
        ) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, 0, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.027411 false false

(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_binsert = \tree -> let f1 = \x1 -> Node (Leaf, 0, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.0112549999999 false false

(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      let f1 = \x1 -> Node
        ( Node (Leaf, 0, Leaf)
        , 1
        , Node (Leaf, S (#3.2 y1), Leaf)
        ) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, 0, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.027977 false false

(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      let f1 = \x1 -> Node (Leaf, 0, Node (Leaf, x1, Leaf)) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, 0, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.0224020000001 false false

(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      let f1 = \x1 -> Node (Node (Leaf, 0, Leaf), 2, Leaf) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, 0, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.0232350000001 false false

(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      let f1 = \x1 -> Node
        ( Node (Leaf, x1, Leaf)
        , #3.2 y1
        , Leaf
        ) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, 0, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.029501 false false

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_binsert = \tree -> let f1 = \x1 -> Node (Leaf, x1, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.0112329999999 false false

(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      let f1 = \x1 -> Node
        ( Node (Leaf, 0, Leaf)
        , 1
        , Node (Leaf, x1, Leaf)
        ) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, x1, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.030737 false false

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      let f1 = \x1 -> Node
        ( Node (Leaf, 0, Leaf)
        , 1
        , Node (Leaf, S (#3.2 y1), Leaf)
        ) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, x1, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.0279459999999 false false

(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      case #3.2 y1 of
        Z y2 -> 
          let f1 = \x1 -> Node (Leaf, 0, Node (Leaf, x1, Leaf)) in f1

        S y2 -> 
          let f1 = \x1 -> Node (Node (Leaf, 1, Leaf), 2, Leaf) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, 0, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.138756 false false

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      let f1 = \x1 -> Node (Leaf, x1, #3.3 y1) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, x1, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      let f1 = \x1 -> Node
        ( Leaf
        , x1
        , tree_binsert (#3.1 y1) (S x1)
        ) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, x1, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.0252949999999 false false

(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      let f1 = \x1 -> tree_binsert (#3.3 y1) (#3.2 y1) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node
        (case x1 of
          Z y2 -> 
            (Leaf, 0, Leaf)

          S y2 -> 
            (f1 y2, x1, Leaf)) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      let f1 = \x1 -> tree_binsert (#3.3 y1) (#3.2 y1) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node
        (case x1 of
          Z y2 -> 
            (Leaf, 0, Leaf)

          S y2 -> 
            (f1 y2, x1, Leaf)) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.472184 false false

(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      let f1 = \x1 -> Node
        ( tree_binsert (#3.1 y1) x1
        , #3.2 y1
        , Leaf
        ) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, 0, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      let f1 = \x1 -> Node
        ( tree_binsert (#3.1 y1) x1
        , #3.2 y1
        , Leaf
        ) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, 0, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.0669339999999 false false

(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      let f1 = \x1 -> case x1 of
        Z y2 -> 
          Node (Node (Leaf, 0, Leaf), 1, Leaf)

        S y2 -> 
          Node (Leaf, 1, Node (Leaf, S y2, Leaf)) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, 0, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.137696 false false

(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      case #3.3 y1 of
        Node y2 -> 
          let f1 = \x1 -> Node
            ( Leaf
            , 0
            , Node (Leaf, 1, Node (Leaf, x1, Leaf))
            ) in f1

        Leaf y2 -> 
          let f1 = \x1 -> Node (Node (Leaf, 0, Leaf), 2, Leaf) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, 0, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.160884 false false

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_binsert = \tree -> let f1 = \x1 -> Node (Leaf, x1, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.0108640000001 false false

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      let f1 = \x1 -> Node
        ( Node (Leaf, x1, Leaf)
        , #3.2 y1
        , Leaf
        ) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, x1, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      let f1 = \x1 -> Node
        ( tree_binsert (#3.3 y1) x1
        , #3.2 y1
        , Leaf
        ) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, x1, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.0349510000001 false false

(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      case #3.2 y1 of
        Z y2 -> 
          let f1 = \x1 -> Node (Leaf, 0, Node (Leaf, x1, Leaf)) in f1

        S y2 -> 
          let f1 = \x1 -> Node (Leaf, S y2, Leaf) in f1

    Leaf y1 -> 
      let f1 = \x1 -> case x1 of
        Z y2 -> 
          Node (Leaf, 0, Leaf)

        S y2 -> 
          Node (Leaf, 2, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.244548 false false

(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      case #3.2 y1 of
        Z y2 -> 
          let f1 = \x1 -> Node
            ( Leaf
            , 0
            , Node (Leaf, 1, Node (Leaf, x1, Leaf))
            ) in f1

        S y2 -> 
          let f1 = \x1 -> Node
            ( Node (Leaf, 0, Leaf)
            , 1
            , Node (Leaf, 2, Leaf)
            ) in f1

    Leaf y1 -> 
      let f1 = \x1 -> case x1 of
        Z y2 -> 
          Node (Leaf, 0, Leaf)

        S y2 -> 
          Node (Leaf, 2, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.162429 false false

(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> let f1 = \x1 -> Node
    (case tree of
      Node y1 -> 
        ( Node (Leaf, x1, Leaf)
        , #3.2 y1
        , #3.3 y1
        )

      Leaf y1 -> 
        (Leaf, 0, Leaf)) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.1743 false false

(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      let f1 = \x1 -> Node
        ( Node (Leaf, 0, Leaf)
        , #3.2 y1
        , Leaf
        ) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, x1, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      let f1 = \x1 -> Node
        ( tree_binsert (#3.3 y1) 0
        , #3.2 y1
        , Leaf
        ) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, x1, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.0408849999999 false false

(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      case compare (#3.2 y1) 0 of
        LT y2 -> 
          let f1 = \x1 -> tree in f1

        GT y2 -> 
          let f1 = \x1 -> Node
            ( Node (Leaf, 0, Leaf)
            , #3.2 y1
            , Leaf
            ) in f1

        EQ y2 -> 
          let f1 = \x1 -> Node (Leaf, 0, Node (Leaf, 1, Leaf)) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, 0, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
9.111145 false false

(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      case #3.3 y1 of
        Node y2 -> 
          let f1 = \x1 -> Node
            ( Node (Leaf, 0, Leaf)
            , 1
            , Node (Leaf, #3.2 y2, Leaf)
            ) in f1

        Leaf y2 -> 
          let f1 = \x1 -> tree_binsert (#3.1 y1) x1 in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node
        ( case x1 of
            Z y2 -> 
              Leaf

            S y2 -> 
              Node (Leaf, 1, Leaf)
        , case x1 of
            Z y2 -> 
              0

            S y2 -> 
              2
        , case x1 of
            Z y2 -> 
              Leaf

            S y2 -> 
              Leaf
        ) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      case #3.3 y1 of
        Node y2 -> 
          let f1 = \x1 -> Node
            ( Node (Leaf, 0, Leaf)
            , 1
            , Node (Leaf, #3.2 y2, Leaf)
            ) in f1

        Leaf y2 -> 
          let f1 = \x1 -> tree_binsert (#3.1 y1) x1 in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node
        ( case x1 of
            Z y2 -> 
              Leaf

            S y2 -> 
              Node (Leaf, 1, Leaf)
        , case x1 of
            Z y2 -> 
              0

            S y2 -> 
              2
        , case x1 of
            Z y2 -> 
              Leaf

            S y2 -> 
              Leaf
        ) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.926145 false false

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      let f1 = \x1 -> Node
        ( Node (Leaf, x1, Leaf)
        , #3.2 y1
        , #3.3 y1
        ) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, x1, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      let f1 = \x1 -> Node
        ( tree_binsert (#3.1 y1) x1
        , #3.2 y1
        , #3.3 y1
        ) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, x1, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.0403490000001 false false

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> let f1 = \x1 -> case tree of
    Node y1 -> 
      tree

    Leaf y1 -> 
      Node (Leaf, x1, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.0460519999999 false false

(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      case compare (#3.2 y1) 0 of
        LT y2 -> 
          let f1 = \x1 -> tree in f1

        GT y2 -> 
          let f1 = \x1 -> Node (Leaf, x1, #3.3 y1) in f1

        EQ y2 -> 
          let f1 = \x1 -> Node (Leaf, 0, Node (Leaf, x1, Leaf)) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, 0, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
7.636136 false false

(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      case #3.3 y1 of
        Node y2 -> 
          let f1 = \x1 -> Node (Leaf, 1, Node (Leaf, S x1, Leaf)) in f1

        Leaf y2 -> 
          let f1 = \x1 -> case compare x1 (#3.2 y1) of
            LT y3 -> 
              Node (Node (Leaf, x1, Leaf), S x1, Leaf)

            GT y3 -> 
              ??

            EQ y3 -> 
              Node (Leaf, 1, Leaf) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, 0, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
61.86039 false false

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      let f1 = \x1 -> Node
        (case compare x1 (#3.2 y1) of
          LT y2 -> 
            (Node (Leaf, 0, Leaf), 1, Leaf)

          GT y2 -> 
            ( Leaf
            , 0
            , Node (Leaf, 1, Node (Leaf, 2, Leaf))
            )

          EQ y2 -> 
            (Leaf, 1, Node (Leaf, 2, Leaf))) in f1

    Leaf y1 -> 
      let f1 = \x1 -> case compare x1 (Z y1) of
        LT y2 -> 
          ??

        GT y2 -> 
          Node (Leaf, 1, Leaf)

        EQ y2 -> 
          Node (Leaf, 0, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
27.409963 false false

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      case compare (#3.2 y1) 0 of
        LT y2 -> 
          let f1 = \x1 -> tree in f1

        GT y2 -> 
          let f1 = \x1 -> Node
            ( Node (Leaf, 0, Leaf)
            , #3.2 y1
            , #3.3 y1
            ) in f1

        EQ y2 -> 
          let f1 = \x1 -> Node (Leaf, 0, Node (Leaf, 2, Leaf)) in f1

    Leaf y1 -> 
      let f1 = \x1 -> case compare x1 (Z y1) of
        LT y2 -> 
          ??

        GT y2 -> 
          Node (Leaf, 1, Leaf)

        EQ y2 -> 
          Node (Leaf, 0, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
9.49563 false false

(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      case compare (#3.2 y1) 0 of
        LT y2 -> 
          let f1 = \x1 -> tree in f1

        GT y2 -> 
          let f1 = \x1 -> Node (Node (Leaf, x1, Leaf), S x1, Leaf) in f1

        EQ y2 -> 
          let f1 = \x1 -> Node (Leaf, 0, Node (Leaf, x1, Leaf)) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, 0, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
8.961753 false false

(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      case compare (#3.2 y1) 0 of
        LT y2 -> 
          let f1 = \x1 -> tree in f1

        GT y2 -> 
          case #3.1 y1 of
            Node y3 -> 
              let f1 = \x1 -> Node (Node (Leaf, 0, Leaf), 1, Leaf) in f1

            Leaf y3 -> 
              let f1 = \x1 -> Node (Node (Leaf, 1, Leaf), 2, Leaf) in f1

        EQ y2 -> 
          case #3.3 y1 of
            Node y3 -> 
              let f1 = \x1 -> Node
                ( Leaf
                , 0
                , Node (Leaf, 1, Node (Leaf, x1, Leaf))
                ) in f1

            Leaf y3 -> 
              let f1 = \x1 -> Node (Leaf, 0, Leaf) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, 0, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
83.022775 false false

(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      case compare (#3.2 y1) 0 of
        LT y2 -> 
          let f1 = \x1 -> tree in f1

        GT y2 -> 
          case #3.1 y1 of
            Node y3 -> 
              let f1 = \x1 -> Node (Node (Leaf, 0, Leaf), 1, Leaf) in f1

            Leaf y3 -> 
              let f1 = \x1 -> Node (Node (Leaf, 1, Leaf), 2, Leaf) in f1

        EQ y2 -> 
          case #3.3 y1 of
            Node y3 -> 
              let f1 = \x1 -> Node
                ( Leaf
                , 0
                , Node (Leaf, 1, Node (Leaf, x1, Leaf))
                ) in f1

            Leaf y3 -> 
              let f1 = \x1 -> Node (Leaf, 0, Leaf) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, 0, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
89.294546 false false

(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      let f1 = \x1 -> Node
        (case compare x1 (S (#3.2 y1)) of
          LT y2 -> 
            (Leaf, 1, Leaf)

          GT y2 -> 
            ( Leaf
            , 0
            , Node (Leaf, 1, Node (Leaf, 2, Leaf))
            )

          EQ y2 -> 
            (Leaf, 1, Node (Leaf, 2, Leaf))) in f1

    Leaf y1 -> 
      let f1 = \x1 -> case compare x1 (Z y1) of
        LT y2 -> 
          ??

        GT y2 -> 
          Node (Leaf, 2, Leaf)

        EQ y2 -> 
          Node (Leaf, 0, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
14.10439 false false

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      let f1 = \x1 -> Node
        (case compare (#3.2 y1) (S x1) of
          LT y2 -> 
            ( Node (Leaf, 0, Leaf)
            , 1
            , Node (Leaf, 2, Leaf)
            )

          GT y2 -> 
            ( Node (Node (Leaf, 0, Leaf), 1, Leaf)
            , 2
            , Leaf
            )

          EQ y2 -> 
            (Node (Leaf, 0, Leaf), 1, Leaf)) in f1

    Leaf y1 -> 
      let f1 = \x1 -> case compare x1 (Z y1) of
        LT y2 -> 
          ??

        GT y2 -> 
          Node (Leaf, 1, Leaf)

        EQ y2 -> 
          Node (Leaf, 0, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
21.236063 false false

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      let f1 = \x1 -> Node
        (case compare x1 (#3.2 y1) of
          LT y2 -> 
            ( Node (Leaf, 0, Leaf)
            , 1
            , Node (Leaf, 2, Leaf)
            )

          GT y2 -> 
            (Leaf, 1, Node (Leaf, 2, Leaf))

          EQ y2 -> 
            (Leaf, 2, Leaf)) in f1

    Leaf y1 -> 
      let f1 = \x1 -> case compare x1 (Z y1) of
        LT y2 -> 
          ??

        GT y2 -> 
          Node (Leaf, 1, Leaf)

        EQ y2 -> 
          Node (Leaf, 0, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
12.867292 false false

(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      case compare (#3.2 y1) 0 of
        LT y2 -> 
          let f1 = \x1 -> tree in f1

        GT y2 -> 
          case #3.1 y1 of
            Node y3 -> 
              let f1 = \x1 -> Node
                ( Node (Leaf, 0, Leaf)
                , 1
                , Node (Leaf, x1, Leaf)
                ) in f1

            Leaf y3 -> 
              let f1 = \x1 -> Node
                ( Node (Leaf, x1, Leaf)
                , S x1
                , #3.3 y1
                ) in f1

        EQ y2 -> 
          let f1 = \x1 -> case compare x1 (#3.2 y1) of
            LT y3 -> 
              ??

            GT y3 -> 
              Node (Leaf, 0, Node (Leaf, 2, Leaf))

            EQ y3 -> 
              Node (Leaf, 0, Leaf) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, 0, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
84.317095 false false

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      let f1 = \x1 -> Node
        ( case compare (#3.2 y1) (S x1) of
            LT y2 -> 
              Node (Leaf, 0, Leaf)

            GT y2 -> 
              Node (Leaf, 0, Leaf)

            EQ y2 -> 
              Node (Leaf, 1, Leaf)
        , S
            (case compare x1 (#3.2 y1) of
              LT y2 -> 
                1

              GT y2 -> 
                0

              EQ y2 -> 
                0)
        , case compare x1 (#3.2 y1) of
            LT y2 -> 
              Leaf

            GT y2 -> 
              Node (Leaf, 2, Leaf)

            EQ y2 -> 
              Leaf
        ) in f1

    Leaf y1 -> 
      let f1 = \x1 -> case compare x1 (Z y1) of
        LT y2 -> 
          ??

        GT y2 -> 
          Node (Leaf, 1, Leaf)

        EQ y2 -> 
          Node (Leaf, 0, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
44.826085 false false

(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      let f1 = \x1 -> Node
        ( case compare (#3.2 y1) (S x1) of
            LT y2 -> 
              Leaf

            GT y2 -> 
              Node (Leaf, 0, Leaf)

            EQ y2 -> 
              Node (Leaf, 1, Leaf)
        , S
            (case compare x1 (#3.2 y1) of
              LT y2 -> 
                1

              GT y2 -> 
                ??

              EQ y2 -> 
                0)
        , case #3.3 y1 of
            Node y2 -> 
              Node (Leaf, 2, Leaf)

            Leaf y2 -> 
              Leaf
        ) in f1

    Leaf y1 -> 
      let f1 = \x1 -> case compare x1 0 of
        LT y2 -> 
          ??

        GT y2 -> 
          Node (Leaf, 2, Leaf)

        EQ y2 -> 
          Node (Leaf, 0, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
16.975039 false false

(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      case compare (#3.2 y1) 0 of
        LT y2 -> 
          ??

        GT y2 -> 
          case #3.1 y1 of
            Node y3 -> 
              let f1 = \x1 -> Node
                ( Node (Node (Leaf, 0, Leaf), 1, Leaf)
                , 2
                , Leaf
                ) in f1

            Leaf y3 -> 
              let f1 = \x1 -> Node (Leaf, 1, Leaf) in f1

        EQ y2 -> 
          let f1 = \x1 -> Node
            (case compare x1 (S (#3.2 y1)) of
              LT y3 -> 
                (Leaf, 0, Leaf)

              GT y3 -> 
                ( Leaf
                , 0
                , Node (Leaf, 1, Node (Leaf, 2, Leaf))
                )

              EQ y3 -> 
                (Leaf, 0, Node (Leaf, 1, Leaf))) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, 0, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
108.79644 false false

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      case #3.1 y1 of
        Node y2 -> 
          let f1 = \x1 -> Node
            ( Node (Leaf, 0, Leaf)
            , 1
            , Node (Leaf, x1, Leaf)
            ) in f1

        Leaf y2 -> 
          let f1 = \x1 -> Node (Leaf, x1, #3.3 y1) in f1

    Leaf y1 -> 
      let f1 = \x1 -> case x1 of
        Z y2 -> 
          Node (Leaf, 0, Leaf)

        S y2 -> 
          Node (Leaf, S y2, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.609926 false false

(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      case #3.1 y1 of
        Node y2 -> 
          let f1 = \x1 -> Node
            (case compare x1 (S (#3.2 y1)) of
              LT y3 -> 
                (Node (Leaf, 0, Leaf), 1, Leaf)

              GT y3 -> 
                ??

              EQ y3 -> 
                ( Node (Leaf, 0, Leaf)
                , 1
                , Node (Leaf, 2, Leaf)
                )) in f1

        Leaf y2 -> 
          let f1 = \x1 -> case compare x1 (#3.2 y1) of
            LT y3 -> 
              Node
                ( Node (Leaf, 0, Leaf)
                , 1
                , Node (Leaf, 2, Leaf)
                )

            GT y3 -> 
              ??

            EQ y3 -> 
              Node (Leaf, 1, Node (Leaf, 2, Leaf)) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, 0, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
104.113997 false false

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
STACKOVERFLOW

(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
STACKOVERFLOW

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
STACKOVERFLOW

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
STACKOVERFLOW

(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
STACKOVERFLOW

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
STACKOVERFLOW

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
STACKOVERFLOW

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
STACKOVERFLOW

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
STACKOVERFLOW

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
STACKOVERFLOW

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
STACKOVERFLOW

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
STACKOVERFLOW

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
STACKOVERFLOW

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
STACKOVERFLOW

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
STACKOVERFLOW

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
STACKOVERFLOW

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
STACKOVERFLOW

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
STACKOVERFLOW

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
STACKOVERFLOW

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
STACKOVERFLOW

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
STACKOVERFLOW

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
STACKOVERFLOW

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
STACKOVERFLOW

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
STACKOVERFLOW

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
STACKOVERFLOW

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
STACKOVERFLOW

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
STACKOVERFLOW

