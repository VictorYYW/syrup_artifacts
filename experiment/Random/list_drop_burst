list_drop
([0],1) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0000 false

([],2) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0000 false

([],2) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0000 false

([],1) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0000 false

([],0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0000 false

([2],1) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0000 false

([3,2,0],2) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> Un_Cons (Un_Cons (x . 0) . 1) . 1

0.1320 false

([2,3,2],0) -> [2,3,2];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> x . 0

0.0424 false

([],0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0000 false

([1,0],0) -> [1,0];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> x . 0

0.0068 false

([2,2,3],2) -> [3];
([],0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (Un_Cons (x . 0) . 1) . 1

0.3896 false

([],1) -> [];
([0],0) -> [0];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> x . 0

0.0037 false

([0,0,1],3) -> [];
([3,2],0) -> [3,2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.1812 false

([2,3],2) -> [];
([1],1) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([0,3,2],0) -> [0,3,2];
([],0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> x . 0

0.0307 false

([2,3],0) -> [2,3];
([2,3],3) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.2977 false

([0,3,3],2) -> [3];
([0,2,3],3) -> [];

=================================
None
([],3) -> [];
([3,2],3) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([],0) -> [];
([1],2) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([],2) -> [];
([3,0],1) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> Un_Cons (x . 0) . 1

0.2470 false

([],2) -> [];
([0,3],0) -> [0,3];
([1],2) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.2819 false

([3,0],2) -> [];
([0,3],0) -> [0,3];
([],2) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.3394 false

([3,1,3],1) -> [1,3];
([2,3,1],0) -> [2,3,1];
([1,0,1],0) -> [1,0,1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

0.9859 false

([2],0) -> [2];
([1,0],1) -> [0];
([1,1,2],0) -> [1,1,2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

0.1925 false

([3],1) -> [];
([3,1,2],0) -> [3,1,2];
([0,1],0) -> [0,1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

0.0613 false

([],1) -> [];
([],3) -> [];
([2],1) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([2],2) -> [];
([2],0) -> [2];
([0],0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

0.0569 false

([1],1) -> [];
([],3) -> [];
([2,3],1) -> [3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> Un_Cons (x . 0) . 1

0.2475 false

([],2) -> [];
([],1) -> [];
([2,1,0],2) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> Un_Cons (Un_Cons (x . 0) . 1) . 1

1.2599 false

([0],0) -> [0];
([2,0],0) -> [2,0];
([2],0) -> [2];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> x . 0

0.0038 false

([1],0) -> [1];
([3],0) -> [3];
([3,3],0) -> [3,3];
([],3) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> x . 0

0.0041 false

([3,1,1],2) -> [1];
([3],2) -> [];
([1,0,2],3) -> [];
([0,1,0],0) -> [0,1,0];

=================================
None
([2,3,3],0) -> [2,3,3];
([3,2],1) -> [2];
([1,2,1],0) -> [1,2,1];
([],1) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> Un_Cons (x . 0) . 1)

1.4910 false

([0,2,2],1) -> [2,2];
([],0) -> [];
([0],0) -> [0];
([2],2) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

0.1122 false

([2,0,2],0) -> [2,0,2];
([],2) -> [];
([0],3) -> [];
([1,1],0) -> [1,1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.3641 false

([],0) -> [];
([2,2],2) -> [];
([2],2) -> [];
([2,2],0) -> [2,2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.1376 false

([1],0) -> [1];
([3,0,2],2) -> [2];
([],0) -> [];
([1,1],1) -> [1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Cons (x . 1, Nil)

3.7796 false

([3,0],2) -> [];
([],1) -> [];
([3],0) -> [3];
([3],2) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.0460 false

([],0) -> [];
([1],1) -> [];
([2,0,1],3) -> [];
([2],3) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([],1) -> [];
([1,1,3],2) -> [3];
([2,0,3],1) -> [0,3];
([1,2],2) -> [];

=================================
None
([3,3],3) -> [];
([],1) -> [];
([0,2],1) -> [2];
([],2) -> [];
([3,2],2) -> [];

=================================
None
([0,2,0],3) -> [];
([],3) -> [];
([0],3) -> [];
([2],0) -> [2];
([2,2],3) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

1.2517 false

([],1) -> [];
([],2) -> [];
([],3) -> [];
([1],3) -> [];
([3,1],3) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([0,0,3],1) -> [0,3];
([1],0) -> [1];
([],0) -> [];
([2],3) -> [];
([1,3],2) -> [];

=================================
None
([2],3) -> [];
([2,0],1) -> [0];
([],1) -> [];
([2,1],3) -> [];
([2,1,3],0) -> [2,1,3];

=================================
None
([0,0],0) -> [0,0];
([],0) -> [];
([0,0],1) -> [0];
([3,2,2],2) -> [2];
([0,2],3) -> [];

=================================
None
([3],0) -> [3];
([2],3) -> [];
([0,2],0) -> [0,2];
([2,1,2],3) -> [];
([],2) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.3847 false

([0],1) -> [];
([3,0],2) -> [];
([2],0) -> [2];
([3],1) -> [];
([3,0,0],1) -> [0,0];

=================================
None
([],3) -> [];
([0,2],1) -> [2];
([1,3],3) -> [];
([3,1,3],2) -> [3];
([0,2,0],0) -> [0,2,0];

=================================
None
([0,3],2) -> [];
([3,2,3],1) -> [2,3];
([0],1) -> [];
([2,3,1],2) -> [1];
([],0) -> [];

=================================
None
([],2) -> [];
([3],0) -> [3];
([3,1],2) -> [];
([],0) -> [];
([0],0) -> [0];
([1],1) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.0454 false

([],3) -> [];
([0,2],0) -> [0,2];
([1,3],2) -> [];
([2],3) -> [];
([1],3) -> [];
([3,0],0) -> [3,0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.5535 false

([0],2) -> [];
([],2) -> [];
([0,1,2],1) -> [1,2];
([1,0,1],2) -> [1];
([],0) -> [];
([2,0,0],1) -> [0,0];

=================================
None
([2],0) -> [2];
([3,1],0) -> [3,1];
([1,0],2) -> [];
([1],1) -> [];
([0,2,2],0) -> [0,2,2];
([1],3) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.3788 false

([],2) -> [];
([2,2],3) -> [];
([3,2],2) -> [];
([1,0],1) -> [0];
([1],0) -> [1];
([3,0],2) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> (match Un_S (x . 1) with
                  | O _ -> Un_Cons (x . 0) . 1
                  | S _ -> Nil)

78.5099 false

([1,2,1],1) -> [2,1];
([0,0,2],1) -> [0,2];
([2,1,2],3) -> [];
([1,1,0],3) -> [];
([0,2],1) -> [2];
([3,2,3],0) -> [3,2,3];

=================================
None
([3,2,0],1) -> [2,0];
([1],1) -> [];
([],3) -> [];
([0],0) -> [0];
([2],3) -> [];
([3,2],3) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> (match Un_S (x . 1) with
                  | O _ -> Un_Cons (x . 0) . 1
                  | S _ -> Nil)

7.8160 false

([2],2) -> [];
([0],0) -> [0];
([3,3],0) -> [3,3];
([0,1],2) -> [];
([],1) -> [];
([1],1) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.1487 false

([],1) -> [];
([0,3,2],3) -> [];
([2],2) -> [];
([2,0],0) -> [2,0];
([],2) -> [];
([2,3,3],2) -> [3];

=================================
None
([3,2],1) -> [2];
([3,1,3],1) -> [1,3];
([3,3],0) -> [3,3];
([1,1,2],1) -> [1,2];
([3,3,1],2) -> [1];
([0,3,0],3) -> [];

=================================
None
([3,2,1],2) -> [1];
([1,1,2],0) -> [1,1,2];
([1,2],3) -> [];
([3,3,0],3) -> [];
([],2) -> [];
([2],0) -> [2];
([2],1) -> [];

=================================
None
([2,1],2) -> [];
([0,3],2) -> [];
([1],3) -> [];
([0],2) -> [];
([],0) -> [];
([2,3,1],3) -> [];
([],1) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([],1) -> [];
([3,1,1],2) -> [1];
([1],0) -> [1];
([3],2) -> [];
([0,1,0],0) -> [0,1,0];
([3,2,3],1) -> [2,3];
([3,2],0) -> [3,2];

=================================
None
([],3) -> [];
([3,1],0) -> [3,1];
([0,1],2) -> [];
([1,0],3) -> [];
([0,3],2) -> [];
([],2) -> [];
([3,0],1) -> [0];

=================================
None
([3,0,0],1) -> [0,0];
([3,0],2) -> [];
([],1) -> [];
([2,1,0],1) -> [1,0];
([3,2,1],3) -> [];
([],0) -> [];
([3,1],2) -> [];

=================================
None
([3,1],3) -> [];
([3,0],1) -> [0];
([3,1],2) -> [];
([3,0,3],1) -> [0,3];
([],2) -> [];
([1,1,1],2) -> [1];
([2,3],0) -> [2,3];

=================================
None
([2,0,0],2) -> [0];
([3,3],1) -> [3];
([2,3,1],2) -> [1];
([],0) -> [];
([3,1],1) -> [1];
([1,3,3],3) -> [];
([3,0,2],1) -> [0,2];

=================================
None
([2,0,0],0) -> [2,0,0];
([1],0) -> [1];
([0],1) -> [];
([1,2],1) -> [2];
([3,3],0) -> [3,3];
([],2) -> [];
([0,1],0) -> [0,1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> (match x . 0 with
                  | Nil _ -> x . 0
                  | Cons _ -> Un_Cons (x . 0) . 1)

6.1675 false

([2,3,1],0) -> [2,3,1];
([],1) -> [];
([1],1) -> [];
([],0) -> [];
([0],1) -> [];
([3,3,3],3) -> [];
([0,2,1],2) -> [1];

=================================
None
([0,0],2) -> [];
([2],3) -> [];
([],2) -> [];
([1,1,2],0) -> [1,1,2];
([3,3],0) -> [3,3];
([],1) -> [];
([1,1,0],0) -> [1,1,0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.3693 false

([1,0,2],0) -> [1,0,2];
([],3) -> [];
([2],3) -> [];
([0,1],3) -> [];
([2,1,0],1) -> [1,0];
([],1) -> [];
([1],1) -> [];
([2],2) -> [];

=================================
None
([2,2],3) -> [];
([1,2,2],0) -> [1,2,2];
([3,0,3],0) -> [3,0,3];
([3,0],0) -> [3,0];
([3],0) -> [3];
([],2) -> [];
([0],3) -> [];
([],3) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.8457 false

([0,1,2],1) -> [1,2];
([],1) -> [];
([3,1,2],0) -> [3,1,2];
([1],1) -> [];
([3,0],0) -> [3,0];
([1,1,2],1) -> [1,2];
([2,1,1],2) -> [1];
([2,2,3],3) -> [];

=================================
None
([3],1) -> [];
([],1) -> [];
([0,3],1) -> [3];
([],2) -> [];
([2,1],2) -> [];
([2],3) -> [];
([0],3) -> [];
([2],0) -> [2];

=================================
None
([0,2,2],2) -> [2];
([1,2],0) -> [1,2];
([3],3) -> [];
([],1) -> [];
([2,1,2],1) -> [1,2];
([2],0) -> [2];
([1,2],1) -> [2];
([],3) -> [];

=================================
None
([1,1,1],2) -> [1];
([2],2) -> [];
([2,2],3) -> [];
([3],3) -> [];
([2,1,3],2) -> [3];
([1,3],2) -> [];
([0,0,0],0) -> [0,0,0];
([2],1) -> [];

=================================
None
([1,1],3) -> [];
([2,2,1],3) -> [];
([1,3,2],1) -> [3,2];
([],3) -> [];
([3,3],3) -> [];
([0,2,1],3) -> [];
([0,1],1) -> [1];
([],1) -> [];

=================================
None
([0,3],2) -> [];
([3],1) -> [];
([0],0) -> [0];
([0],1) -> [];
([1,3],1) -> [3];
([],3) -> [];
([0,1,3],1) -> [1,3];
([],2) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> (match Un_S (x . 1) with
                  | O _ -> Un_Cons (x . 0) . 1
                  | S _ -> Nil)

14.2398 false

([3,3,1],2) -> [1];
([],0) -> [];
([1,1,2],1) -> [1,2];
([],1) -> [];
([2],0) -> [2];
([1,2,2],3) -> [];
([0,0],3) -> [];
([3,2],0) -> [3,2];

=================================
None
([3],0) -> [3];
([0,2,2],1) -> [2,2];
([0],3) -> [];
([1,2],2) -> [];
([1],0) -> [1];
([],1) -> [];
([2,1,3],1) -> [1,3];
([2,1,1],0) -> [2,1,1];

=================================
None
([2],1) -> [];
([],0) -> [];
([2,0,0],1) -> [0,0];
([0],3) -> [];
([2],2) -> [];
([1,1,2],2) -> [2];
([],3) -> [];
([3,2],3) -> [];
([1,0,3],1) -> [0,3];

=================================
None
([],2) -> [];
([3],2) -> [];
([2,3,0],3) -> [];
([0,3],2) -> [];
([2,1,3],3) -> [];
([3,0,0],3) -> [];
([],0) -> [];
([3,1],0) -> [3,1];
([3],3) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.0598 false

([3,3],3) -> [];
([2,0,2],0) -> [2,0,2];
([3,2,0],2) -> [0];
([2],3) -> [];
([],0) -> [];
([0,0,1],3) -> [];
([0],0) -> [0];
([],3) -> [];
([0,2],2) -> [];

=================================
None
([0,1,0],0) -> [0,1,0];
([2],3) -> [];
([3],2) -> [];
([],1) -> [];
([3,1],3) -> [];
([2],2) -> [];
([1],2) -> [];
([1,3,0],0) -> [1,3,0];
([1,3],2) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.4444 false

([3,2],2) -> [];
([],1) -> [];
([3,0,1],3) -> [];
([],0) -> [];
([2,2,1],0) -> [2,2,1];
([1],0) -> [1];
([2,0],1) -> [0];
([],3) -> [];
([1,0,2],0) -> [1,0,2];

=================================
None
([],0) -> [];
([3,1,2],3) -> [];
([0],2) -> [];
([],3) -> [];
([3,3],3) -> [];
([0,2,0],1) -> [2,0];
([3,3,3],1) -> [3,3];
([1,0,2],0) -> [1,0,2];
([3,1,0],1) -> [1,0];

=================================
None
([0],3) -> [];
([1,3,0],0) -> [1,3,0];
([2],3) -> [];
([2,1,1],1) -> [1,1];
([0],2) -> [];
([3,0,1],0) -> [3,0,1];
([],1) -> [];
([3,2,0],0) -> [3,2,0];
([0,2],3) -> [];

=================================
None
([],1) -> [];
([1,2],3) -> [];
([],0) -> [];
([2],2) -> [];
([1,1],3) -> [];
([1,3,2],1) -> [3,2];
([],3) -> [];
([0,0],0) -> [0,0];
([0,3,0],3) -> [];

=================================
None
([2],3) -> [];
([],3) -> [];
([0,2],3) -> [];
([0,3],0) -> [0,3];
([],1) -> [];
([0],2) -> [];
([],2) -> [];
([2,3],1) -> [3];
([0,0,1],1) -> [0,1];

=================================
None
([2,3,0],1) -> [3,0];
([],0) -> [];
([1,2],2) -> [];
([1,0,2],1) -> [0,2];
([2,3],1) -> [3];
([0],3) -> [];
([2,0,3],1) -> [0,3];
([3,1,1],1) -> [1,1];
([3],2) -> [];

=================================
None
([3,1],2) -> [];
([],3) -> [];
([1,3,2],2) -> [2];
([1],0) -> [1];
([0],2) -> [];
([],2) -> [];
([3,1,3],3) -> [];
([3,2,2],1) -> [2,2];
([2],1) -> [];
([0,2,1],2) -> [1];

=================================
None
([0,3,2],0) -> [0,3,2];
([3,0],2) -> [];
([2,0,1],2) -> [1];
([0],1) -> [];
([3,3],0) -> [3,3];
([3,2,1],3) -> [];
([2],1) -> [];
([0],2) -> [];
([],3) -> [];
([0],3) -> [];

=================================
None
([0,0,2],2) -> [2];
([0,3],3) -> [];
([],3) -> [];
([0,0],0) -> [0,0];
([],2) -> [];
([0],0) -> [0];
([],0) -> [];
([1,0],2) -> [];
([2],1) -> [];
([3,1,0],2) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

54.7819 true

([],1) -> [];
([0,0],3) -> [];
([0,0,1],3) -> [];
([],2) -> [];
([0],1) -> [];
([],0) -> [];
([3,3],1) -> [3];
([1],0) -> [1];
([],3) -> [];
([2,0,3],0) -> [2,0,3];

=================================
None
([0,1,2],1) -> [1,2];
([0,0,1],0) -> [0,0,1];
([0],2) -> [];
([2],3) -> [];
([3,3],1) -> [3];
([0,1],0) -> [0,1];
([3,2,2],2) -> [2];
([0,2,2],2) -> [2];
([3],3) -> [];
([],0) -> [];

=================================
None
([3,1],1) -> [1];
([1,2],2) -> [];
([1,2,2],2) -> [2];
([3,1,3],3) -> [];
([0,0,1],2) -> [1];
([2,0,1],1) -> [0,1];
([1],3) -> [];
([3],0) -> [3];
([0,3],1) -> [3];
([2,0,3],1) -> [0,3];

=================================
None
([3],1) -> [];
([],1) -> [];
([2],2) -> [];
([0],3) -> [];
([],0) -> [];
([0],1) -> [];
([0,2,1],0) -> [0,2,1];
([0],2) -> [];
([1,1],3) -> [];
([],3) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.2228 false

([],0) -> [];
([0,0,0],0) -> [0,0,0];
([0,1],1) -> [1];
([],2) -> [];
([0,0],2) -> [];
([2,3],3) -> [];
([0,2,2],3) -> [];
([2,1],1) -> [1];
([2],1) -> [];
([],1) -> [];

=================================
None
([0,3,3],2) -> [3];
([1,1],2) -> [];
([1,3,3],1) -> [3,3];
([2,1,0],3) -> [];
([3,1],1) -> [1];
([3,0,1],3) -> [];
([0,3],3) -> [];
([3,3],1) -> [3];
([2],2) -> [];
([3],3) -> [];

=================================
None
([0],1) -> [];
([3],2) -> [];
([3],0) -> [3];
([1],1) -> [];
([1],2) -> [];
([2],2) -> [];
([0,1,1],2) -> [1];
([3,3],3) -> [];
([2,0,1],0) -> [2,0,1];
([],2) -> [];

=================================
None
([1,0],2) -> [];
([1,3,3],0) -> [1,3,3];
([1],2) -> [];
([2,3],3) -> [];
([3,3],3) -> [];
([1],1) -> [];
([0],3) -> [];
([2,1],3) -> [];
([2,2],3) -> [];
([1,2],1) -> [2];
([0,3,0],0) -> [0,3,0];

=================================
None
([2,0],0) -> [2,0];
([3,1,3],1) -> [1,3];
([3,2],0) -> [3,2];
([],1) -> [];
([1,1],0) -> [1,1];
([1,1],2) -> [];
([3,2,2],2) -> [2];
([3,0,0],3) -> [];
([3,0],0) -> [3,0];
([0,3,3],3) -> [];
([],3) -> [];

=================================
None
([1,1,1],1) -> [1,1];
([0,0],1) -> [0];
([2,2,0],1) -> [2,0];
([3,1,3],3) -> [];
([3],1) -> [];
([1],1) -> [];
([2,1],0) -> [2,1];
([3,1],3) -> [];
([0,3,2],2) -> [2];
([0,2],2) -> [];
([],0) -> [];

=================================
None
([1,3],2) -> [];
([],2) -> [];
([2,1],0) -> [2,1];
([3],3) -> [];
([0,1],0) -> [0,1];
([0,0,1],1) -> [0,1];
([2,3,2],0) -> [2,3,2];
([3,0],0) -> [3,0];
([1,2,3],0) -> [1,2,3];
([3,2],0) -> [3,2];
([0,2],1) -> [2];

=================================
None
([1,3,3],3) -> [];
([0,0],0) -> [0,0];
([3],0) -> [3];
([1],2) -> [];
([3,0,1],1) -> [0,1];
([0],2) -> [];
([2],0) -> [2];
([1,1,2],3) -> [];
([],0) -> [];
([0,3],1) -> [3];
([3,1],1) -> [1];

=================================
None
([0,3],0) -> [0,3];
([],2) -> [];
([],0) -> [];
([1],2) -> [];
([2],0) -> [2];
([3,0],3) -> [];
([0,3,2],1) -> [3,2];
([],3) -> [];
([3],3) -> [];
([1],0) -> [1];
([3,2],0) -> [3,2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> (match Un_S (x . 1) with
                  | O _ -> Un_Cons (x . 0) . 1
                  | S _ -> Nil)

21.6604 false

([1,0,3],3) -> [];
([],1) -> [];
([3,3,2],1) -> [3,2];
([2,3,2],0) -> [2,3,2];
([1,2,1],3) -> [];
([2],0) -> [2];
([0,2],2) -> [];
([1,3,1],3) -> [];
([2,0],2) -> [];
([3],2) -> [];
([1,0,1],0) -> [1,0,1];

=================================
None
([1,3],0) -> [1,3];
([],2) -> [];
([0,1,3],2) -> [3];
([2],3) -> [];
([0,1],1) -> [1];
([0,0],3) -> [];
([],3) -> [];
([1],3) -> [];
([],0) -> [];
([2,3,1],0) -> [2,3,1];
([0,1,1],2) -> [1];

=================================
None
([0],1) -> [];
([],0) -> [];
([0,1,3],1) -> [1,3];
([2],0) -> [2];
([],3) -> [];
([],1) -> [];
([3,2],1) -> [2];
([0,0,2],3) -> [];
([3,1,3],2) -> [3];
([0,2,0],1) -> [2,0];
([3,1,3],3) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> (match x . 0 with
                  | Nil _ -> x . 0
                  | Cons _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

93.3347 true

([2],0) -> [2];
([1,2,2],2) -> [2];
([1,1,1],2) -> [1];
([],3) -> [];
([],2) -> [];
([1],2) -> [];
([1],3) -> [];
([1],0) -> [1];
([1,0],3) -> [];
([0,3,2],2) -> [2];
([],1) -> [];

=================================
None
([2],1) -> [];
([0,0,0],0) -> [0,0,0];
([1],3) -> [];
([],1) -> [];
([3],3) -> [];
([2,1,2],2) -> [2];
([],2) -> [];
([1,0],1) -> [0];
([2,0],0) -> [2,0];
([1,0,3],2) -> [3];
([0,3],2) -> [];
([2],2) -> [];

=================================
None
([3],1) -> [];
([],1) -> [];
([0,0,1],2) -> [1];
([],3) -> [];
([3,1,3],1) -> [1,3];
([3,2,3],3) -> [];
([2,3,2],1) -> [3,2];
([2],0) -> [2];
([0,1],1) -> [1];
([3,1],1) -> [1];
([3,3,3],1) -> [3,3];
([0],1) -> [];

=================================
None
([0,2],0) -> [0,2];
([1,2,2],1) -> [2,2];
([],3) -> [];
([2,0,3],2) -> [3];
([],2) -> [];
([0,3],0) -> [0,3];
([0,3,1],0) -> [0,3,1];
([2],2) -> [];
([2,2,1],2) -> [1];
([3],1) -> [];
([],0) -> [];
([2],0) -> [2];

=================================
None
([0,0,2],2) -> [2];
([],2) -> [];
([2],1) -> [];
([3,1,0],0) -> [3,1,0];
([0,2,2],1) -> [2,2];
([0,1],0) -> [0,1];
([3,0,2],0) -> [3,0,2];
([1,0],1) -> [0];
([0,3],2) -> [];
([3,0,3],1) -> [0,3];
([2],0) -> [2];
([3,1,0],3) -> [];

=================================
None
([],1) -> [];
([1,0,0],0) -> [1,0,0];
([2,1],0) -> [2,1];
([1,0,3],1) -> [0,3];
([0],3) -> [];
([],0) -> [];
([],2) -> [];
([2,0,1],1) -> [0,1];
([3,1],0) -> [3,1];
([0,3,0],3) -> [];
([1,3,3],2) -> [3];
([2,3,1],0) -> [2,3,1];

=================================
None
([],1) -> [];
([1],3) -> [];
([0,2],2) -> [];
([0,0,3],3) -> [];
([0,2,0],3) -> [];
([2],0) -> [2];
([3,1,2],1) -> [1,2];
([2,0],0) -> [2,0];
([1],0) -> [1];
([],2) -> [];
([0,2,0],0) -> [0,2,0];
([1,3],0) -> [1,3];

=================================
None
([2],3) -> [];
([2,2,3],1) -> [2,3];
([0,0,2],1) -> [0,2];
([],3) -> [];
([0,2,3],2) -> [3];
([2,0,1],1) -> [0,1];
([],2) -> [];
([0],0) -> [0];
([3],3) -> [];
([1,1,2],3) -> [];
([2,1,2],0) -> [2,1,2];
([0,2],3) -> [];

=================================
None
([0,1,2],0) -> [0,1,2];
([],3) -> [];
([],2) -> [];
([0],1) -> [];
([0,0,0],3) -> [];
([0],3) -> [];
([0,0,0],0) -> [0,0,0];
([2,0],3) -> [];
([],0) -> [];
([0,1,3],3) -> [];
([0,2],3) -> [];
([],1) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.1664 false

([2,3],1) -> [3];
([3,0],3) -> [];
([2,3,1],1) -> [3,1];
([1,1,3],0) -> [1,1,3];
([1,0,2],3) -> [];
([1],3) -> [];
([2,2,0],2) -> [0];
([1,0,2],2) -> [2];
([2],2) -> [];
([0,0],3) -> [];
([2,3,3],2) -> [3];
([3,0,0],2) -> [0];

=================================
None
([3,2],0) -> [3,2];
([],0) -> [];
([3,3,1],0) -> [3,3,1];
([1],0) -> [1];
([],1) -> [];
([],2) -> [];
([0,2,3],1) -> [2,3];
([3],1) -> [];
([0,3],2) -> [];
([0,0,1],3) -> [];
([3],3) -> [];
([2],3) -> [];

=================================
None
([2],2) -> [];
([],3) -> [];
([1,2],1) -> [2];
([2],1) -> [];
([0],0) -> [0];
([2,2],2) -> [];
([1],1) -> [];
([3],2) -> [];
([1],3) -> [];
([1],2) -> [];
([0,1,0],2) -> [0];
([2,1,2],2) -> [2];
([3,3,2],1) -> [3,2];

=================================
None
([1,0,0],0) -> [1,0,0];
([2,3],3) -> [];
([],3) -> [];
([1,2],3) -> [];
([1],3) -> [];
([3,2],1) -> [2];
([],1) -> [];
([2],2) -> [];
([1,2,1],0) -> [1,2,1];
([0],3) -> [];
([0],1) -> [];
([1],2) -> [];
([2,1],3) -> [];

=================================
None
([0,2],3) -> [];
([0],0) -> [0];
([],3) -> [];
([1],1) -> [];
([0,3,1],1) -> [3,1];
([1,1,1],1) -> [1,1];
([2,3,3],1) -> [3,3];
([3,0,1],1) -> [0,1];
([],1) -> [];
([2,3],2) -> [];
([2,3,0],2) -> [0];
([3],1) -> [];
([0,0,1],3) -> [];

=================================
None
([],0) -> [];
([0,3,2],1) -> [3,2];
([0,1],3) -> [];
([2],3) -> [];
([1,0],3) -> [];
([2,3,1],1) -> [3,1];
([],3) -> [];
([0,1],1) -> [1];
([3],3) -> [];
([0,3,3],0) -> [0,3,3];
([2,2],3) -> [];
([3,3],3) -> [];
([3,3],2) -> [];

=================================
None
([3],2) -> [];
([2,0],0) -> [2,0];
([3,3],2) -> [];
([1],3) -> [];
([3],0) -> [3];
([1,0],2) -> [];
([],0) -> [];
([1,1,0],1) -> [1,0];
([2,3,3],0) -> [2,3,3];
([0,0,0],0) -> [0,0,0];
([1],0) -> [1];
([2,0],2) -> [];
([2,0,3],1) -> [0,3];

=================================
None
([0,2],3) -> [];
([3,3,3],3) -> [];
([1,2,1],2) -> [1];
([1],0) -> [1];
([3,2],2) -> [];
([],2) -> [];
([3],1) -> [];
([1,1],3) -> [];
([3,0],0) -> [3,0];
([0,0],3) -> [];
([],0) -> [];
([2,2],1) -> [2];
([],3) -> [];

=================================
None
([0],1) -> [];
([],3) -> [];
([1],2) -> [];
([1,2,2],0) -> [1,2,2];
([0,0,2],1) -> [0,2];
([3],1) -> [];
([3],2) -> [];
([2],0) -> [2];
([3,0,1],2) -> [1];
([],2) -> [];
([],1) -> [];
([3,1,3],3) -> [];
([1,2,3],2) -> [3];

=================================
None
([1,0,3],1) -> [0,3];
([0],3) -> [];
([3,0,3],3) -> [];
([2],3) -> [];
([3],3) -> [];
([0],2) -> [];
([],2) -> [];
([3,0,1],2) -> [1];
([3],1) -> [];
([3],0) -> [3];
([3,2],0) -> [3,2];
([0,0,0],1) -> [0,0];
([0,2],2) -> [];

=================================
None
([1,1,1],3) -> [];
([],3) -> [];
([1],0) -> [1];
([1,0],3) -> [];
([2],1) -> [];
([3,1,0],1) -> [1,0];
([],0) -> [];
([],1) -> [];
([0],1) -> [];
([1,0],1) -> [0];
([3,2],1) -> [2];
([1],2) -> [];
([3,3],1) -> [3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

54.0971 true

([2,1],1) -> [1];
([],3) -> [];
([],2) -> [];
([1,1,0],2) -> [0];
([0],1) -> [];
([1],3) -> [];
([0,0],3) -> [];
([3],0) -> [3];
([2,1,2],2) -> [2];
([1,0],0) -> [1,0];
([],1) -> [];
([3,0],3) -> [];
([2],3) -> [];

=================================
None
([2],1) -> [];
([],3) -> [];
([3],0) -> [3];
([1,0,1],0) -> [1,0,1];
([3,3],3) -> [];
([1,1],3) -> [];
([0],3) -> [];
([2,2,0],3) -> [];
([0,0,3],1) -> [0,3];
([2],0) -> [2];
([0,0],2) -> [];
([],0) -> [];
([1],1) -> [];
([0,1],0) -> [0,1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> (match Un_S (x . 1) with
                  | O _ -> Un_Cons (x . 0) . 1
                  | S _ -> Nil)

2.7481 false

([2,3],2) -> [];
([1,1],2) -> [];
([0],0) -> [0];
([],2) -> [];
([1,1,0],0) -> [1,1,0];
([],3) -> [];
([3,1],0) -> [3,1];
([2,0,2],0) -> [2,0,2];
([2],3) -> [];
([],1) -> [];
([0,2,3],3) -> [];
([2,2,0],3) -> [];
([0,1],1) -> [1];
([],0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> (match f (x . 0, Un_S (x . 1)) with
                  | Nil _ -> x . 0
                  | Cons _ -> Un_Cons (f (x . 0, Un_S (x . 1))) . 1)

90.3929 false

([],1) -> [];
([1],0) -> [1];
([0,1],3) -> [];
([2,1],1) -> [1];
([3],2) -> [];
([],0) -> [];
([2,2,0],0) -> [2,2,0];
([3,3],3) -> [];
([],2) -> [];
([3,2,1],3) -> [];
([0],0) -> [0];
([3,1],2) -> [];
([2,2],0) -> [2,2];
([2,2],2) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> (match f (x . 0, Un_S (x . 1)) with
                  | Nil _ -> Nil
                  | Cons _ -> Un_Cons (f (x . 0, Un_S (x . 1))) . 1)

54.7103 true

([3],2) -> [];
([1,1,1],2) -> [1];
([3,2],2) -> [];
([],0) -> [];
([1],2) -> [];
([3,1,1],0) -> [3,1,1];
([3],3) -> [];
([],3) -> [];
([1,1,1],3) -> [];
([0,0,0],3) -> [];
([0,3,0],0) -> [0,3,0];
([0,3,0],1) -> [3,0];
([2,0],3) -> [];
([2,0,0],0) -> [2,0,0];

=================================
None
([1,1],2) -> [];
([3],3) -> [];
([0],2) -> [];
([],2) -> [];
([2,3,2],0) -> [2,3,2];
([],0) -> [];
([1],1) -> [];
([3,2,1],1) -> [2,1];
([],3) -> [];
([1],0) -> [1];
([1,2,1],2) -> [1];
([],1) -> [];
([2,1],1) -> [1];
([0,0,0],1) -> [0,0];

=================================
None
([],2) -> [];
([0,2,1],3) -> [];
([],3) -> [];
([1,3,2],0) -> [1,3,2];
([0,1],0) -> [0,1];
([3,0],3) -> [];
([1],3) -> [];
([3],3) -> [];
([0],0) -> [0];
([2,3],3) -> [];
([1,0],1) -> [0];
([1],2) -> [];
([],1) -> [];
([1,1,0],2) -> [0];

=================================
None
([1,1],2) -> [];
([],2) -> [];
([2,3],3) -> [];
([],3) -> [];
([3,0],1) -> [0];
([2,1,1],1) -> [1,1];
([0,3,2],1) -> [3,2];
([0],3) -> [];
([0,1],1) -> [1];
([3,2,1],0) -> [3,2,1];
([0,2],3) -> [];
([0,1,3],3) -> [];
([],0) -> [];
([3,2],2) -> [];

=================================
None
([],2) -> [];
([0],2) -> [];
([3,3,0],0) -> [3,3,0];
([1,1,0],0) -> [1,1,0];
([3],3) -> [];
([3,1],3) -> [];
([],1) -> [];
([3,3,2],2) -> [2];
([2],0) -> [2];
([2,2,1],2) -> [1];
([2,2],3) -> [];
([2],2) -> [];
([0],1) -> [];
([3],1) -> [];

=================================
None
([],2) -> [];
([0,3],1) -> [3];
([0],1) -> [];
([2,2,1],1) -> [2,1];
([],1) -> [];
([2,2,2],2) -> [2];
([],0) -> [];
([3,0],0) -> [3,0];
([3,0],1) -> [0];
([1,2,0],1) -> [2,0];
([0],2) -> [];
([1],1) -> [];
([1,2],1) -> [2];
([2,0],2) -> [];

=================================
None
([0,2],0) -> [0,2];
([],0) -> [];
([1,2],0) -> [1,2];
([],1) -> [];
([],3) -> [];
([0],2) -> [];
([2,3],0) -> [2,3];
([0,2],2) -> [];
([3],1) -> [];
([0,3,3],0) -> [0,3,3];
([],2) -> [];
([3],3) -> [];
([3,0,1],2) -> [1];
([1,2,2],3) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

73.4609 true

([3,0,1],2) -> [1];
([2,2,0],3) -> [];
([0,3,3],0) -> [0,3,3];
([0],2) -> [];
([3],3) -> [];
([],3) -> [];
([2,2,3],1) -> [2,3];
([1,2],2) -> [];
([3,2],0) -> [3,2];
([3],2) -> [];
([],1) -> [];
([2,2,0],2) -> [0];
([1,2],0) -> [1,2];
([2,1,1],2) -> [1];
([2,3],2) -> [];

=================================
None
([2],3) -> [];
([3,1],2) -> [];
([1,0,0],0) -> [1,0,0];
([0,0],1) -> [0];
([3,2,3],2) -> [3];
([],3) -> [];
([1,1],0) -> [1,1];
([2,1],3) -> [];
([2,2],0) -> [2,2];
([1,2,1],2) -> [1];
([2],2) -> [];
([1,3,2],1) -> [3,2];
([0,2],2) -> [];
([],1) -> [];
([3],3) -> [];

=================================
None
([3],3) -> [];
([],0) -> [];
([1],3) -> [];
([],1) -> [];
([1,2],1) -> [2];
([],2) -> [];
([0,2,0],0) -> [0,2,0];
([0,0],0) -> [0,0];
([2,2,2],2) -> [2];
([2],3) -> [];
([1,1,0],0) -> [1,1,0];
([0,3],0) -> [0,3];
([0],2) -> [];
([2,0,2],0) -> [2,0,2];
([1,3],2) -> [];

=================================
None
([],3) -> [];
([],1) -> [];
([],2) -> [];
([2,3],2) -> [];
([2,1],2) -> [];
([2,2,1],1) -> [2,1];
([1,0,0],2) -> [0];
([1,2,0],2) -> [0];
([2],3) -> [];
([1],1) -> [];
([1,0],0) -> [1,0];
([3],1) -> [];
([1],2) -> [];
([3,2],1) -> [2];
([3,2],2) -> [];

=================================
None
([1],2) -> [];
([2],1) -> [];
([3,2],2) -> [];
([],0) -> [];
([3,3],2) -> [];
([3],1) -> [];
([],2) -> [];
([0,3],3) -> [];
([2,2,2],0) -> [2,2,2];
([3,3],0) -> [3,3];
([0,1],1) -> [1];
([1,0,1],3) -> [];
([1,0,1],2) -> [1];
([1,1,0],3) -> [];
([0,0],0) -> [0,0];

=================================
None
([],0) -> [];
([0],1) -> [];
([2,1],3) -> [];
([],2) -> [];
([2],0) -> [2];
([2],3) -> [];
([2,2,1],2) -> [1];
([],1) -> [];
([0,3,2],3) -> [];
([3,0],2) -> [];
([1,2,0],1) -> [2,0];
([0],2) -> [];
([3,1],1) -> [1];
([1],1) -> [];
([0],0) -> [0];

=================================
None
([0,2,1],2) -> [1];
([3,2],3) -> [];
([1,3,2],2) -> [2];
([2,3],3) -> [];
([1,3,1],2) -> [1];
([1,0,0],2) -> [0];
([],0) -> [];
([],3) -> [];
([],2) -> [];
([1,1],2) -> [];
([3,2,0],2) -> [0];
([2,1],3) -> [];
([3,3,2],0) -> [3,3,2];
([],1) -> [];
([0],1) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

60.3232 true

([0,0],0) -> [0,0];
([],0) -> [];
([0,0],1) -> [0];
([3,0],1) -> [0];
([2,0,0],3) -> [];
([],1) -> [];
([],3) -> [];
([2],1) -> [];
([2],0) -> [2];
([0,2,2],3) -> [];
([1,0],2) -> [];
([0,2],0) -> [0,2];
([3,0],3) -> [];
([0,2],2) -> [];
([0,0,2],2) -> [2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> (match x . 0 with
                  | Nil _ -> x . 0
                  | Cons _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

9.8083 true

([2,2],3) -> [];
([2,0,3],3) -> [];
([],3) -> [];
([],2) -> [];
([2],3) -> [];
([],1) -> [];
([1,0,0],1) -> [0,0];
([3],2) -> [];
([3,1,3],0) -> [3,1,3];
([0],3) -> [];
([3,1,3],3) -> [];
([1],3) -> [];
([1,2,3],2) -> [3];
([1],0) -> [1];
([1],2) -> [];

=================================
None
([2,0,0],2) -> [0];
([0,3],0) -> [0,3];
([0],1) -> [];
([2],0) -> [2];
([],2) -> [];
([0,1,1],3) -> [];
([0,2],1) -> [2];
([1,3,1],3) -> [];
([1],2) -> [];
([1,2,1],3) -> [];
([0,2],0) -> [0,2];
([0,1,1],0) -> [0,1,1];
([0,2,3],3) -> [];
([3,2,2],3) -> [];
([1,0],2) -> [];

=================================
None
([0,2],0) -> [0,2];
([3,2,0],0) -> [3,2,0];
([],2) -> [];
([2,2],0) -> [2,2];
([2],1) -> [];
([0],1) -> [];
([0,3,2],1) -> [3,2];
([3],1) -> [];
([3,0,3],3) -> [];
([],0) -> [];
([],1) -> [];
([1,0,3],1) -> [0,3];
([2,1,1],1) -> [1,1];
([2,0,3],1) -> [0,3];
([2,3,3],0) -> [2,3,3];
([3],2) -> [];

=================================
None
([0],0) -> [0];
([],1) -> [];
([3,3],1) -> [3];
([],0) -> [];
([0,3,1],0) -> [0,3,1];
([2],1) -> [];
([2,1],3) -> [];
([3,1],0) -> [3,1];
([2,1],1) -> [1];
([1,0,1],2) -> [1];
([3,0,1],0) -> [3,0,1];
([2,2],3) -> [];
([0,1],0) -> [0,1];
([2],3) -> [];
([1,3],2) -> [];
([3,2],3) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

55.2173 true

([0,1],0) -> [0,1];
([0],0) -> [0];
([2,2,0],2) -> [0];
([1,2,0],0) -> [1,2,0];
([0,0],1) -> [0];
([3,3],3) -> [];
([2,3,1],0) -> [2,3,1];
([],3) -> [];
([],0) -> [];
([2],3) -> [];
([1,1],3) -> [];
([0,3,0],1) -> [3,0];
([2,1],0) -> [2,1];
([1,3,2],3) -> [];
([1,1,1],1) -> [1,1];
([3,2,2],3) -> [];

=================================
None
([1,1],0) -> [1,1];
([0,3,3],3) -> [];
([],1) -> [];
([0,0],1) -> [0];
([3,2,0],1) -> [2,0];
([3,1],1) -> [1];
([0,1],3) -> [];
([2,2,0],2) -> [0];
([1],1) -> [];
([1,2],2) -> [];
([1,0,2],3) -> [];
([3,3],2) -> [];
([0],1) -> [];
([0,2],0) -> [0,2];
([2,1,0],3) -> [];
([1,0],1) -> [0];

=================================
None
([2,1],0) -> [2,1];
([3,0,2],1) -> [0,2];
([],3) -> [];
([2,1],2) -> [];
([0,0,0],1) -> [0,0];
([3],1) -> [];
([3],2) -> [];
([1,0,1],2) -> [1];
([3,2,3],0) -> [3,2,3];
([2,2],3) -> [];
([3,0,2],0) -> [3,0,2];
([],0) -> [];
([2,3,3],1) -> [3,3];
([2],0) -> [2];
([3,0],3) -> [];
([0],3) -> [];

=================================
None
([],3) -> [];
([0,2,2],3) -> [];
([],1) -> [];
([],2) -> [];
([3],0) -> [3];
([3],2) -> [];
([0,1],1) -> [1];
([1,1,2],1) -> [1,2];
([3,3,2],3) -> [];
([0],2) -> [];
([0,2,1],0) -> [0,2,1];
([2],2) -> [];
([1],2) -> [];
([3,2],2) -> [];
([1,2,2],0) -> [1,2,2];
([1,1],0) -> [1,1];

=================================
None
([1,3,2],3) -> [];
([],2) -> [];
([0,0],1) -> [0];
([2,2,3],2) -> [3];
([3],0) -> [3];
([],3) -> [];
([1,2],0) -> [1,2];
([3,1,2],2) -> [2];
([],0) -> [];
([1],0) -> [1];
([3,2,1],0) -> [3,2,1];
([3],3) -> [];
([0,2,3],1) -> [2,3];
([0,2,1],1) -> [2,1];
([2,2,1],3) -> [];
([2,0,2],0) -> [2,0,2];

=================================
None
([0,2,2],2) -> [2];
([],3) -> [];
([1,2,2],1) -> [2,2];
([2,0,2],2) -> [2];
([1],0) -> [1];
([],1) -> [];
([2],1) -> [];
([1,0],3) -> [];
([2,1,3],1) -> [1,3];
([1],2) -> [];
([3,1],3) -> [];
([2,2],3) -> [];
([0,3],1) -> [3];
([3,0],1) -> [0];
([0],1) -> [];
([2],3) -> [];

=================================
None
([1,2,2],2) -> [2];
([],0) -> [];
([0,1],0) -> [0,1];
([0],1) -> [];
([],1) -> [];
([2,3],1) -> [3];
([2,3],3) -> [];
([2,1,2],1) -> [1,2];
([2,3],2) -> [];
([1,2],3) -> [];
([3,0],1) -> [0];
([],2) -> [];
([2,2],0) -> [2,2];
([0,0],2) -> [];
([3],3) -> [];
([2,0,1],0) -> [2,0,1];

=================================
None
([],3) -> [];
([3,1,0],0) -> [3,1,0];
([],2) -> [];
([1,3],0) -> [1,3];
([0,1],1) -> [1];
([],0) -> [];
([1,0,3],2) -> [3];
([3,2],3) -> [];
([3],2) -> [];
([2],3) -> [];
([0],1) -> [];
([2,3,3],3) -> [];
([],1) -> [];
([2,1],1) -> [1];
([3,1],3) -> [];
([2,1],2) -> [];

=================================
None
([0,2,2],3) -> [];
([0],2) -> [];
([0,0,2],3) -> [];
([2,1,2],1) -> [1,2];
([3],3) -> [];
([3],0) -> [3];
([1,1,0],3) -> [];
([1,0,1],0) -> [1,0,1];
([3,0],3) -> [];
([],1) -> [];
([3],2) -> [];
([3,1,0],1) -> [1,0];
([2,0],1) -> [0];
([1,2,3],0) -> [1,2,3];
([],2) -> [];
([0],3) -> [];
([2,3],3) -> [];

=================================
None
([0],1) -> [];
([0,2],0) -> [0,2];
([],0) -> [];
([],1) -> [];
([1,1,3],3) -> [];
([3,0,2],2) -> [2];
([3],2) -> [];
([0],2) -> [];
([1],2) -> [];
([3,0],0) -> [3,0];
([1,2],3) -> [];
([3],0) -> [3];
([0,0],0) -> [0,0];
([],2) -> [];
([0,3,3],1) -> [3,3];
([2,2,3],0) -> [2,2,3];
([3,3],3) -> [];

=================================
None
([],3) -> [];
([2,1,2],3) -> [];
([2],3) -> [];
([2,3],1) -> [3];
([],0) -> [];
([1,1,1],0) -> [1,1,1];
([1,3,3],2) -> [3];
([0,0,2],1) -> [0,2];
([],2) -> [];
([0],3) -> [];
([0,0,0],2) -> [0];
([2,1],0) -> [2,1];
([0,3],1) -> [3];
([0,3,1],1) -> [3,1];
([1,1,2],3) -> [];
([],1) -> [];
([2,0],3) -> [];

=================================
None
([1],2) -> [];
([2,3,2],3) -> [];
([3],1) -> [];
([],0) -> [];
([],3) -> [];
([3],3) -> [];
([],1) -> [];
([3,1,1],3) -> [];
([1,3,0],2) -> [0];
([1,3],2) -> [];
([1,2,3],0) -> [1,2,3];
([0,1,0],3) -> [];
([2,0,0],1) -> [0,0];
([1,1,2],3) -> [];
([0,0],0) -> [0,0];
([1,2],3) -> [];
([1,0],0) -> [1,0];

=================================
None
([],3) -> [];
([3,0],1) -> [0];
([1],3) -> [];
([1,2,2],3) -> [];
([3,0,1],3) -> [];
([2,1],0) -> [2,1];
([0,1],2) -> [];
([0,2],0) -> [0,2];
([],1) -> [];
([0,1],1) -> [1];
([3,1,0],0) -> [3,1,0];
([2],1) -> [];
([],2) -> [];
([1,1,1],0) -> [1,1,1];
([2,0,1],0) -> [2,0,1];
([2,1],3) -> [];
([0,0,1],0) -> [0,0,1];

=================================
None
([],2) -> [];
([],1) -> [];
([0,0],2) -> [];
([0,3,1],3) -> [];
([2,0,1],0) -> [2,0,1];
([0,2],3) -> [];
([],0) -> [];
([3,0],3) -> [];
([3,1],3) -> [];
([0,2,0],3) -> [];
([3,1],2) -> [];
([3,3,0],3) -> [];
([1],1) -> [];
([1],3) -> [];
([0,1,2],2) -> [2];
([1,0,3],2) -> [3];
([3],2) -> [];

=================================
None
([0],3) -> [];
([1],2) -> [];
([1],0) -> [1];
([1,0],3) -> [];
([],3) -> [];
([],0) -> [];
([0,3,3],0) -> [0,3,3];
([],1) -> [];
([2],3) -> [];
([1,3,3],1) -> [3,3];
([2,2],1) -> [2];
([1,2,2],2) -> [2];
([0],1) -> [];
([3,2],2) -> [];
([1,3,2],1) -> [3,2];
([0],0) -> [0];
([2],0) -> [2];

=================================
None
([1,1],1) -> [1];
([3,0,1],2) -> [1];
([],1) -> [];
([3],2) -> [];
([1],2) -> [];
([3,2],1) -> [2];
([2,3],3) -> [];
([],2) -> [];
([2],1) -> [];
([],0) -> [];
([0],3) -> [];
([1],0) -> [1];
([0,3],2) -> [];
([0,1],1) -> [1];
([0],0) -> [0];
([],3) -> [];
([2,3,3],0) -> [2,3,3];

=================================
None
([],2) -> [];
([2],3) -> [];
([3],3) -> [];
([2],1) -> [];
([3],1) -> [];
([2,2],1) -> [2];
([3,2],2) -> [];
([2,3],0) -> [2,3];
([2,3,1],0) -> [2,3,1];
([0,1],3) -> [];
([1,1,0],3) -> [];
([1],0) -> [1];
([3,1],3) -> [];
([0,2],0) -> [0,2];
([2,2,2],3) -> [];
([0],1) -> [];
([0,0],2) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> (match Un_S (x . 1) with
                  | O _ -> Un_Cons (x . 0) . 1
                  | S _ -> Nil)

11.8635 false

([],1) -> [];
([3,3,3],3) -> [];
([2],3) -> [];
([0,2],2) -> [];
([1,1,0],2) -> [0];
([1],1) -> [];
([],3) -> [];
([3,3],1) -> [3];
([1],3) -> [];
([3,0,3],0) -> [3,0,3];
([],0) -> [];
([3,0],0) -> [3,0];
([1],2) -> [];
([2,1,3],1) -> [1,3];
([0],3) -> [];
([0,1],3) -> [];
([0,2],3) -> [];

=================================
None
([3,3,3],3) -> [];
([],1) -> [];
([],2) -> [];
([3],2) -> [];
([1,0,2],1) -> [0,2];
([2,1,1],3) -> [];
([0,3,2],3) -> [];
([1,1,2],3) -> [];
([1,2],1) -> [2];
([1],2) -> [];
([1],3) -> [];
([2,2,1],2) -> [1];
([3,3,0],2) -> [0];
([2,2,2],1) -> [2,2];
([],3) -> [];
([0],2) -> [];
([2,2],2) -> [];
([2,3,2],0) -> [2,3,2];

=================================
None
([0],0) -> [0];
([2,2],2) -> [];
([],2) -> [];
([1,1,0],2) -> [0];
([3,0],3) -> [];
([1,3,3],1) -> [3,3];
([1],1) -> [];
([],1) -> [];
([1,3,1],0) -> [1,3,1];
([0],1) -> [];
([1,0,0],2) -> [0];
([2],2) -> [];
([2,1,1],2) -> [1];
([0,1,3],1) -> [1,3];
([],0) -> [];
([0,2],3) -> [];
([2],0) -> [2];
([0,2,0],2) -> [0];

=================================
None
([1,0,2],1) -> [0,2];
([3],2) -> [];
([2],2) -> [];
([2],3) -> [];
([2,0,2],1) -> [0,2];
([3],1) -> [];
([0],3) -> [];
([],1) -> [];
([],0) -> [];
([0,1],1) -> [1];
([1],1) -> [];
([2,0],2) -> [];
([3,1],0) -> [3,1];
([3],3) -> [];
([0],1) -> [];
([0,0,3],0) -> [0,0,3];
([2,1,2],2) -> [2];
([1,3],2) -> [];

=================================
None
([3,1],0) -> [3,1];
([3,0,1],2) -> [1];
([1,1,1],1) -> [1,1];
([3],2) -> [];
([],3) -> [];
([],2) -> [];
([0,3,3],2) -> [3];
([3],1) -> [];
([3,3,0],2) -> [0];
([2],3) -> [];
([0,1,1],2) -> [1];
([3,2],1) -> [2];
([1,2,2],3) -> [];
([],0) -> [];
([3,0,2],2) -> [2];
([1,3],0) -> [1,3];
([3,0,3],0) -> [3,0,3];
([2,3,3],2) -> [3];

=================================
None
([1,3],2) -> [];
([1,2,2],2) -> [2];
([0,2,1],1) -> [2,1];
([3,2,1],1) -> [2,1];
([3,1,0],1) -> [1,0];
([3],0) -> [3];
([1,0],2) -> [];
([3],1) -> [];
([3,0,2],2) -> [2];
([0,0],1) -> [0];
([],3) -> [];
([1,0],0) -> [1,0];
([3],2) -> [];
([0,2],2) -> [];
([],0) -> [];
([2,3,0],2) -> [0];
([1,0],3) -> [];
([1,0,0],0) -> [1,0,0];

=================================
None
([],3) -> [];
([3],2) -> [];
([0,3],2) -> [];
([1],2) -> [];
([],0) -> [];
([0,0],3) -> [];
([3,0,0],0) -> [3,0,0];
([],2) -> [];
([0,3,3],3) -> [];
([],1) -> [];
([0,3,3],1) -> [3,3];
([3],1) -> [];
([2],2) -> [];
([1,0],1) -> [0];
([3,0,3],0) -> [3,0,3];
([2,3],2) -> [];
([1,1,1],3) -> [];
([2,1,1],3) -> [];

=================================
None
([0],3) -> [];
([3],3) -> [];
([2,1,3],1) -> [1,3];
([2,1],0) -> [2,1];
([1,0,1],2) -> [1];
([2,3,2],0) -> [2,3,2];
([3,1],2) -> [];
([],3) -> [];
([],1) -> [];
([0,1],3) -> [];
([3,0],2) -> [];
([0,1,1],1) -> [1,1];
([1],1) -> [];
([3,3],3) -> [];
([0,1,0],1) -> [1,0];
([1,2],1) -> [2];
([3,3,1],2) -> [1];
([2],3) -> [];

=================================
None
([0,2],3) -> [];
([2],1) -> [];
([],1) -> [];
([2],3) -> [];
([3,2,1],3) -> [];
([3,0],2) -> [];
([],2) -> [];
([1,1],3) -> [];
([3,0],1) -> [0];
([],3) -> [];
([0,1],3) -> [];
([1,0],0) -> [1,0];
([],0) -> [];
([1,2,2],1) -> [2,2];
([2,0,2],0) -> [2,0,2];
([3],3) -> [];
([2,1],0) -> [2,1];
([0,1,2],3) -> [];

=================================
None
([1],0) -> [1];
([1],1) -> [];
([2,1],0) -> [2,1];
([3],3) -> [];
([2,2],3) -> [];
([1,1],1) -> [1];
([2],1) -> [];
([3,2,3],2) -> [3];
([3,3,3],3) -> [];
([0,0,0],3) -> [];
([1,0],0) -> [1,0];
([1,2],0) -> [1,2];
([],0) -> [];
([2,1,0],3) -> [];
([2],3) -> [];
([3,0,1],3) -> [];
([0,2,0],2) -> [0];
([2],0) -> [2];

=================================
None
([],3) -> [];
([2,3,0],0) -> [2,3,0];
([3,1],0) -> [3,1];
([1,3,2],1) -> [3,2];
([2],1) -> [];
([1],0) -> [1];
([],0) -> [];
([1],3) -> [];
([3,3,1],0) -> [3,3,1];
([2,0],1) -> [0];
([2,0],2) -> [];
([],2) -> [];
([],1) -> [];
([3],1) -> [];
([3],2) -> [];
([1,2,1],3) -> [];
([2,1],2) -> [];
([2],0) -> [2];

=================================
None
([],2) -> [];
([2,3],2) -> [];
([3,0],2) -> [];
([],3) -> [];
([2,3,2],0) -> [2,3,2];
([0,3,1],1) -> [3,1];
([3,0],1) -> [0];
([],0) -> [];
([1,0,2],3) -> [];
([2,3,0],3) -> [];
([3],2) -> [];
([1,3],3) -> [];
([0],3) -> [];
([1,2],3) -> [];
([3],1) -> [];
([0,3],0) -> [0,3];
([3,3],2) -> [];
([3,0],0) -> [3,0];
([],1) -> [];

=================================
None
([],3) -> [];
([1],0) -> [1];
([0,3],1) -> [3];
([],0) -> [];
([2],1) -> [];
([0],3) -> [];
([],2) -> [];
([],1) -> [];
([2],2) -> [];
([1,3,2],0) -> [1,3,2];
([1,1],0) -> [1,1];
([3],2) -> [];
([1],3) -> [];
([3],0) -> [3];
([3,2,1],1) -> [2,1];
([1],1) -> [];
([0,0,0],1) -> [0,0];
([1,2],3) -> [];
([2,3,2],1) -> [3,2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

9.6177 true

([1],3) -> [];
([3],0) -> [3];
([0,3],0) -> [0,3];
([2,1,2],1) -> [1,2];
([],1) -> [];
([2,1],3) -> [];
([2],1) -> [];
([],0) -> [];
([2],0) -> [2];
([],3) -> [];
([3,2,1],1) -> [2,1];
([3,0,0],0) -> [3,0,0];
([0,2,1],2) -> [1];
([1,3],1) -> [3];
([0,0,0],3) -> [];
([3],3) -> [];
([],2) -> [];
([1,1,3],3) -> [];
([2,0],0) -> [2,0];

=================================
None
([2],2) -> [];
([2,1,0],3) -> [];
([2],3) -> [];
([1,1,2],0) -> [1,1,2];
([2,0],2) -> [];
([],1) -> [];
([1,0],3) -> [];
([1,0,0],3) -> [];
([1],1) -> [];
([0,0,3],0) -> [0,0,3];
([3,2,2],3) -> [];
([],2) -> [];
([1,1],2) -> [];
([1],2) -> [];
([3,0],1) -> [0];
([1],0) -> [1];
([3],2) -> [];
([0,2,2],1) -> [2,2];
([1,0],0) -> [1,0];

=================================
None
([3,0,1],1) -> [0,1];
([],1) -> [];
([1],2) -> [];
([2],1) -> [];
([],2) -> [];
([1,0,1],0) -> [1,0,1];
([],0) -> [];
([3,2],2) -> [];
([3,1,1],1) -> [1,1];
([1,3],0) -> [1,3];
([],3) -> [];
([3],2) -> [];
([2,0],3) -> [];
([2,3],3) -> [];
([3],3) -> [];
([0,3,2],1) -> [3,2];
([2],3) -> [];
([0,2],2) -> [];
([3,2],3) -> [];

=================================
None
([],3) -> [];
([2],2) -> [];
([0],2) -> [];
([1,2],1) -> [2];
([0,2,1],1) -> [2,1];
([2,3],1) -> [3];
([0,2],0) -> [0,2];
([1,0,3],0) -> [1,0,3];
([3],2) -> [];
([0,2],2) -> [];
([],0) -> [];
([1,1],2) -> [];
([0,3],2) -> [];
([0,0],1) -> [0];
([3],3) -> [];
([0,0,3],0) -> [0,0,3];
([],2) -> [];
([3,3],2) -> [];
([2,1],2) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> (match Un_S (x . 1) with
                  | O _ -> Un_Cons (x . 0) . 1
                  | S _ -> Nil)

2.6090 false

([1,2],3) -> [];
([2,2],1) -> [2];
([3,3,0],0) -> [3,3,0];
([1],2) -> [];
([],1) -> [];
([2,3,0],1) -> [3,0];
([],2) -> [];
([2,2],2) -> [];
([3,0,1],0) -> [3,0,1];
([3],2) -> [];
([2,2,0],3) -> [];
([3,3,0],2) -> [0];
([1,2],1) -> [2];
([1,3],3) -> [];
([],3) -> [];
([2,3,2],0) -> [2,3,2];
([0,0,3],3) -> [];
([1,1,3],2) -> [3];
([0,1],1) -> [1];

=================================
None
([],3) -> [];
([],1) -> [];
([2],0) -> [2];
([3],0) -> [3];
([0],3) -> [];
([0,0,0],3) -> [];
([2,3,1],3) -> [];
([2],3) -> [];
([2,2,1],2) -> [1];
([3],1) -> [];
([2],2) -> [];
([2,3,1],2) -> [1];
([0],2) -> [];
([],0) -> [];
([0],0) -> [0];
([1],1) -> [];
([1,2],1) -> [2];
([1,3],2) -> [];
([1],3) -> [];

=================================
None
([0,0,2],1) -> [0,2];
([],3) -> [];
([3,1],0) -> [3,1];
([],2) -> [];
([2,1],3) -> [];
([3,3],2) -> [];
([0],3) -> [];
([0,2],1) -> [2];
([3,0],2) -> [];
([1,2,2],1) -> [2,2];
([0,2],2) -> [];
([1],0) -> [1];
([2],1) -> [];
([3],3) -> [];
([],0) -> [];
([2,3],0) -> [2,3];
([3,2],3) -> [];
([0,2,2],3) -> [];
([1,0],3) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> (match Un_S (x . 1) with
                  | O _ -> Un_Cons (x . 0) . 1
                  | S _ -> Nil)

10.2344 false

([3,1],0) -> [3,1];
([1],3) -> [];
([0,0],3) -> [];
([],2) -> [];
([3],0) -> [3];
([2],3) -> [];
([3,1],3) -> [];
([3,1,3],2) -> [3];
([1],0) -> [1];
([0,3],0) -> [0,3];
([3],2) -> [];
([2],1) -> [];
([],3) -> [];
([0,3,1],2) -> [1];
([],1) -> [];
([1,0,0],1) -> [0,0];
([],0) -> [];
([0,2],2) -> [];
([1,3,3],0) -> [1,3,3];

=================================
None
([1],0) -> [1];
([3,0],0) -> [3,0];
([],2) -> [];
([2,1],3) -> [];
([2,0],0) -> [2,0];
([2,2,1],2) -> [1];
([0],3) -> [];
([],1) -> [];
([3,3],1) -> [3];
([3,2,0],3) -> [];
([0,0,0],0) -> [0,0,0];
([1,0],3) -> [];
([0],2) -> [];
([1,1,3],2) -> [3];
([3],1) -> [];
([1,0,2],0) -> [1,0,2];
([1,1],2) -> [];
([0,1],0) -> [0,1];
([3],3) -> [];
([],3) -> [];

=================================
None
([],1) -> [];
([0],0) -> [0];
([3],2) -> [];
([],2) -> [];
([1,1,1],2) -> [1];
([1,2],2) -> [];
([0],3) -> [];
([2,3,2],3) -> [];
([3,2],1) -> [2];
([3],3) -> [];
([2,2],2) -> [];
([0,0,0],2) -> [0];
([3,1,1],3) -> [];
([],3) -> [];
([3,2],2) -> [];
([1],2) -> [];
([0,0],2) -> [];
([],0) -> [];
([2],0) -> [2];
([1,3,3],2) -> [3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

50.6320 true

([2],0) -> [2];
([0,0,1],1) -> [0,1];
([3,3],3) -> [];
([],1) -> [];
([],0) -> [];
([0,1],1) -> [1];
([0],2) -> [];
([],3) -> [];
([2,1],3) -> [];
([3,1],3) -> [];
([1],0) -> [1];
([],2) -> [];
([1,2,1],1) -> [2,1];
([0,1,0],1) -> [1,0];
([0,2,2],1) -> [2,2];
([2,2,1],2) -> [1];
([0],0) -> [0];
([3],3) -> [];
([2,2,3],3) -> [];
([3],1) -> [];

=================================
None
([3],2) -> [];
([],1) -> [];
([2],2) -> [];
([3],3) -> [];
([],3) -> [];
([2,2],1) -> [2];
([2,0,3],3) -> [];
([3],1) -> [];
([0,2],2) -> [];
([1,1,0],0) -> [1,1,0];
([0,0],2) -> [];
([0,2,1],0) -> [0,2,1];
([1,0,3],0) -> [1,0,3];
([1],0) -> [1];
([1,2,3],2) -> [3];
([0,3,0],3) -> [];
([],2) -> [];
([3,2,2],0) -> [3,2,2];
([2,3,0],3) -> [];
([2,0],3) -> [];

=================================
None
([1,2,1],1) -> [2,1];
([],2) -> [];
([0],2) -> [];
([0,3,0],2) -> [0];
([3,1,1],2) -> [1];
([3,3,3],1) -> [3,3];
([3,0,3],2) -> [3];
([3,2,0],3) -> [];
([1,1,0],2) -> [0];
([],0) -> [];
([2,0],1) -> [0];
([2],2) -> [];
([],3) -> [];
([0,3,2],2) -> [2];
([1,2],3) -> [];
([2,2,1],3) -> [];
([0,0,2],0) -> [0,0,2];
([3],3) -> [];
([0,1,0],0) -> [0,1,0];
([],1) -> [];

=================================
None
([],2) -> [];
([0,0],3) -> [];
([1,3],3) -> [];
([3],0) -> [3];
([3,0,1],2) -> [1];
([3,0],2) -> [];
([2],3) -> [];
([0,1,0],3) -> [];
([1,2,1],2) -> [1];
([0,2,3],1) -> [2,3];
([2,1,3],3) -> [];
([],3) -> [];
([],0) -> [];
([2,2,2],1) -> [2,2];
([0,3,1],1) -> [3,1];
([3,3],2) -> [];
([0,3],2) -> [];
([2],0) -> [2];
([3,2],0) -> [3,2];
([],1) -> [];

=================================
None
([],0) -> [];
([1,2,1],3) -> [];
([2,3,3],2) -> [3];
([1,2,1],0) -> [1,2,1];
([2,1,0],1) -> [1,0];
([],1) -> [];
([0,1,3],3) -> [];
([3,1],1) -> [1];
([3,3],3) -> [];
([1,3],1) -> [3];
([0],1) -> [];
([],3) -> [];
([3],1) -> [];
([2,1],1) -> [1];
([2,3],3) -> [];
([3,0,0],0) -> [3,0,0];
([0,3,1],0) -> [0,3,1];
([2,0,1],0) -> [2,0,1];
([2,2,3],2) -> [3];
([1,1,0],0) -> [1,1,0];

=================================
None
([3,0],0) -> [3,0];
([2,0],1) -> [0];
([2,2],3) -> [];
([2],0) -> [2];
([1,0],1) -> [0];
([],3) -> [];
([1,0],3) -> [];
([0],3) -> [];
([],2) -> [];
([1,3],2) -> [];
([2],1) -> [];
([3,3],2) -> [];
([2,3,2],2) -> [2];
([1,1],3) -> [];
([3],1) -> [];
([3],3) -> [];
([0],0) -> [0];
([2,2],0) -> [2,2];
([0,1,3],0) -> [0,1,3];
([],0) -> [];

=================================
None
([3,3],1) -> [3];
([3,1,1],2) -> [1];
([1],1) -> [];
([],0) -> [];
([3,0],3) -> [];
([],2) -> [];
([2,3,1],3) -> [];
([],3) -> [];
([2,1],2) -> [];
([0,3],0) -> [0,3];
([2,0,2],0) -> [2,0,2];
([3,1,1],1) -> [1,1];
([2],1) -> [];
([1,1],1) -> [1];
([2],2) -> [];
([1,1],0) -> [1,1];
([1,3],2) -> [];
([3,0,1],3) -> [];
([0,2,0],0) -> [0,2,0];
([0],1) -> [];

=================================
None
([],0) -> [];
([1,1,2],1) -> [1,2];
([3,2,1],0) -> [3,2,1];
([1,2],0) -> [1,2];
([2,0],2) -> [];
([1,3,0],0) -> [1,3,0];
([3,0,0],2) -> [0];
([1,1],1) -> [1];
([0,1,0],1) -> [1,0];
([2],2) -> [];
([],2) -> [];
([1],3) -> [];
([2,1],2) -> [];
([1,3,2],3) -> [];
([],3) -> [];
([1,2,2],2) -> [2];
([1,1],3) -> [];
([],1) -> [];
([1,3,1],2) -> [1];
([1,2,2],0) -> [1,2,2];

=================================
None
