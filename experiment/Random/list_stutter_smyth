list_stutter
[2,1,1] -> [2,2,1,1,1,1];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_stutter = \xs -> [2, 2, 1, 1, 1, 1] in list_stutter) : NatList -> NatList)
0.00224800000001 false false

[0] -> [0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_stutter = \xs -> Cons (0, xs) in list_stutter) : NatList -> NatList)
0.00181199999997 false false

[0,1] -> [0,0,1,1];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_stutter = \xs -> [0, 0, 1, 1] in list_stutter) : NatList -> NatList)
0.00197400000002 false false

[3,1,3] -> [3,3,1,1,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_stutter = \xs -> [3, 3, 1, 1, 3, 3] in list_stutter) : NatList -> NatList)
0.00249800000006 false false

[2,0] -> [2,2,0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_stutter = \xs -> [2, 2, 0, 0] in list_stutter) : NatList -> NatList)
0.00195400000007 false false

[2] -> [2,2];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_stutter = \xs -> Cons (2, xs) in list_stutter) : NatList -> NatList)
0.00196600000004 false false

[1] -> [1,1];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_stutter = \xs -> Cons (1, xs) in list_stutter) : NatList -> NatList)
0.00190399999997 false false

[2] -> [2,2];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_stutter = \xs -> Cons (2, xs) in list_stutter) : NatList -> NatList)
0.0019850000001 false false

[2,2,3] -> [2,2,2,2,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_stutter = \xs -> [2, 2, 2, 2, 3, 3] in list_stutter) : NatList -> NatList)
0.00241899999992 false false

[2] -> [2,2];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_stutter = \xs -> Cons (2, xs) in list_stutter) : NatList -> NatList)
0.00192300000003 false false

[] -> [];
[1,3] -> [1,1,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00663099999997 true true

[] -> [];
[1] -> [1,1];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons (#2.1 y1, xs) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00339000000008 false true

[] -> [];
[3,2,1] -> [3,3,2,2,1,1];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00784999999996 true true

[] -> [];
[0,0] -> [0,0,0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons (0, Cons (0, xs)) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( 0
        , Cons (0, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00447600000007 false false

[2,1] -> [2,2,1,1];
[2,2] -> [2,2,2,2];

=================================
NOSOL

[] -> [];
[0,1,3] -> [0,0,1,1,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      [0, 0, 1, 1, 3, 3] in list_stutter) : NatList -> NatList)
0.00778100000002 false false

[] -> [];
[1,1,0] -> [1,1,1,1,0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.0116989999999 true true

[1] -> [1,1];
[0] -> [0,0];

=================================
NOSOL

[0,3,2] -> [0,0,3,3,2,2];
[1,3] -> [1,1,3,3];

=================================
NOSOL

[0,0] -> [0,0,0,0];
[1,1] -> [1,1,1,1];

=================================
NOSOL

[] -> [];
[3,1] -> [3,3,1,1];
[3,1,3] -> [3,3,1,1,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.0059940000001 true true

[] -> [];
[1] -> [1,1];
[0,3] -> [0,0,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00296299999991 true true

[0] -> [0,0];
[] -> [];
[0,2,3] -> [0,0,2,2,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00332099999991 true true

[] -> [];
[3] -> [3,3];
[3,0] -> [3,3,0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00331000000006 true true

[1,3] -> [1,1,3,3];
[2,0] -> [2,2,0,0];
[1,2] -> [1,1,2,2];

=================================
NOSOL

[] -> [];
[1] -> [1,1];
[0] -> [0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons (#2.1 y1, xs) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00289199999997 false true

[2,1,3] -> [2,2,1,1,3,3];
[] -> [];
[3,2,0] -> [3,3,2,2,0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00393000000008 true true

[1,3,1] -> [1,1,3,3,1,1];
[1,2,2] -> [1,1,2,2,2,2];
[2,0] -> [2,2,0,0];

=================================
NOSOL

[2,3] -> [2,2,3,3];
[1,1,0] -> [1,1,1,1,0,0];
[1] -> [1,1];

=================================
NOSOL

[0] -> [0,0];
[0,3] -> [0,0,3,3];
[2] -> [2,2];

=================================
NOSOL

[2,0,3] -> [2,2,0,0,3,3];
[] -> [];
[1] -> [1,1];
[3,3] -> [3,3,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00336900000002 true true

[2,3,2] -> [2,2,3,3,2,2];
[] -> [];
[2,2] -> [2,2,2,2];
[3] -> [3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00352599999997 true true

[3] -> [3,3];
[1,1,0] -> [1,1,1,1,0,0];
[0] -> [0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00294499999995 true true

[2] -> [2,2];
[] -> [];
[3,2,3] -> [3,3,2,2,3,3];
[0,1,2] -> [0,0,1,1,2,2];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.0029340000001 true true

[0,3] -> [0,0,3,3];
[0,2] -> [0,0,2,2];
[3,2] -> [3,3,2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00331600000004 true true

[0] -> [0,0];
[] -> [];
[1,0,0] -> [1,1,0,0,0,0];
[0,2] -> [0,0,2,2];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00299100000007 true true

[] -> [];
[0,2] -> [0,0,2,2];
[1] -> [1,1];
[3] -> [3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00290199999995 true true

[3] -> [3,3];
[3,2] -> [3,3,2,2];
[0,1,3] -> [0,0,1,1,3,3];
[2,3] -> [2,2,3,3];

=================================
NOSOL

[1,3] -> [1,1,3,3];
[0,0,2] -> [0,0,0,0,2,2];
[1,2,0] -> [1,1,2,2,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00307100000009 true true

[1,1,1] -> [1,1,1,1,1,1];
[0] -> [0,0];
[] -> [];
[2,1,3] -> [2,2,1,1,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00295000000006 true true

[3] -> [3,3];
[0,0] -> [0,0,0,0];
[1,2] -> [1,1,2,2];
[] -> [];
[3,1] -> [3,3,1,1];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00292300000001 true true

[3,3] -> [3,3,3,3];
[1,3,2] -> [1,1,3,3,2,2];
[0,0] -> [0,0,0,0];
[1,1] -> [1,1,1,1];
[0,1] -> [0,0,1,1];

=================================
NOSOL

[3,3] -> [3,3,3,3];
[3,0] -> [3,3,0,0];
[] -> [];
[2,3] -> [2,2,3,3];
[1,3] -> [1,1,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00346100000002 true true

[2] -> [2,2];
[3] -> [3,3];
[] -> [];
[3,2,0] -> [3,3,2,2,0,0];
[0,1] -> [0,0,1,1];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00299300000006 true true

[] -> [];
[0,1,3] -> [0,0,1,1,3,3];
[0] -> [0,0];
[0,0,0] -> [0,0,0,0,0,0];
[1,0] -> [1,1,0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00300199999992 true true

[] -> [];
[0] -> [0,0];
[1] -> [1,1];
[3] -> [3,3];
[1,3,1] -> [1,1,3,3,1,1];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00294699999995 true true

[2,1] -> [2,2,1,1];
[] -> [];
[0,1] -> [0,0,1,1];
[1,0] -> [1,1,0,0];
[0,3] -> [0,0,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.003017 true true

[] -> [];
[2,0] -> [2,2,0,0];
[2,2] -> [2,2,2,2];
[3] -> [3,3];
[3,0] -> [3,3,0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00338899999997 true true

[3,1,3] -> [3,3,1,1,3,3];
[2,1] -> [2,2,1,1];
[0] -> [0,0];
[3,1] -> [3,3,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00311000000011 true true

[] -> [];
[3,3] -> [3,3,3,3];
[0,1] -> [0,0,1,1];
[3,2] -> [3,3,2,2];
[3,1,2] -> [3,3,1,1,2,2];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00339099999997 true true

[3,3] -> [3,3,3,3];
[1] -> [1,1];
[] -> [];
[0,0,2] -> [0,0,0,0,2,2];
[3,0,2] -> [3,3,0,0,2,2];
[0,3] -> [0,0,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00309599999991 true true

[2] -> [2,2];
[3] -> [3,3];
[2,3] -> [2,2,3,3];
[3,2] -> [3,3,2,2];
[1,3] -> [1,1,3,3];
[1,0,1] -> [1,1,0,0,1,1];

=================================
NOSOL

[] -> [];
[1,2,3] -> [1,1,2,2,3,3];
[0,2,0] -> [0,0,2,2,0,0];
[0,1] -> [0,0,1,1];
[2,1] -> [2,2,1,1];
[1,2,1] -> [1,1,2,2,1,1];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00362500000006 true true

[0,0,1] -> [0,0,0,0,1,1];
[3,0,1] -> [3,3,0,0,1,1];
[3] -> [3,3];
[1] -> [1,1];
[1,1] -> [1,1,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00313299999993 true true

[0] -> [0,0];
[2,3] -> [2,2,3,3];
[2,1,3] -> [2,2,1,1,3,3];
[1,1] -> [1,1,1,1];
[3,2] -> [3,3,2,2];
[1,0] -> [1,1,0,0];

=================================
NOSOL

[1,1] -> [1,1,1,1];
[2] -> [2,2];
[0,2,3] -> [0,0,2,2,3,3];
[1,3] -> [1,1,3,3];
[] -> [];
[0] -> [0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00324999999998 true true

[] -> [];
[2,2] -> [2,2,2,2];
[2] -> [2,2];
[0] -> [0,0];
[0,0] -> [0,0,0,0];
[1,2,2] -> [1,1,2,2,2,2];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00322400000005 true true

[0,3,0] -> [0,0,3,3,0,0];
[] -> [];
[1] -> [1,1];
[3] -> [3,3];
[0] -> [0,0];
[2,3] -> [2,2,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00307100000009 true true

[3,2,2] -> [3,3,2,2,2,2];
[3] -> [3,3];
[] -> [];
[1] -> [1,1];
[1,1,2] -> [1,1,1,1,2,2];
[2,2,0] -> [2,2,2,2,0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00378999999998 true true

[0,2,2] -> [0,0,2,2,2,2];
[0] -> [0,0];
[] -> [];
[3,3] -> [3,3,3,3];
[3,0] -> [3,3,0,0];
[2,2,3] -> [2,2,2,2,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00775999999996 true true

[2,0,1] -> [2,2,0,0,1,1];
[0,1,3] -> [0,0,1,1,3,3];
[3,2] -> [3,3,2,2];
[1,3] -> [1,1,3,3];
[1,1] -> [1,1,1,1];
[0,0,1] -> [0,0,0,0,1,1];
[1,0] -> [1,1,0,0];

=================================
NOSOL

[1,3] -> [1,1,3,3];
[0,2] -> [0,0,2,2];
[1] -> [1,1];
[3,3] -> [3,3,3,3];
[] -> [];
[2] -> [2,2];
[0] -> [0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.0030549999999 true true

[3] -> [3,3];
[0,0,2] -> [0,0,0,0,2,2];
[1,0,1] -> [1,1,0,0,1,1];
[2,0,3] -> [2,2,0,0,3,3];
[2,3] -> [2,2,3,3];
[2] -> [2,2];
[2,3,1] -> [2,2,3,3,1,1];

=================================
NOSOL

[2,3] -> [2,2,3,3];
[0,0] -> [0,0,0,0];
[0,2] -> [0,0,2,2];
[1,0] -> [1,1,0,0];
[2,2] -> [2,2,2,2];
[3,2] -> [3,3,2,2];
[2,0] -> [2,2,0,0];

=================================
NOSOL

[] -> [];
[1,2] -> [1,1,2,2];
[0] -> [0,0];
[3,1,3] -> [3,3,1,1,3,3];
[1,0,2] -> [1,1,0,0,2,2];
[3,1,0] -> [3,3,1,1,0,0];
[0,0,3] -> [0,0,0,0,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.0033370000001 true true

[0] -> [0,0];
[3,2,3] -> [3,3,2,2,3,3];
[3] -> [3,3];
[1,3] -> [1,1,3,3];
[] -> [];
[1,1] -> [1,1,1,1];
[0,2] -> [0,0,2,2];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00312499999995 true true

[0] -> [0,0];
[1,1] -> [1,1,1,1];
[0,0,0] -> [0,0,0,0,0,0];
[1,0,1] -> [1,1,0,0,1,1];
[1,3] -> [1,1,3,3];
[] -> [];
[1] -> [1,1];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00325799999996 true true

[1,2] -> [1,1,2,2];
[2] -> [2,2];
[] -> [];
[0,0] -> [0,0,0,0];
[1,1,1] -> [1,1,1,1,1,1];
[0,0,3] -> [0,0,0,0,3,3];
[1,0] -> [1,1,0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00323099999991 true true

[2,0] -> [2,2,0,0];
[] -> [];
[2] -> [2,2];
[0,1] -> [0,0,1,1];
[0] -> [0,0];
[0,0] -> [0,0,0,0];
[3] -> [3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00318199999992 true true

[2,0,0] -> [2,2,0,0,0,0];
[3,3] -> [3,3,3,3];
[] -> [];
[3,2] -> [3,3,2,2];
[2] -> [2,2];
[3,0,3] -> [3,3,0,0,3,3];
[3,0,0] -> [3,3,0,0,0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.0038770000001 true true

[2,3] -> [2,2,3,3];
[3,2] -> [3,3,2,2];
[] -> [];
[2] -> [2,2];
[3,2,1] -> [3,3,2,2,1,1];
[0,1,1] -> [0,0,1,1,1,1];
[0,2] -> [0,0,2,2];
[1,3,3] -> [1,1,3,3,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.003379 true true

[] -> [];
[2] -> [2,2];
[3,3,2] -> [3,3,3,3,2,2];
[0,3] -> [0,0,3,3];
[3,2] -> [3,3,2,2];
[3,3] -> [3,3,3,3];
[0,0,0] -> [0,0,0,0,0,0];
[1,0] -> [1,1,0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00326399999994 true true

[1,1] -> [1,1,1,1];
[] -> [];
[1] -> [1,1];
[0,0,0] -> [0,0,0,0,0,0];
[3,2] -> [3,3,2,2];
[0,1] -> [0,0,1,1];
[2,2] -> [2,2,2,2];
[3,1,0] -> [3,3,1,1,0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00323600000002 true true

[3] -> [3,3];
[1,3,0] -> [1,1,3,3,0,0];
[0,2,3] -> [0,0,2,2,3,3];
[1,2] -> [1,1,2,2];
[3,3] -> [3,3,3,3];
[1] -> [1,1];
[0,2,1] -> [0,0,2,2,1,1];
[3,2,1] -> [3,3,2,2,1,1];

=================================
NOSOL

[0,0,0] -> [0,0,0,0,0,0];
[1,0,0] -> [1,1,0,0,0,0];
[0] -> [0,0];
[2,2,1] -> [2,2,2,2,1,1];
[0,3,1] -> [0,0,3,3,1,1];
[2,1,2] -> [2,2,1,1,2,2];
[1] -> [1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00326100000007 true true

[3,3] -> [3,3,3,3];
[0] -> [0,0];
[0,1,2] -> [0,0,1,1,2,2];
[3,3,0] -> [3,3,3,3,0,0];
[] -> [];
[1] -> [1,1];
[2,2] -> [2,2,2,2];
[0,1,0] -> [0,0,1,1,0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00329099999999 true true

[2] -> [2,2];
[0] -> [0,0];
[1] -> [1,1];
[3] -> [3,3];
[0,3,1] -> [0,0,3,3,1,1];
[2,1] -> [2,2,1,1];
[] -> [];
[1,3,3] -> [1,1,3,3,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00323600000002 true true

[1,0] -> [1,1,0,0];
[0] -> [0,0];
[3,0] -> [3,3,0,0];
[1] -> [1,1];
[3,0,0] -> [3,3,0,0,0,0];
[] -> [];
[3,3,1] -> [3,3,3,3,1,1];
[2,2,1] -> [2,2,2,2,1,1];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00325900000007 true true

[2,2,1] -> [2,2,2,2,1,1];
[3,0,0] -> [3,3,0,0,0,0];
[] -> [];
[0,0] -> [0,0,0,0];
[1] -> [1,1];
[1,1,0] -> [1,1,1,1,0,0];
[0,2,0] -> [0,0,2,2,0,0];
[3] -> [3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00334100000009 true true

[2,3,1] -> [2,2,3,3,1,1];
[0] -> [0,0];
[0,3] -> [0,0,3,3];
[] -> [];
[3,3] -> [3,3,3,3];
[0,0] -> [0,0,0,0];
[1,2] -> [1,1,2,2];
[3,2] -> [3,3,2,2];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00329699999998 true true

[2,0,0] -> [2,2,0,0,0,0];
[1,3,3] -> [1,1,3,3,3,3];
[3,3] -> [3,3,3,3];
[0] -> [0,0];
[3] -> [3,3];
[3,0] -> [3,3,0,0];
[1,2] -> [1,1,2,2];
[2,0] -> [2,2,0,0];
[2] -> [2,2];

=================================
NOSOL

[] -> [];
[2] -> [2,2];
[2,1,3] -> [2,2,1,1,3,3];
[0,0,2] -> [0,0,0,0,2,2];
[2,0,1] -> [2,2,0,0,1,1];
[1] -> [1,1];
[2,1] -> [2,2,1,1];
[3,0] -> [3,3,0,0];
[3] -> [3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00335300000006 true true

[0] -> [0,0];
[2] -> [2,2];
[0,2,1] -> [0,0,2,2,1,1];
[2,1] -> [2,2,1,1];
[1,1,3] -> [1,1,1,1,3,3];
[3,2,2] -> [3,3,2,2,2,2];
[2,1,3] -> [2,2,1,1,3,3];
[2,3,3] -> [2,2,3,3,3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00349800000004 true true

[] -> [];
[2] -> [2,2];
[3] -> [3,3];
[0] -> [0,0];
[1,2,3] -> [1,1,2,2,3,3];
[0,3,3] -> [0,0,3,3,3,3];
[0,2] -> [0,0,2,2];
[1,3,3] -> [1,1,3,3,3,3];
[1,0] -> [1,1,0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00340000000006 true true

[3,1] -> [3,3,1,1];
[1] -> [1,1];
[] -> [];
[3,0,0] -> [3,3,0,0,0,0];
[2,0] -> [2,2,0,0];
[0,1,3] -> [0,0,1,1,3,3];
[3] -> [3,3];
[1,3,2] -> [1,1,3,3,2,2];
[1,3] -> [1,1,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00350400000002 true true

[0,3,3] -> [0,0,3,3,3,3];
[1] -> [1,1];
[1,1] -> [1,1,1,1];
[0,1,3] -> [0,0,1,1,3,3];
[0,2,2] -> [0,0,2,2,2,2];
[0] -> [0,0];
[] -> [];
[1,3] -> [1,1,3,3];
[2,2] -> [2,2,2,2];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.0034169999999 true true

[1,0,2] -> [1,1,0,0,2,2];
[1,0] -> [1,1,0,0];
[3,0,0] -> [3,3,0,0,0,0];
[0,0] -> [0,0,0,0];
[2] -> [2,2];
[1,1] -> [1,1,1,1];
[3] -> [3,3];
[2,3,3] -> [2,2,3,3,3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.003469 true true

[] -> [];
[0,3,3] -> [0,0,3,3,3,3];
[0,1,1] -> [0,0,1,1,1,1];
[3,1,0] -> [3,3,1,1,0,0];
[3] -> [3,3];
[0] -> [0,0];
[1,1] -> [1,1,1,1];
[3,2] -> [3,3,2,2];
[2,1,0] -> [2,2,1,1,0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.0037440000001 true true

[0] -> [0,0];
[2,2,2] -> [2,2,2,2,2,2];
[0,3] -> [0,0,3,3];
[1] -> [1,1];
[3,3] -> [3,3,3,3];
[2] -> [2,2];
[] -> [];
[1,2,0] -> [1,1,2,2,0,0];
[2,0,0] -> [2,2,0,0,0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00333999999998 true true

[2] -> [2,2];
[2,2,3] -> [2,2,2,2,3,3];
[0,2] -> [0,0,2,2];
[] -> [];
[3] -> [3,3];
[0,0] -> [0,0,0,0];
[1,0,3] -> [1,1,0,0,3,3];
[1] -> [1,1];
[3,3,3] -> [3,3,3,3,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00335900000005 true true

[2] -> [2,2];
[1,1,2] -> [1,1,1,1,2,2];
[3,1] -> [3,3,1,1];
[2,3] -> [2,2,3,3];
[] -> [];
[1,2,1] -> [1,1,2,2,1,1];
[1,0] -> [1,1,0,0];
[1,2] -> [1,1,2,2];
[1,1] -> [1,1,1,1];
[0,2] -> [0,0,2,2];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00836299999992 true true

[2,1] -> [2,2,1,1];
[1,1] -> [1,1,1,1];
[2] -> [2,2];
[] -> [];
[1,3,1] -> [1,1,3,3,1,1];
[0,1] -> [0,0,1,1];
[2,2] -> [2,2,2,2];
[1,2] -> [1,1,2,2];
[1] -> [1,1];
[0,3,2] -> [0,0,3,3,2,2];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00353199999995 true true

[] -> [];
[0] -> [0,0];
[1] -> [1,1];
[2,1] -> [2,2,1,1];
[2] -> [2,2];
[3,0] -> [3,3,0,0];
[3,1] -> [3,3,1,1];
[0,0,1] -> [0,0,0,0,1,1];
[3] -> [3,3];
[0,2,0] -> [0,0,2,2,0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00334700000008 true true

[1,0] -> [1,1,0,0];
[1,3] -> [1,1,3,3];
[3,1] -> [3,3,1,1];
[1] -> [1,1];
[] -> [];
[2] -> [2,2];
[0,2] -> [0,0,2,2];
[2,0,1] -> [2,2,0,0,1,1];
[0,2,1] -> [0,0,2,2,1,1];
[1,2,2] -> [1,1,2,2,2,2];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00351799999999 true true

[2,0] -> [2,2,0,0];
[] -> [];
[0,1,0] -> [0,0,1,1,0,0];
[1,1] -> [1,1,1,1];
[2,1] -> [2,2,1,1];
[3] -> [3,3];
[2,0,2] -> [2,2,0,0,2,2];
[1,1,3] -> [1,1,1,1,3,3];
[0,0] -> [0,0,0,0];
[1,3] -> [1,1,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00367499999993 true true

[2,3,2] -> [2,2,3,3,2,2];
[1,3,1] -> [1,1,3,3,1,1];
[0,2,1] -> [0,0,2,2,1,1];
[3] -> [3,3];
[1,0] -> [1,1,0,0];
[1] -> [1,1];
[2] -> [2,2];
[] -> [];
[0] -> [0,0];
[0,0] -> [0,0,0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00343399999997 true true

[2,2] -> [2,2,2,2];
[1,0] -> [1,1,0,0];
[1,3] -> [1,1,3,3];
[] -> [];
[2,0,0] -> [2,2,0,0,0,0];
[0] -> [0,0];
[1,1,0] -> [1,1,1,1,0,0];
[2] -> [2,2];
[1] -> [1,1];
[2,2,2] -> [2,2,2,2,2,2];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00737000000004 true true

[] -> [];
[1,1,0] -> [1,1,1,1,0,0];
[3] -> [3,3];
[0] -> [0,0];
[0,0] -> [0,0,0,0];
[1,0,1] -> [1,1,0,0,1,1];
[2] -> [2,2];
[2,2,1] -> [2,2,2,2,1,1];
[1,2] -> [1,1,2,2];
[3,3,1] -> [3,3,3,3,1,1];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00341299999991 true true

[2,3] -> [2,2,3,3];
[2,1] -> [2,2,1,1];
[] -> [];
[2,0] -> [2,2,0,0];
[0] -> [0,0];
[1,3] -> [1,1,3,3];
[2] -> [2,2];
[3,2] -> [3,3,2,2];
[3,0] -> [3,3,0,0];
[1] -> [1,1];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00680699999998 true true

[2] -> [2,2];
[1,2] -> [1,1,2,2];
[0,2,0] -> [0,0,2,2,0,0];
[0,0,3] -> [0,0,0,0,3,3];
[2,2] -> [2,2,2,2];
[0] -> [0,0];
[1,3] -> [1,1,3,3];
[3] -> [3,3];
[2,2,0] -> [2,2,2,2,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00336100000004 true true

