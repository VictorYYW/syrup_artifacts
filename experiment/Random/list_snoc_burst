list_snoc
([],0) -> [0];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, x . 0)

0.0017 false

([2,1],2) -> [2,1,2];

=================================
None
([1,2],2) -> [1,2,2];

=================================
None
([3],0) -> [3,0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    Cons (Un_Cons (x . 0) . 0, Cons (x . 1, Un_Cons (x . 0) . 1))

0.0253 false

([1,1,1],1) -> [1,1,1,1];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, x . 0)

0.1198 false

([],0) -> [0];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, x . 0)

0.0017 false

([2,2,0],0) -> [2,2,0,0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    Cons (Un_Cons (x . 0) . 0,
           Cons (Un_Cons (Un_Cons (x . 0) . 1) . 0,
                  Cons (x . 1, Un_Cons (Un_Cons (x . 0) . 1) . 1)))

0.8135 false

([],0) -> [0];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, x . 0)

0.0019 false

([1],0) -> [1,0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    Cons (Un_Cons (x . 0) . 0, Cons (x . 1, Un_Cons (x . 0) . 1))

0.0196 false

([2,1,0],3) -> [2,1,0,3];

=================================
None
([3,0],0) -> [3,0,0];
([3,2,2],1) -> [3,2,2,1];

=================================
None
([1,0],3) -> [1,0,3];
([],3) -> [3];

=================================
None
([],0) -> [0];
([0,0],1) -> [0,0,1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.5644 true

([3],1) -> [3,1];
([0],3) -> [0,3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    Cons (Un_Cons (x . 0) . 0, Cons (x . 1, Un_Cons (x . 0) . 1))

0.1806 false

([1,2],2) -> [1,2,2];
([0],2) -> [0,2];

=================================
None
([1],3) -> [1,3];
([],1) -> [1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                         Cons (x . 1, Un_Cons (x . 0) . 1))

29.0762 false

([0],0) -> [0,0];
([2,1,0],2) -> [2,1,0,2];

=================================
None
([2,0],2) -> [2,0,2];
([1,2,0],3) -> [1,2,0,3];

=================================
None
([2,0,3],3) -> [2,0,3,3];
([0,2],2) -> [0,2,2];

=================================
None
([2,3,2],2) -> [2,3,2,2];
([],3) -> [3];

=================================
None
([3,3],1) -> [3,3,1];
([0],2) -> [0,2];
([1,3,1],3) -> [1,3,1,3];

=================================
None
([0,1],3) -> [0,1,3];
([3,2],0) -> [3,2,0];
([],1) -> [1];

=================================
None
([2,3],3) -> [2,3,3];
([3,0,1],1) -> [3,0,1,1];
([0,3],1) -> [0,3,1];

=================================
None
([0,3],3) -> [0,3,3];
([0],1) -> [0,1];
([],2) -> [2];

=================================
None
([],2) -> [2];
([2,0,0],0) -> [2,0,0,0];
([3],0) -> [3,0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1608 true

([],3) -> [3];
([0,3],2) -> [0,3,2];
([1,2,3],1) -> [1,2,3,1];

=================================
None
([2,3],2) -> [2,3,2];
([0],1) -> [0,1];
([3],1) -> [3,1];

=================================
None
([2],0) -> [2,0];
([],1) -> [1];
([2,0,0],0) -> [2,0,0,0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0264 true

([3,0],3) -> [3,0,3];
([],3) -> [3];
([0],1) -> [0,1];

=================================
None
([],0) -> [0];
([3,1],3) -> [3,1,3];
([2,1,2],1) -> [2,1,2,1];

=================================
None
([0,0,0],2) -> [0,0,0,2];
([0,0],1) -> [0,0,1];
([3,3],2) -> [3,3,2];
([2,1,2],0) -> [2,1,2,0];

=================================
None
([2,3,1],3) -> [2,3,1,3];
([2,1],1) -> [2,1,1];
([3,2,2],2) -> [3,2,2,2];
([2],1) -> [2,1];

=================================
None
([3,2,2],3) -> [3,2,2,3];
([0,1],1) -> [0,1,1];
([],1) -> [1];
([1,3,2],3) -> [1,3,2,3];

=================================
None
([2,3,3],1) -> [2,3,3,1];
([1,0],2) -> [1,0,2];
([0],3) -> [0,3];
([],2) -> [2];

=================================
None
([2,2,3],1) -> [2,2,3,1];
([0,3,1],2) -> [0,3,1,2];
([2,1,0],1) -> [2,1,0,1];
([1,1],2) -> [1,1,2];

=================================
None
([],3) -> [3];
([1],1) -> [1,1];
([1,0,1],0) -> [1,0,1,0];
([3,2],1) -> [3,2,1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.2355 true

([1,1],1) -> [1,1,1];
([],1) -> [1];
([0],0) -> [0,0];
([3,0,0],3) -> [3,0,0,3];

=================================
None
([0],3) -> [0,3];
([],0) -> [0];
([0],0) -> [0,0];
([1],1) -> [1,1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

1.5252 true

([],0) -> [0];
([1],3) -> [1,3];
([],3) -> [3];
([],1) -> [1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

1.8698 true

([2],1) -> [2,1];
([],0) -> [0];
([],2) -> [2];
([3],3) -> [3,3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1836 true

([],2) -> [2];
([3,0,1],2) -> [3,0,1,2];
([],3) -> [3];
([3,0,0],3) -> [3,0,0,3];
([3,1],3) -> [3,1,3];

=================================
None
([1,1,1],1) -> [1,1,1,1];
([],2) -> [2];
([2,3],2) -> [2,3,2];
([2],0) -> [2,0];
([2,3,2],3) -> [2,3,2,3];

=================================
None
([1,3],3) -> [1,3,3];
([1,2],1) -> [1,2,1];
([3,1,2],0) -> [3,1,2,0];
([0,3],2) -> [0,3,2];
([],1) -> [1];

=================================
None
([],1) -> [1];
([3,2,3],2) -> [3,2,3,2];
([3,0],1) -> [3,0,1];
([1,2],1) -> [1,2,1];
([1,0,2],1) -> [1,0,2,1];

=================================
None
([2,0,3],0) -> [2,0,3,0];
([],3) -> [3];
([1],0) -> [1,0];
([3],0) -> [3,0];
([1],1) -> [1,1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.8537 true

([0,2,1],3) -> [0,2,1,3];
([1],3) -> [1,3];
([0],1) -> [0,1];
([1],0) -> [1,0];
([3,1],2) -> [3,1,2];

=================================
None
([3],2) -> [3,2];
([3,3,1],1) -> [3,3,1,1];
([0],1) -> [0,1];
([],1) -> [1];
([2,0,1],3) -> [2,0,1,3];

=================================
None
([3,2,3],0) -> [3,2,3,0];
([2],1) -> [2,1];
([],3) -> [3];
([1,0],3) -> [1,0,3];
([1,3],2) -> [1,3,2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

3.8473 true

([0,3,1],2) -> [0,3,1,2];
([1],2) -> [1,2];
([3,1,0],3) -> [3,1,0,3];
([1,3,0],2) -> [1,3,0,2];
([0,3,3],0) -> [0,3,3,0];

=================================
None
([],1) -> [1];
([3],3) -> [3,3];
([],0) -> [0];
([2],1) -> [2,1];
([0,0,0],1) -> [0,0,0,1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1553 true

([2,1,2],1) -> [2,1,2,1];
([3,2,1],1) -> [3,2,1,1];
([],0) -> [0];
([3,3,0],1) -> [3,3,0,1];
([3,1],1) -> [3,1,1];
([2],3) -> [2,3];

=================================
None
([1,1,0],2) -> [1,1,0,2];
([2],2) -> [2,2];
([1,0],0) -> [1,0,0];
([0,1],3) -> [0,1,3];
([1,1,0],3) -> [1,1,0,3];
([0],3) -> [0,3];

=================================
None
([3],3) -> [3,3];
([3,3],2) -> [3,3,2];
([1,3],3) -> [1,3,3];
([0],3) -> [0,3];
([2,3],0) -> [2,3,0];
([1],0) -> [1,0];

=================================
None
([3,0],3) -> [3,0,3];
([],3) -> [3];
([2],2) -> [2,2];
([0,2],3) -> [0,2,3];
([2,1,0],3) -> [2,1,0,3];
([3,1,1],2) -> [3,1,1,2];

=================================
None
([3,0,3],1) -> [3,0,3,1];
([],2) -> [2];
([0,3,1],0) -> [0,3,1,0];
([1],2) -> [1,2];
([],1) -> [1];
([2,1,2],3) -> [2,1,2,3];

=================================
None
([2,3],2) -> [2,3,2];
([],2) -> [2];
([],3) -> [3];
([3,0],2) -> [3,0,2];
([0,3,2],0) -> [0,3,2,0];
([],1) -> [1];

=================================
None
([2],1) -> [2,1];
([3],2) -> [3,2];
([0,3],3) -> [0,3,3];
([3],1) -> [3,1];
([],3) -> [3];
([],0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                         Cons (x . 1, Un_Cons (x . 0) . 1))

1.4390 false

([],1) -> [1];
([0],1) -> [0,1];
([1],2) -> [1,2];
([2],2) -> [2,2];
([],3) -> [3];
([1,1],1) -> [1,1,1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

1.2256 true

([3,3],1) -> [3,3,1];
([],0) -> [0];
([],3) -> [3];
([1,1],3) -> [1,1,3];
([3,2],0) -> [3,2,0];
([1,2,1],3) -> [1,2,1,3];

=================================
None
([1,3,1],3) -> [1,3,1,3];
([],1) -> [1];
([0,2],3) -> [0,2,3];
([3],0) -> [3,0];
([2,0,2],3) -> [2,0,2,3];
([3],2) -> [3,2];

=================================
None
([],1) -> [1];
([2],0) -> [2,0];
([2,1],3) -> [2,1,3];
([],2) -> [2];
([1],2) -> [1,2];
([3],0) -> [3,0];
([3,3],3) -> [3,3,3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0358 true

([],3) -> [3];
([0],2) -> [0,2];
([],1) -> [1];
([2,3,3],1) -> [2,3,3,1];
([1,3],2) -> [1,3,2];
([2],3) -> [2,3];
([3],2) -> [3,2];

=================================
None
([2],1) -> [2,1];
([],1) -> [1];
([0,3,1],3) -> [0,3,1,3];
([3,0],1) -> [3,0,1];
([1],0) -> [1,0];
([3,3],2) -> [3,3,2];
([2,2],0) -> [2,2,0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

2.1519 true

([],1) -> [1];
([0,1,3],3) -> [0,1,3,3];
([0,3],1) -> [0,3,1];
([1,3],2) -> [1,3,2];
([2,3],3) -> [2,3,3];
([],0) -> [0];
([3],2) -> [3,2];

=================================
None
([2,1,3],2) -> [2,1,3,2];
([1,1],3) -> [1,1,3];
([3],3) -> [3,3];
([2,2],1) -> [2,2,1];
([],0) -> [0];
([3,2,1],0) -> [3,2,1,0];
([1,2,3],1) -> [1,2,3,1];

=================================
None
([2],2) -> [2,2];
([1,3],0) -> [1,3,0];
([1,0,0],1) -> [1,0,0,1];
([],1) -> [1];
([2],3) -> [2,3];
([3],3) -> [3,3];
([1],3) -> [1,3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

1.2661 true

([0],2) -> [0,2];
([],3) -> [3];
([],1) -> [1];
([],0) -> [0];
([3],1) -> [3,1];
([2,2,1],1) -> [2,2,1,1];
([2,0],1) -> [2,0,1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.8491 true

([],0) -> [0];
([],1) -> [1];
([2,2,3],0) -> [2,2,3,0];
([0,2],3) -> [0,2,3];
([1],1) -> [1,1];
([2,0],2) -> [2,0,2];
([1,1],0) -> [1,1,0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.9949 true

([],2) -> [2];
([],3) -> [3];
([],1) -> [1];
([2,1,1],3) -> [2,1,1,3];
([2,3],0) -> [2,3,0];
([0,2,1],1) -> [0,2,1,1];
([2],2) -> [2,2];

=================================
None
([2,3],1) -> [2,3,1];
([0,2],3) -> [0,2,3];
([3,0],1) -> [3,0,1];
([3,3,2],0) -> [3,3,2,0];
([],0) -> [0];
([3],2) -> [3,2];
([],2) -> [2];

=================================
None
([],2) -> [2];
([],3) -> [3];
([1],0) -> [1,0];
([1,2],3) -> [1,2,3];
([3,3,3],2) -> [3,3,3,2];
([2],1) -> [2,1];
([3,2,3],2) -> [3,2,3,2];
([2],0) -> [2,0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0596 true

([2,0],2) -> [2,0,2];
([0],2) -> [0,2];
([2,0,2],1) -> [2,0,2,1];
([],3) -> [3];
([],1) -> [1];
([3,2,3],0) -> [3,2,3,0];
([0,1],1) -> [0,1,1];
([],0) -> [0];

=================================
None
([1],2) -> [1,2];
([2],0) -> [2,0];
([3,2],0) -> [3,2,0];
([3,3,1],0) -> [3,3,1,0];
([],2) -> [2];
([2,2],1) -> [2,2,1];
([0],0) -> [0,0];
([3,3],3) -> [3,3,3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

1.7210 true

([1,1],3) -> [1,1,3];
([2,1],2) -> [2,1,2];
([0],0) -> [0,0];
([],3) -> [3];
([2,3,1],3) -> [2,3,1,3];
([2,1],3) -> [2,1,3];
([3,2,2],2) -> [3,2,2,2];
([3],0) -> [3,0];

=================================
None
([1],1) -> [1,1];
([],0) -> [0];
([],2) -> [2];
([2],3) -> [2,3];
([3,3,2],1) -> [3,3,2,1];
([],1) -> [1];
([3,0,0],0) -> [3,0,0,0];
([0,1],2) -> [0,1,2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

30.0648 true

([0],3) -> [0,3];
([2,2],3) -> [2,2,3];
([],0) -> [0];
([2,3,0],1) -> [2,3,0,1];
([2],0) -> [2,0];
([0,0],1) -> [0,0,1];
([1,1,3],3) -> [1,1,3,3];
([1,2],3) -> [1,2,3];

=================================
None
([3],1) -> [3,1];
([3],3) -> [3,3];
([2,0],0) -> [2,0,0];
([1],3) -> [1,3];
([0,3,3],1) -> [0,3,3,1];
([3,0,1],0) -> [3,0,1,0];
([1,3],0) -> [1,3,0];
([0],0) -> [0,0];

=================================
None
([],3) -> [3];
([],2) -> [2];
([1,2],0) -> [1,2,0];
([3,2],0) -> [3,2,0];
([],0) -> [0];
([3],1) -> [3,1];
([0],1) -> [0,1];
([0],0) -> [0,0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1786 true

([],0) -> [0];
([1,3,0],3) -> [1,3,0,3];
([],2) -> [2];
([1],1) -> [1,1];
([0,1,1],0) -> [0,1,1,0];
([0],3) -> [0,3];
([2,3,0],2) -> [2,3,0,2];
([2],2) -> [2,2];

=================================
None
([0],0) -> [0,0];
([],0) -> [0];
([],3) -> [3];
([0,2],0) -> [0,2,0];
([1],2) -> [1,2];
([0,2,3],1) -> [0,2,3,1];
([],2) -> [2];
([2],2) -> [2,2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1509 true

([2],3) -> [2,3];
([0,0,1],3) -> [0,0,1,3];
([2],1) -> [2,1];
([],3) -> [3];
([1,3,1],0) -> [1,3,1,0];
([],2) -> [2];
([],1) -> [1];
([3],3) -> [3,3];
([1,0],0) -> [1,0,0];

=================================
None
([1,1],3) -> [1,1,3];
([0],0) -> [0,0];
([1],0) -> [1,0];
([2,2],3) -> [2,2,3];
([2],0) -> [2,0];
([],2) -> [2];
([3],0) -> [3,0];
([2,1,3],1) -> [2,1,3,1];
([0,1],1) -> [0,1,1];

=================================
None
([2],3) -> [2,3];
([],3) -> [3];
([3,0],3) -> [3,0,3];
([3,2],1) -> [3,2,1];
([3,2,0],2) -> [3,2,0,2];
([],1) -> [1];
([0],1) -> [0,1];
([2,2,3],1) -> [2,2,3,1];
([3,1],0) -> [3,1,0];

=================================
None
([],2) -> [2];
([2],3) -> [2,3];
([3,1,2],3) -> [3,1,2,3];
([2,2,3],2) -> [2,2,3,2];
([0],0) -> [0,0];
([0,3,2],2) -> [0,3,2,2];
([],1) -> [1];
([3],1) -> [3,1];
([3,1,3],1) -> [3,1,3,1];

=================================
None
([],1) -> [1];
([3,0,1],1) -> [3,0,1,1];
([],2) -> [2];
([3,0,3],3) -> [3,0,3,3];
([0,0],0) -> [0,0,0];
([],0) -> [0];
([0,2],0) -> [0,2,0];
([3],1) -> [3,1];
([3],3) -> [3,3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

9.6560 true

([],2) -> [2];
([],0) -> [0];
([1,0],3) -> [1,0,3];
([2,1],3) -> [2,1,3];
([3,0],0) -> [3,0,0];
([3],2) -> [3,2];
([3],0) -> [3,0];
([1,1,0],1) -> [1,1,0,1];
([0],0) -> [0,0];

=================================
None
([2],2) -> [2,2];
([3,0,0],1) -> [3,0,0,1];
([3],0) -> [3,0];
([3],1) -> [3,1];
([],3) -> [3];
([0,3],2) -> [0,3,2];
([0,1,0],1) -> [0,1,0,1];
([0,0],0) -> [0,0,0];
([2,3],1) -> [2,3,1];

=================================
None
([],2) -> [2];
([2],3) -> [2,3];
([3,3],2) -> [3,3,2];
([3],2) -> [3,2];
([3,1],0) -> [3,1,0];
([],3) -> [3];
([1],3) -> [1,3];
([2],0) -> [2,0];
([1],0) -> [1,0];

=================================
None
([2,2,0],0) -> [2,2,0,0];
([3,1,3],3) -> [3,1,3,3];
([3,0,1],1) -> [3,0,1,1];
([],0) -> [0];
([3,2],3) -> [3,2,3];
([2,1,1],3) -> [2,1,1,3];
([1],3) -> [1,3];
([3],3) -> [3,3];
([0,0],2) -> [0,0,2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.9357 true

([3,1],2) -> [3,1,2];
([0,2,1],0) -> [0,2,1,0];
([0,1,3],1) -> [0,1,3,1];
([1,0],0) -> [1,0,0];
([3,1,0],2) -> [3,1,0,2];
([],2) -> [2];
([1,2],2) -> [1,2,2];
([1,2],3) -> [1,2,3];
([2,2],1) -> [2,2,1];

=================================
None
([2,3],1) -> [2,3,1];
([],2) -> [2];
([0,3],0) -> [0,3,0];
([0,1,3],0) -> [0,1,3,0];
([],1) -> [1];
([],0) -> [0];
([2,3],0) -> [2,3,0];
([0],3) -> [0,3];
([3,2],1) -> [3,2,1];
([1,3,1],2) -> [1,3,1,2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

1.4085 true

([],3) -> [3];
([0],0) -> [0,0];
([0],1) -> [0,1];
([1,2,1],3) -> [1,2,1,3];
([],1) -> [1];
([1],0) -> [1,0];
([2],3) -> [2,3];
([3,1],2) -> [3,1,2];
([2,2,1],0) -> [2,2,1,0];
([2],2) -> [2,2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0858 true

([2,3],0) -> [2,3,0];
([1,2,0],3) -> [1,2,0,3];
([1],0) -> [1,0];
([0,0,2],3) -> [0,0,2,3];
([3],1) -> [3,1];
([0,3],1) -> [0,3,1];
([1,3],3) -> [1,3,3];
([],2) -> [2];
([2,0],3) -> [2,0,3];
([0,2,0],2) -> [0,2,0,2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.2092 true

([],0) -> [0];
([0,3],1) -> [0,3,1];
([3,2,2],3) -> [3,2,2,3];
([3],2) -> [3,2];
([1],1) -> [1,1];
([],2) -> [2];
([0,0,3],0) -> [0,0,3,0];
([],1) -> [1];
([3,2],0) -> [3,2,0];
([2,1,0],0) -> [2,1,0,0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

5.1868 true

([],1) -> [1];
([0,3,0],1) -> [0,3,0,1];
([1],1) -> [1,1];
([0,3,2],2) -> [0,3,2,2];
([],2) -> [2];
([2],0) -> [2,0];
([3,0,1],3) -> [3,0,1,3];
([2,2,1],1) -> [2,2,1,1];
([1,3],3) -> [1,3,3];
([2,0,3],3) -> [2,0,3,3];

=================================
None
([1,1,0],3) -> [1,1,0,3];
([3],2) -> [3,2];
([1,2,2],0) -> [1,2,2,0];
([2,0],0) -> [2,0,0];
([1],2) -> [1,2];
([2,2],2) -> [2,2,2];
([3,0],3) -> [3,0,3];
([],2) -> [2];
([0],0) -> [0,0];
([2,1],3) -> [2,1,3];

=================================
None
([0,2],2) -> [0,2,2];
([],1) -> [1];
([],0) -> [0];
([],2) -> [2];
([0,3,2],2) -> [0,3,2,2];
([1,1,3],1) -> [1,1,3,1];
([0,3],0) -> [0,3,0];
([2],3) -> [2,3];
([3,3,2],1) -> [3,3,2,1];
([3,3,2],2) -> [3,3,2,2];

=================================
None
([2],3) -> [2,3];
([],0) -> [0];
([3,1,2],2) -> [3,1,2,2];
([1],0) -> [1,0];
([0,2,1],2) -> [0,2,1,2];
([1,2],2) -> [1,2,2];
([],1) -> [1];
([1,1],3) -> [1,1,3];
([0,3,2],0) -> [0,3,2,0];
([1,3],3) -> [1,3,3];

=================================
None
([1,3],1) -> [1,3,1];
([2,1,1],3) -> [2,1,1,3];
([],0) -> [0];
([],2) -> [2];
([],3) -> [3];
([2,0],0) -> [2,0,0];
([0,0,2],3) -> [0,0,2,3];
([],1) -> [1];
([3,1],0) -> [3,1,0];
([3],1) -> [3,1];

=================================
None
([3,1],0) -> [3,1,0];
([],3) -> [3];
([3,0],3) -> [3,0,3];
([],0) -> [0];
([0,1,0],2) -> [0,1,0,2];
([2,1],1) -> [2,1,1];
([3,1],2) -> [3,1,2];
([2,3],0) -> [2,3,0];
([3,3],3) -> [3,3,3];
([],2) -> [2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1674 true

([0],2) -> [0,2];
([2,1],1) -> [2,1,1];
([0,1,0],2) -> [0,1,0,2];
([],2) -> [2];
([3,3],2) -> [3,3,2];
([3,2],3) -> [3,2,3];
([3,3,3],3) -> [3,3,3,3];
([0,3,1],2) -> [0,3,1,2];
([],3) -> [3];
([2,3,0],1) -> [2,3,0,1];
([3],3) -> [3,3];

=================================
None
([],3) -> [3];
([],0) -> [0];
([],2) -> [2];
([3],2) -> [3,2];
([0],2) -> [0,2];
([0,0,0],3) -> [0,0,0,3];
([2],3) -> [2,3];
([2,2],0) -> [2,2,0];
([1],0) -> [1,0];
([2,0],0) -> [2,0,0];
([1,0],3) -> [1,0,3];

=================================
None
([3],3) -> [3,3];
([1],0) -> [1,0];
([3,1],0) -> [3,1,0];
([3],1) -> [3,1];
([3],2) -> [3,2];
([0],1) -> [0,1];
([0,0],3) -> [0,0,3];
([2,2,1],2) -> [2,2,1,2];
([1,3,2],2) -> [1,3,2,2];
([3,2,3],1) -> [3,2,3,1];
([3,3],0) -> [3,3,0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.5324 true

([0,1],3) -> [0,1,3];
([0,2,1],0) -> [0,2,1,0];
([3,3],3) -> [3,3,3];
([],3) -> [3];
([3],0) -> [3,0];
([],0) -> [0];
([2,1,0],0) -> [2,1,0,0];
([],2) -> [2];
([3,1,1],0) -> [3,1,1,0];
([0,2],1) -> [0,2,1];
([2,1,1],3) -> [2,1,1,3];

=================================
None
([3,1],1) -> [3,1,1];
([],3) -> [3];
([],0) -> [0];
([0,1],0) -> [0,1,0];
([3,3,0],2) -> [3,3,0,2];
([2,0],1) -> [2,0,1];
([2,3],1) -> [2,3,1];
([2],2) -> [2,2];
([],1) -> [1];
([0],3) -> [0,3];
([2,2,3],1) -> [2,2,3,1];

=================================
None
([],0) -> [0];
([2],2) -> [2,2];
([2,1,1],1) -> [2,1,1,1];
([],1) -> [1];
([1,2,2],0) -> [1,2,2,0];
([],3) -> [3];
([0,3],1) -> [0,3,1];
([0,1],2) -> [0,1,2];
([0,0,0],1) -> [0,0,0,1];
([0],2) -> [0,2];
([3],0) -> [3,0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

3.9053 true

([3,3,3],3) -> [3,3,3,3];
([],1) -> [1];
([0,0],2) -> [0,0,2];
([3,1],2) -> [3,1,2];
([3,1],1) -> [3,1,1];
([0,1,1],0) -> [0,1,1,0];
([],0) -> [0];
([0,1],3) -> [0,1,3];
([1],2) -> [1,2];
([2],2) -> [2,2];
([3],3) -> [3,3];

=================================
None
([3,3],2) -> [3,3,2];
([1,2,3],3) -> [1,2,3,3];
([1],0) -> [1,0];
([],1) -> [1];
([1,0],2) -> [1,0,2];
([1],1) -> [1,1];
([1,1],0) -> [1,1,0];
([2],2) -> [2,2];
([1,0],0) -> [1,0,0];
([2],0) -> [2,0];
([0,2],0) -> [0,2,0];

=================================
None
([3,3,3],2) -> [3,3,3,2];
([2,3],0) -> [2,3,0];
([],1) -> [1];
([1],2) -> [1,2];
([3,1],0) -> [3,1,0];
([2,0],1) -> [2,0,1];
([1,2,2],0) -> [1,2,2,0];
([1,3,1],0) -> [1,3,1,0];
([3],1) -> [3,1];
([0,2],0) -> [0,2,0];
([0],3) -> [0,3];

=================================
None
([],0) -> [0];
([3,1],3) -> [3,1,3];
([2,0,0],3) -> [2,0,0,3];
([1],2) -> [1,2];
([2,3,1],0) -> [2,3,1,0];
([2],1) -> [2,1];
([],2) -> [2];
([0,1,1],2) -> [0,1,1,2];
([1],3) -> [1,3];
([],1) -> [1];
([1,1,1],3) -> [1,1,1,3];

=================================
None
([2,0,2],3) -> [2,0,2,3];
([3,0,1],2) -> [3,0,1,2];
([],1) -> [1];
([1,3],0) -> [1,3,0];
([2,3,0],2) -> [2,3,0,2];
([2],1) -> [2,1];
([],0) -> [0];
([1],3) -> [1,3];
([3,2,1],1) -> [3,2,1,1];
([1],2) -> [1,2];
([],3) -> [3];
([1,2,0],2) -> [1,2,0,2];

=================================
None
([],2) -> [2];
([0,1,2],0) -> [0,1,2,0];
([1,0,2],0) -> [1,0,2,0];
([3],0) -> [3,0];
([3,1],3) -> [3,1,3];
([0,3],0) -> [0,3,0];
([1,1],1) -> [1,1,1];
([1],2) -> [1,2];
([1,1,0],3) -> [1,1,0,3];
([2,2],0) -> [2,2,0];
([3,2,1],2) -> [3,2,1,2];
([0,0],1) -> [0,0,1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.6194 true

([2,3],2) -> [2,3,2];
([],2) -> [2];
([3,1],1) -> [3,1,1];
([0],3) -> [0,3];
([],0) -> [0];
([],1) -> [1];
([3],0) -> [3,0];
([0,3],0) -> [0,3,0];
([1],1) -> [1,1];
([3],1) -> [3,1];
([2,3,3],3) -> [2,3,3,3];
([2],0) -> [2,0];

=================================
None
([3],1) -> [3,1];
([0,3],0) -> [0,3,0];
([3],3) -> [3,3];
([],2) -> [2];
([0,3,3],3) -> [0,3,3,3];
([],0) -> [0];
([2,1,1],2) -> [2,1,1,2];
([],3) -> [3];
([1,3,0],2) -> [1,3,0,2];
([0,3,2],2) -> [0,3,2,2];
([3,3,2],3) -> [3,3,2,3];
([2],1) -> [2,1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.5354 true

([],0) -> [0];
([2,3],3) -> [2,3,3];
([3,3,0],2) -> [3,3,0,2];
([],1) -> [1];
([2,3,3],0) -> [2,3,3,0];
([2],0) -> [2,0];
([3,2],0) -> [3,2,0];
([1,2,1],3) -> [1,2,1,3];
([],2) -> [2];
([1],0) -> [1,0];
([1,2,2],1) -> [1,2,2,1];
([0],3) -> [0,3];

=================================
None
([0,3,1],3) -> [0,3,1,3];
([2,0,3],0) -> [2,0,3,0];
([3],3) -> [3,3];
([1,1,3],2) -> [1,1,3,2];
([2,1,1],0) -> [2,1,1,0];
([2,2,1],0) -> [2,2,1,0];
([2],0) -> [2,0];
([2,0,1],1) -> [2,0,1,1];
([3,3,1],3) -> [3,3,1,3];
([0,3,1],2) -> [0,3,1,2];
([0,3,0],1) -> [0,3,0,1];
([],0) -> [0];

=================================
None
([0,1],0) -> [0,1,0];
([3],2) -> [3,2];
([0],1) -> [0,1];
([2,2,0],2) -> [2,2,0,2];
([1,2],0) -> [1,2,0];
([1],1) -> [1,1];
([3,0,3],3) -> [3,0,3,3];
([3,2],1) -> [3,2,1];
([],3) -> [3];
([1,3],1) -> [1,3,1];
([0],3) -> [0,3];
([],0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0904 true

([],3) -> [3];
([1,3],0) -> [1,3,0];
([1],2) -> [1,2];
([1,3,1],1) -> [1,3,1,1];
([1,1,1],0) -> [1,1,1,0];
([],0) -> [0];
([0,3],1) -> [0,3,1];
([3,1],0) -> [3,1,0];
([],2) -> [2];
([0,0],0) -> [0,0,0];
([2,2],0) -> [2,2,0];
([1,2,0],2) -> [1,2,0,2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0740 true

([0,2,3],0) -> [0,2,3,0];
([2,0],1) -> [2,0,1];
([1],2) -> [1,2];
([0,3],0) -> [0,3,0];
([],2) -> [2];
([],1) -> [1];
([1],3) -> [1,3];
([2],3) -> [2,3];
([3,3],2) -> [3,3,2];
([2],0) -> [2,0];
([1,1,0],2) -> [1,1,0,2];
([1,2],1) -> [1,2,1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

1.8792 true

([1,2,3],2) -> [1,2,3,2];
([],0) -> [0];
([1],1) -> [1,1];
([],1) -> [1];
([3,0],1) -> [3,0,1];
([0,0],0) -> [0,0,0];
([2,1],3) -> [2,1,3];
([0],2) -> [0,2];
([1,0,0],3) -> [1,0,0,3];
([0],0) -> [0,0];
([1,1,2],1) -> [1,1,2,1];
([1,3,3],0) -> [1,3,3,0];

=================================
None
([],0) -> [0];
([3,3,3],1) -> [3,3,3,1];
([2,2],0) -> [2,2,0];
([],2) -> [2];
([1],0) -> [1,0];
([],3) -> [3];
([],1) -> [1];
([3,1,3],3) -> [3,1,3,3];
([1],2) -> [1,2];
([3,1],0) -> [3,1,0];
([3,0,0],0) -> [3,0,0,0];
([1,1],3) -> [1,1,3];
([1,2],0) -> [1,2,0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

45.6606 true

([2,2,2],2) -> [2,2,2,2];
([1,1],2) -> [1,1,2];
([1],1) -> [1,1];
([],1) -> [1];
([1],3) -> [1,3];
([3,3],3) -> [3,3,3];
([3,1],2) -> [3,1,2];
([3,3,1],3) -> [3,3,1,3];
([2],3) -> [2,3];
([],2) -> [2];
([2,2,2],3) -> [2,2,2,3];
([3,0],3) -> [3,0,3];
([0],3) -> [0,3];

=================================
None
([2,2,0],1) -> [2,2,0,1];
([3,3,1],0) -> [3,3,1,0];
([0],2) -> [0,2];
([],3) -> [3];
([0,3,3],0) -> [0,3,3,0];
([2,1,1],2) -> [2,1,1,2];
([2,2],2) -> [2,2,2];
([3,1],1) -> [3,1,1];
([3,3],2) -> [3,3,2];
([0,2],0) -> [0,2,0];
([],0) -> [0];
([1,1,3],1) -> [1,1,3,1];
([3,3,1],2) -> [3,3,1,2];

=================================
None
([0,3,0],1) -> [0,3,0,1];
([1,0,3],3) -> [1,0,3,3];
([0,2],3) -> [0,2,3];
([2,2],1) -> [2,2,1];
([2,0,1],0) -> [2,0,1,0];
([],3) -> [3];
([2,3],1) -> [2,3,1];
([],1) -> [1];
([1,2,2],0) -> [1,2,2,0];
([1,0],3) -> [1,0,3];
([0],3) -> [0,3];
([1,3,3],1) -> [1,3,3,1];
([2,0,3],1) -> [2,0,3,1];

=================================
None
([0],2) -> [0,2];
([],3) -> [3];
([1,0],2) -> [1,0,2];
([2,1,0],0) -> [2,1,0,0];
([],0) -> [0];
([0,0,1],1) -> [0,0,1,1];
([3,0],2) -> [3,0,2];
([2],2) -> [2,2];
([2],0) -> [2,0];
([],1) -> [1];
([3],3) -> [3,3];
([],2) -> [2];
([2],3) -> [2,3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.5078 true

([2,0,2],0) -> [2,0,2,0];
([3,0],1) -> [3,0,1];
([0],3) -> [0,3];
([],1) -> [1];
([0,1],1) -> [0,1,1];
([],0) -> [0];
([3],1) -> [3,1];
([3,3],1) -> [3,3,1];
([2,3],1) -> [2,3,1];
([],3) -> [3];
([1,2],1) -> [1,2,1];
([],2) -> [2];
([3],3) -> [3,3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.9569 true

([3],2) -> [3,2];
([3],3) -> [3,3];
([],0) -> [0];
([3,3,0],1) -> [3,3,0,1];
([0],0) -> [0,0];
([0,3,0],2) -> [0,3,0,2];
([3,3,1],3) -> [3,3,1,3];
([1,0],0) -> [1,0,0];
([2,3,0],1) -> [2,3,0,1];
([2,2],0) -> [2,2,0];
([2,1],1) -> [2,1,1];
([1,1],2) -> [1,1,2];
([1,0,0],2) -> [1,0,0,2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

1.5242 true

([2,1,0],1) -> [2,1,0,1];
([2,3],2) -> [2,3,2];
([0,3,2],0) -> [0,3,2,0];
([3,0],2) -> [3,0,2];
([2,1,3],0) -> [2,1,3,0];
([],1) -> [1];
([3],1) -> [3,1];
([],3) -> [3];
([3],0) -> [3,0];
([1,2],0) -> [1,2,0];
([1,0,1],2) -> [1,0,1,2];
([],0) -> [0];
([2,0,2],1) -> [2,0,2,1];

=================================
None
([0,0,3],0) -> [0,0,3,0];
([2,2,3],1) -> [2,2,3,1];
([0,1],3) -> [0,1,3];
([2],2) -> [2,2];
([],3) -> [3];
([0],3) -> [0,3];
([3],1) -> [3,1];
([1,2],1) -> [1,2,1];
([],1) -> [1];
([2],3) -> [2,3];
([0,3],2) -> [0,3,2];
([1],3) -> [1,3];
([],2) -> [2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

1.1087 true

([],3) -> [3];
([0,3],0) -> [0,3,0];
([3,0],3) -> [3,0,3];
([],2) -> [2];
([0,2,2],2) -> [0,2,2,2];
([3,1,0],0) -> [3,1,0,0];
([3,1],3) -> [3,1,3];
([1,2,1],1) -> [1,2,1,1];
([1,3],1) -> [1,3,1];
([0,0],3) -> [0,0,3];
([2,0,3],2) -> [2,0,3,2];
([],0) -> [0];
([3,1,3],3) -> [3,1,3,3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1356 true

([2,1,2],1) -> [2,1,2,1];
([2],0) -> [2,0];
([0],3) -> [0,3];
([0,3],2) -> [0,3,2];
([2,0],3) -> [2,0,3];
([],2) -> [2];
([3,2,2],2) -> [3,2,2,2];
([2,0,3],1) -> [2,0,3,1];
([2,3,0],2) -> [2,3,0,2];
([],3) -> [3];
([1,2,2],2) -> [1,2,2,2];
([3],1) -> [3,1];
([3,2],0) -> [3,2,0];
([1,1],1) -> [1,1,1];

=================================
None
([0],2) -> [0,2];
([0,1,3],2) -> [0,1,3,2];
([1],1) -> [1,1];
([3,3],1) -> [3,3,1];
([0,1,0],0) -> [0,1,0,0];
([],0) -> [0];
([0],1) -> [0,1];
([2],2) -> [2,2];
([2],0) -> [2,0];
([],3) -> [3];
([0,0,2],3) -> [0,0,2,3];
([2,3,3],1) -> [2,3,3,1];
([3,2],1) -> [3,2,1];
([0,3],0) -> [0,3,0];

=================================
None
([3,2,0],2) -> [3,2,0,2];
([],0) -> [0];
([1,0,0],2) -> [1,0,0,2];
([0,3],3) -> [0,3,3];
([3,1,2],2) -> [3,1,2,2];
([1],1) -> [1,1];
([1,0],0) -> [1,0,0];
([1,3,1],0) -> [1,3,1,0];
([3],2) -> [3,2];
([],2) -> [2];
([2,2],0) -> [2,2,0];
([2,1,3],3) -> [2,1,3,3];
([1],0) -> [1,0];
([],3) -> [3];

=================================
None
([0,1],2) -> [0,1,2];
([2],0) -> [2,0];
([2,2,3],2) -> [2,2,3,2];
([3,0],0) -> [3,0,0];
([2,0,3],2) -> [2,0,3,2];
([],0) -> [0];
([],1) -> [1];
([2,1,1],0) -> [2,1,1,0];
([2,1],1) -> [2,1,1];
([1,3,0],0) -> [1,3,0,0];
([1,3],0) -> [1,3,0];
([2],3) -> [2,3];
([0,3],3) -> [0,3,3];
([1,3],1) -> [1,3,1];

=================================
None
([1,0,0],0) -> [1,0,0,0];
([0,0],1) -> [0,0,1];
([2,3,1],3) -> [2,3,1,3];
([0,0,3],0) -> [0,0,3,0];
([],1) -> [1];
([2,3],3) -> [2,3,3];
([3,0,1],2) -> [3,0,1,2];
([3],2) -> [3,2];
([],3) -> [3];
([3,3,3],0) -> [3,3,3,0];
([3],3) -> [3,3];
([],0) -> [0];
([1,2,3],1) -> [1,2,3,1];
([],2) -> [2];

=================================
None
([1,2],1) -> [1,2,1];
([1],2) -> [1,2];
([0,1],2) -> [0,1,2];
([3,3],3) -> [3,3,3];
([2,1],0) -> [2,1,0];
([1],0) -> [1,0];
([2],0) -> [2,0];
([2,2],0) -> [2,2,0];
([],0) -> [0];
([2,0],2) -> [2,0,2];
([],1) -> [1];
([3],2) -> [3,2];
([3,3,1],2) -> [3,3,1,2];
([3,1],2) -> [3,1,2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.5481 true

([3],1) -> [3,1];
([1,3],0) -> [1,3,0];
([],3) -> [3];
([0,3,3],1) -> [0,3,3,1];
([3,0],3) -> [3,0,3];
([0,1,1],2) -> [0,1,1,2];
([1,1,1],1) -> [1,1,1,1];
([0],3) -> [0,3];
([1,2],0) -> [1,2,0];
([],1) -> [1];
([2,1,2],2) -> [2,1,2,2];
([],0) -> [0];
([2,3,2],3) -> [2,3,2,3];
([0,3,3],2) -> [0,3,3,2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.5318 true

([3,1,3],2) -> [3,1,3,2];
([0],1) -> [0,1];
([2,3,3],3) -> [2,3,3,3];
([],2) -> [2];
([1,2],3) -> [1,2,3];
([1,2],0) -> [1,2,0];
([2],0) -> [2,0];
([1,0,0],2) -> [1,0,0,2];
([2,3],3) -> [2,3,3];
([3,0,2],3) -> [3,0,2,3];
([0,2],0) -> [0,2,0];
([0,2,3],3) -> [0,2,3,3];
([2],1) -> [2,1];
([3],1) -> [3,1];

=================================
None
([],0) -> [0];
([2],1) -> [2,1];
([1],0) -> [1,0];
([],3) -> [3];
([2],3) -> [2,3];
([3],3) -> [3,3];
([0],0) -> [0,0];
([1,1,0],0) -> [1,1,0,0];
([],1) -> [1];
([1,1],2) -> [1,1,2];
([1],1) -> [1,1];
([2],0) -> [2,0];
([2,2,2],1) -> [2,2,2,1];
([1,1],1) -> [1,1,1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0237 true

([0],3) -> [0,3];
([3,1],2) -> [3,1,2];
([],1) -> [1];
([],3) -> [3];
([],2) -> [2];
([3],1) -> [3,1];
([0,1],3) -> [0,1,3];
([1],3) -> [1,3];
([0,3,0],2) -> [0,3,0,2];
([3,0],3) -> [3,0,3];
([2],3) -> [2,3];
([1,0],0) -> [1,0,0];
([0,2,1],2) -> [0,2,1,2];
([3],0) -> [3,0];

=================================
None
([],1) -> [1];
([2,2],3) -> [2,2,3];
([1,2],2) -> [1,2,2];
([3],1) -> [3,1];
([2,0,0],3) -> [2,0,0,3];
([2],3) -> [2,3];
([3],2) -> [3,2];
([3,0,0],2) -> [3,0,0,2];
([],2) -> [2];
([2,2,3],1) -> [2,2,3,1];
([],0) -> [0];
([1],1) -> [1,1];
([0,3,1],0) -> [0,3,1,0];
([2],1) -> [2,1];
([3],0) -> [3,0];

=================================
None
([2,0],2) -> [2,0,2];
([2,0],3) -> [2,0,3];
([1],0) -> [1,0];
([0,1],1) -> [0,1,1];
([0,0],0) -> [0,0,0];
([0,0],1) -> [0,0,1];
([0],3) -> [0,3];
([1,2],3) -> [1,2,3];
([1,1],0) -> [1,1,0];
([3],0) -> [3,0];
([],3) -> [3];
([2,3,1],1) -> [2,3,1,1];
([2,3,1],2) -> [2,3,1,2];
([],0) -> [0];
([0,1],3) -> [0,1,3];

=================================
None
([1,1,2],1) -> [1,1,2,1];
([0,0,2],3) -> [0,0,2,3];
([0,0,0],1) -> [0,0,0,1];
([3,2],3) -> [3,2,3];
([0,3],3) -> [0,3,3];
([2,3,1],2) -> [2,3,1,2];
([],0) -> [0];
([0,1,1],1) -> [0,1,1,1];
([2,1],1) -> [2,1,1];
([2,0],3) -> [2,0,3];
([0],0) -> [0,0];
([3,3],1) -> [3,3,1];
([2,0,2],0) -> [2,0,2,0];
([0,2],1) -> [0,2,1];
([],2) -> [2];

=================================
None
([2],3) -> [2,3];
([3,1,1],2) -> [3,1,1,2];
([3],1) -> [3,1];
([0,0,3],3) -> [0,0,3,3];
([1],2) -> [1,2];
([],1) -> [1];
([2,0],3) -> [2,0,3];
([3,2,0],1) -> [3,2,0,1];
([2],0) -> [2,0];
([2,1],1) -> [2,1,1];
([1],0) -> [1,0];
([3,3,2],2) -> [3,3,2,2];
([0,0,0],0) -> [0,0,0,0];
([0],3) -> [0,3];
([3,1],3) -> [3,1,3];

=================================
None
([2],2) -> [2,2];
([],2) -> [2];
([1,3],3) -> [1,3,3];
([3],0) -> [3,0];
([3,2],3) -> [3,2,3];
([0,2],2) -> [0,2,2];
([1,3,2],0) -> [1,3,2,0];
([3,0],0) -> [3,0,0];
([2],1) -> [2,1];
([3,1],2) -> [3,1,2];
([1,3],0) -> [1,3,0];
([2,0],3) -> [2,0,3];
([3,2],2) -> [3,2,2];
([],0) -> [0];
([2,0,0],1) -> [2,0,0,1];

=================================
None
([],0) -> [0];
([3,0,3],2) -> [3,0,3,2];
([3,2,2],2) -> [3,2,2,2];
([0,0],2) -> [0,0,2];
([],3) -> [3];
([0,1],3) -> [0,1,3];
([0,0],1) -> [0,0,1];
([2],2) -> [2,2];
([],1) -> [1];
([2,0],3) -> [2,0,3];
([3,3,3],1) -> [3,3,3,1];
([0,1,3],1) -> [0,1,3,1];
([0],2) -> [0,2];
([2,3,2],0) -> [2,3,2,0];
([3,0,1],2) -> [3,0,1,2];

=================================
None
([],1) -> [1];
([0,1],2) -> [0,1,2];
([2],1) -> [2,1];
([1,0,0],3) -> [1,0,0,3];
([],2) -> [2];
([2,3,1],2) -> [2,3,1,2];
([2],3) -> [2,3];
([0,3],2) -> [0,3,2];
([],0) -> [0];
([2,3],1) -> [2,3,1];
([1,0,1],1) -> [1,0,1,1];
([2,2,3],3) -> [2,2,3,3];
([3],0) -> [3,0];
([0,0],0) -> [0,0,0];
([1,1,2],1) -> [1,1,2,1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

34.8002 true

([],3) -> [3];
([],2) -> [2];
([3,1],0) -> [3,1,0];
([2,1,0],1) -> [2,1,0,1];
([2,1],2) -> [2,1,2];
([2,2,3],3) -> [2,2,3,3];
([],0) -> [0];
([2],1) -> [2,1];
([1,0],3) -> [1,0,3];
([2,1,3],1) -> [2,1,3,1];
([3],2) -> [3,2];
([0],2) -> [0,2];
([2,3],3) -> [2,3,3];
([0,1],3) -> [0,1,3];
([2,0],0) -> [2,0,0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0557 true

([0,0],1) -> [0,0,1];
([],3) -> [3];
([3],0) -> [3,0];
([1,3],2) -> [1,3,2];
([],0) -> [0];
([3,3,0],1) -> [3,3,0,1];
([1,3],1) -> [1,3,1];
([1,1],3) -> [1,1,3];
([3],1) -> [3,1];
([],1) -> [1];
([0,2,3],3) -> [0,2,3,3];
([0,3,0],1) -> [0,3,0,1];
([0],1) -> [0,1];
([0,1],2) -> [0,1,2];
([2,0],3) -> [2,0,3];

=================================
None
([2,2],0) -> [2,2,0];
([],2) -> [2];
([3,0,0],1) -> [3,0,0,1];
([0,3,3],0) -> [0,3,3,0];
([3,3,2],2) -> [3,3,2,2];
([0,0,0],0) -> [0,0,0,0];
([0],0) -> [0,0];
([],3) -> [3];
([1],3) -> [1,3];
([3,1],1) -> [3,1,1];
([3,3,2],3) -> [3,3,2,3];
([0,2,0],2) -> [0,2,0,2];
([1,0],2) -> [1,0,2];
([3,2],1) -> [3,2,1];
([],1) -> [1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1442 true

([2,2],0) -> [2,2,0];
([3,1],0) -> [3,1,0];
([],0) -> [0];
([0,3],3) -> [0,3,3];
([0,0],3) -> [0,0,3];
([2],0) -> [2,0];
([3,1],1) -> [3,1,1];
([1,1],2) -> [1,1,2];
([],2) -> [2];
([1,1],0) -> [1,1,0];
([],1) -> [1];
([],3) -> [3];
([0,1],1) -> [0,1,1];
([3],3) -> [3,3];
([1],3) -> [1,3];
([2],3) -> [2,3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1112 true

([3],3) -> [3,3];
([1,1],1) -> [1,1,1];
([],2) -> [2];
([2,3,3],1) -> [2,3,3,1];
([3,3,1],0) -> [3,3,1,0];
([1,0],2) -> [1,0,2];
([],3) -> [3];
([2],3) -> [2,3];
([0],0) -> [0,0];
([2,2,2],2) -> [2,2,2,2];
([],0) -> [0];
([3],0) -> [3,0];
([1,1],2) -> [1,1,2];
([2],1) -> [2,1];
([],1) -> [1];
([3,0],2) -> [3,0,2];

=================================
None
([],0) -> [0];
([2,1],1) -> [2,1,1];
([2],0) -> [2,0];
([2,3],1) -> [2,3,1];
([3,1],0) -> [3,1,0];
([2,1],0) -> [2,1,0];
([1,3],0) -> [1,3,0];
([],3) -> [3];
([2,0],1) -> [2,0,1];
([3,3],2) -> [3,3,2];
([3],3) -> [3,3];
([2,2],3) -> [2,2,3];
([3,1,2],3) -> [3,1,2,3];
([3,0],2) -> [3,0,2];
([1,3],1) -> [1,3,1];
([1,1,3],2) -> [1,1,3,2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0962 true

([],2) -> [2];
([0,1,0],1) -> [0,1,0,1];
([0,2,0],1) -> [0,2,0,1];
([1,0,2],0) -> [1,0,2,0];
([3],3) -> [3,3];
([1,3,0],2) -> [1,3,0,2];
([2,0],3) -> [2,0,3];
([],1) -> [1];
([2,1],2) -> [2,1,2];
([1,0],3) -> [1,0,3];
([2],1) -> [2,1];
([3],1) -> [3,1];
([],3) -> [3];
([0],1) -> [0,1];
([2,3,2],2) -> [2,3,2,2];
([0,1,1],3) -> [0,1,1,3];

=================================
None
([3,0],2) -> [3,0,2];
([],0) -> [0];
([2,0,1],3) -> [2,0,1,3];
([3],0) -> [3,0];
([0,1,0],1) -> [0,1,0,1];
([],1) -> [1];
([2,0],0) -> [2,0,0];
([3],1) -> [3,1];
([1,3,2],2) -> [1,3,2,2];
([2,1],2) -> [2,1,2];
([0,0],1) -> [0,0,1];
([],3) -> [3];
([1,3,3],0) -> [1,3,3,0];
([3],3) -> [3,3];
([],2) -> [2];
([2,0],3) -> [2,0,3];

=================================
None
([1,3],1) -> [1,3,1];
([0,0,3],1) -> [0,0,3,1];
([],1) -> [1];
([1,3],3) -> [1,3,3];
([],2) -> [2];
([0],0) -> [0,0];
([0,2,0],0) -> [0,2,0,0];
([],3) -> [3];
([1,0,0],2) -> [1,0,0,2];
([0],2) -> [0,2];
([3,3,0],0) -> [3,3,0,0];
([1],0) -> [1,0];
([3],3) -> [3,3];
([2,2],0) -> [2,2,0];
([2,3,2],0) -> [2,3,2,0];
([2,3,0],1) -> [2,3,0,1];

=================================
None
([],0) -> [0];
([2],0) -> [2,0];
([2,0,3],0) -> [2,0,3,0];
([1,2,2],3) -> [1,2,2,3];
([0,2,3],1) -> [0,2,3,1];
([2],1) -> [2,1];
([2,3,0],1) -> [2,3,0,1];
([2],2) -> [2,2];
([],2) -> [2];
([3],2) -> [3,2];
([0],0) -> [0,0];
([1],1) -> [1,1];
([0,1,1],2) -> [0,1,1,2];
([1,1,2],2) -> [1,1,2,2];
([2,3,0],3) -> [2,3,0,3];
([],1) -> [1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0110 true

([2],0) -> [2,0];
([3],1) -> [3,1];
([2,2],1) -> [2,2,1];
([2,0],0) -> [2,0,0];
([1,2],2) -> [1,2,2];
([3,2,3],1) -> [3,2,3,1];
([],0) -> [0];
([3,0],2) -> [3,0,2];
([3,1],0) -> [3,1,0];
([],2) -> [2];
([2],3) -> [2,3];
([3,2,2],3) -> [3,2,2,3];
([1,3,1],0) -> [1,3,1,0];
([1,2,2],0) -> [1,2,2,0];
([3,3,2],3) -> [3,3,2,3];
([2],1) -> [2,1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1736 true

([],2) -> [2];
([2,1,0],1) -> [2,1,0,1];
([3,1,3],2) -> [3,1,3,2];
([],1) -> [1];
([1],3) -> [1,3];
([1],1) -> [1,1];
([],0) -> [0];
([1],2) -> [1,2];
([1,0,2],2) -> [1,0,2,2];
([0],0) -> [0,0];
([],3) -> [3];
([0,0,2],0) -> [0,0,2,0];
([2,3],3) -> [2,3,3];
([2,1],0) -> [2,1,0];
([3],3) -> [3,3];
([2],3) -> [2,3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.8352 true

([1,1],0) -> [1,1,0];
([],2) -> [2];
([2],1) -> [2,1];
([],3) -> [3];
([],1) -> [1];
([2,1],3) -> [2,1,3];
([3],3) -> [3,3];
([2,0,0],1) -> [2,0,0,1];
([0],0) -> [0,0];
([3,3,0],3) -> [3,3,0,3];
([3,0],1) -> [3,0,1];
([3,2],3) -> [3,2,3];
([1],2) -> [1,2];
([0,2],3) -> [0,2,3];
([3],2) -> [3,2];
([],0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1030 true

([],2) -> [2];
([],1) -> [1];
([3,0],0) -> [3,0,0];
([1,3,3],2) -> [1,3,3,2];
([],0) -> [0];
([1],1) -> [1,1];
([1],3) -> [1,3];
([3,0],1) -> [3,0,1];
([1],2) -> [1,2];
([3,3,0],1) -> [3,3,0,1];
([1,1],3) -> [1,1,3];
([0],1) -> [0,1];
([0,1,3],3) -> [0,1,3,3];
([1,0,3],3) -> [1,0,3,3];
([2,3,3],1) -> [2,3,3,1];
([2,2],2) -> [2,2,2];
([3],3) -> [3,3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0409 true

([3,1,3],3) -> [3,1,3,3];
([2],2) -> [2,2];
([0,0,0],1) -> [0,0,0,1];
([1,2,0],0) -> [1,2,0,0];
([1,1],1) -> [1,1,1];
([0,2,3],3) -> [0,2,3,3];
([],1) -> [1];
([1],3) -> [1,3];
([1,1,3],3) -> [1,1,3,3];
([0,1],2) -> [0,1,2];
([0,2,3],1) -> [0,2,3,1];
([],0) -> [0];
([3,0],1) -> [3,0,1];
([2,0,1],1) -> [2,0,1,1];
([0,2,1],1) -> [0,2,1,1];
([],2) -> [2];
([0,3],1) -> [0,3,1];

=================================
None
([3,1],3) -> [3,1,3];
([1,3],3) -> [1,3,3];
([3],0) -> [3,0];
([2,2],3) -> [2,2,3];
([],0) -> [0];
([],1) -> [1];
([0,3],2) -> [0,3,2];
([1,2],0) -> [1,2,0];
([3,0],2) -> [3,0,2];
([1,1],1) -> [1,1,1];
([3,1],0) -> [3,1,0];
([],2) -> [2];
([3,0,3],2) -> [3,0,3,2];
([1,2],2) -> [1,2,2];
([0,2,0],1) -> [0,2,0,1];
([3,2],2) -> [3,2,2];
([3],1) -> [3,1];

=================================
None
([1],3) -> [1,3];
([2],1) -> [2,1];
([1,2,3],2) -> [1,2,3,2];
([],2) -> [2];
([0],3) -> [0,3];
([3,0,3],2) -> [3,0,3,2];
([2],3) -> [2,3];
([3,0],0) -> [3,0,0];
([1,0,1],3) -> [1,0,1,3];
([1,2],1) -> [1,2,1];
([3],2) -> [3,2];
([1,2,2],1) -> [1,2,2,1];
([],0) -> [0];
([],1) -> [1];
([],3) -> [3];
([1,2,1],0) -> [1,2,1,0];
([3,1,1],3) -> [3,1,1,3];

=================================
STACKOVERFLOW

([3,3],2) -> [3,3,2];
([3],2) -> [3,2];
([0],1) -> [0,1];
([2,2],3) -> [2,2,3];
([0],0) -> [0,0];
([2],2) -> [2,2];
([],0) -> [0];
([],3) -> [3];
([3,3],3) -> [3,3,3];
([1,2],2) -> [1,2,2];
([1],1) -> [1,1];
([2,2,2],2) -> [2,2,2,2];
([2,2],2) -> [2,2,2];
([3,0,3],0) -> [3,0,3,0];
([3],3) -> [3,3];
([1,0,0],2) -> [1,0,0,2];
([1,2,2],3) -> [1,2,2,3];

=================================
None
([2,1,1],3) -> [2,1,1,3];
([],3) -> [3];
([],2) -> [2];
([2],1) -> [2,1];
([1,3],2) -> [1,3,2];
([1,0],1) -> [1,0,1];
([],0) -> [0];
([3,2,0],3) -> [3,2,0,3];
([0],0) -> [0,0];
([2,1,1],2) -> [2,1,1,2];
([3,3,1],2) -> [3,3,1,2];
([2,3],0) -> [2,3,0];
([1],0) -> [1,0];
([0,3,0],3) -> [0,3,0,3];
([0,2],1) -> [0,2,1];
([3,3,2],1) -> [3,3,2,1];
([2,3,1],3) -> [2,3,1,3];

=================================
None
([0,0,1],1) -> [0,0,1,1];
([],3) -> [3];
([0,3],1) -> [0,3,1];
([2,2,1],1) -> [2,2,1,1];
([0],1) -> [0,1];
([1,0],2) -> [1,0,2];
([3,3],2) -> [3,3,2];
([1],2) -> [1,2];
([3],2) -> [3,2];
([2,1],2) -> [2,1,2];
([],2) -> [2];
([2,0,2],1) -> [2,0,2,1];
([1],1) -> [1,1];
([],0) -> [0];
([3],0) -> [3,0];
([1,1],1) -> [1,1,1];
([0,2,3],0) -> [0,2,3,0];

=================================
None
([3],3) -> [3,3];
([3,2,0],3) -> [3,2,0,3];
([2,0],3) -> [2,0,3];
([0],1) -> [0,1];
([1],3) -> [1,3];
([0,3,0],3) -> [0,3,0,3];
([0],2) -> [0,2];
([3,2,1],0) -> [3,2,1,0];
([0,1,3],0) -> [0,1,3,0];
([0,1,0],0) -> [0,1,0,0];
([],3) -> [3];
([0,2],1) -> [0,2,1];
([],1) -> [1];
([2],1) -> [2,1];
([1,1,1],3) -> [1,1,1,3];
([1,3,0],2) -> [1,3,0,2];
([1],2) -> [1,2];

=================================
None
([0,2,2],1) -> [0,2,2,1];
([0,2,3],1) -> [0,2,3,1];
([],1) -> [1];
([3,1],1) -> [3,1,1];
([],0) -> [0];
([],3) -> [3];
([3,2],3) -> [3,2,3];
([0,3],2) -> [0,3,2];
([1,1,2],1) -> [1,1,2,1];
([2],3) -> [2,3];
([0],0) -> [0,0];
([0],1) -> [0,1];
([],2) -> [2];
([0,3],1) -> [0,3,1];
([1,0],0) -> [1,0,0];
([2,0],0) -> [2,0,0];
([1],3) -> [1,3];

=================================
None
([2,0],1) -> [2,0,1];
([3,1,2],3) -> [3,1,2,3];
([3],1) -> [3,1];
([0],1) -> [0,1];
([],1) -> [1];
([3],3) -> [3,3];
([2,3],2) -> [2,3,2];
([0,3],0) -> [0,3,0];
([2],3) -> [2,3];
([],3) -> [3];
([0,2,0],3) -> [0,2,0,3];
([0,3,0],1) -> [0,3,0,1];
([0,1],1) -> [0,1,1];
([1,1],3) -> [1,1,3];
([],2) -> [2];
([3,3,2],3) -> [3,3,2,3];
([1],3) -> [1,3];

=================================
None
([1],0) -> [1,0];
([],1) -> [1];
([3,0,0],0) -> [3,0,0,0];
([1,2,0],1) -> [1,2,0,1];
([2,0],1) -> [2,0,1];
([3,0,3],1) -> [3,0,3,1];
([],2) -> [2];
([2,3],1) -> [2,3,1];
([0],3) -> [0,3];
([2],0) -> [2,0];
([0],1) -> [0,1];
([],0) -> [0];
([2,1,0],1) -> [2,1,0,1];
([0,2],2) -> [0,2,2];
([1],1) -> [1,1];
([3,0,1],0) -> [3,0,1,0];
([],3) -> [3];
([3,2],1) -> [3,2,1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0248 true

([3,2],1) -> [3,2,1];
([0],2) -> [0,2];
([2,2],0) -> [2,2,0];
([2],2) -> [2,2];
([0],3) -> [0,3];
([1],2) -> [1,2];
([2,3,3],3) -> [2,3,3,3];
([2,2,1],3) -> [2,2,1,3];
([0,1],1) -> [0,1,1];
([2,1,1],3) -> [2,1,1,3];
([2,3],2) -> [2,3,2];
([],2) -> [2];
([],1) -> [1];
([2,1,2],1) -> [2,1,2,1];
([1,3,2],3) -> [1,3,2,3];
([1,3,2],0) -> [1,3,2,0];
([3],3) -> [3,3];
([3,3,1],3) -> [3,3,1,3];

=================================
None
([1,2,1],1) -> [1,2,1,1];
([3,2],2) -> [3,2,2];
([3,3,1],0) -> [3,3,1,0];
([],1) -> [1];
([0],1) -> [0,1];
([3],0) -> [3,0];
([1,0,2],2) -> [1,0,2,2];
([],3) -> [3];
([1],0) -> [1,0];
([1],3) -> [1,3];
([0],0) -> [0,0];
([],2) -> [2];
([2,1,1],1) -> [2,1,1,1];
([2,3,0],1) -> [2,3,0,1];
([0,3,1],0) -> [0,3,1,0];
([1,1,1],2) -> [1,1,1,2];
([3],2) -> [3,2];
([1,2,1],3) -> [1,2,1,3];

=================================
None
([2],0) -> [2,0];
([],2) -> [2];
([0,0,1],1) -> [0,0,1,1];
([],1) -> [1];
([],3) -> [3];
([1,3,3],2) -> [1,3,3,2];
([3],2) -> [3,2];
([3,0],3) -> [3,0,3];
([1,1,3],0) -> [1,1,3,0];
([],0) -> [0];
([1],2) -> [1,2];
([2],1) -> [2,1];
([0],3) -> [0,3];
([0,0],3) -> [0,0,3];
([1],0) -> [1,0];
([0,2,0],2) -> [0,2,0,2];
([0,2],0) -> [0,2,0];
([0,2,0],3) -> [0,2,0,3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0303 true

([],3) -> [3];
([],2) -> [2];
([0],1) -> [0,1];
([2,0,3],2) -> [2,0,3,2];
([1,1],0) -> [1,1,0];
([3,3,0],2) -> [3,3,0,2];
([1,3,0],3) -> [1,3,0,3];
([0,3],1) -> [0,3,1];
([1,2,2],3) -> [1,2,2,3];
([1,2],1) -> [1,2,1];
([1,2],3) -> [1,2,3];
([3,1,2],2) -> [3,1,2,2];
([1],2) -> [1,2];
([],0) -> [0];
([3,0,0],3) -> [3,0,0,3];
([1,0,3],2) -> [1,0,3,2];
([2,3],0) -> [2,3,0];
([2],2) -> [2,2];

=================================
None
([1,1],0) -> [1,1,0];
([3],3) -> [3,3];
([0],3) -> [0,3];
([2,0,1],1) -> [2,0,1,1];
([2,1,0],1) -> [2,1,0,1];
([1,0,0],0) -> [1,0,0,0];
([1],3) -> [1,3];
([],0) -> [0];
([1,3,2],2) -> [1,3,2,2];
([0],2) -> [0,2];
([],3) -> [3];
([0],0) -> [0,0];
([],1) -> [1];
([3,2],1) -> [3,2,1];
([0,1,3],1) -> [0,1,3,1];
([3,1,1],3) -> [3,1,1,3];
([2],3) -> [2,3];
([3,1,0],0) -> [3,1,0,0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1073 true

([1,2,0],2) -> [1,2,0,2];
([0],1) -> [0,1];
([1],3) -> [1,3];
([1,0,0],3) -> [1,0,0,3];
([3,2],0) -> [3,2,0];
([],1) -> [1];
([0,3,3],2) -> [0,3,3,2];
([1,2],1) -> [1,2,1];
([0,1],1) -> [0,1,1];
([3,1],2) -> [3,1,2];
([1],0) -> [1,0];
([],0) -> [0];
([2,0],2) -> [2,0,2];
([1,1,1],3) -> [1,1,1,3];
([],3) -> [3];
([0],3) -> [0,3];
([2],1) -> [2,1];
([0,1,0],3) -> [0,1,0,3];

=================================
None
([],1) -> [1];
([],0) -> [0];
([0],1) -> [0,1];
([],3) -> [3];
([3],2) -> [3,2];
([0],0) -> [0,0];
([3,2],0) -> [3,2,0];
([0,3],1) -> [0,3,1];
([1,0],3) -> [1,0,3];
([],2) -> [2];
([0],2) -> [0,2];
([0,0,3],3) -> [0,0,3,3];
([1,1,1],1) -> [1,1,1,1];
([2],1) -> [2,1];
([1,1,3],0) -> [1,1,3,0];
([0,3,0],3) -> [0,3,0,3];
([1,2,0],1) -> [1,2,0,1];
([0,2],0) -> [0,2,0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1635 true

([2,2,0],3) -> [2,2,0,3];
([3,0],0) -> [3,0,0];
([],0) -> [0];
([3],1) -> [3,1];
([1],3) -> [1,3];
([1,3],3) -> [1,3,3];
([0,2],1) -> [0,2,1];
([0,2,2],1) -> [0,2,2,1];
([0],0) -> [0,0];
([],1) -> [1];
([0,1,0],0) -> [0,1,0,0];
([3,0],1) -> [3,0,1];
([],3) -> [3];
([2,2,1],2) -> [2,2,1,2];
([2],0) -> [2,0];
([0,1,3],1) -> [0,1,3,1];
([2],1) -> [2,1];
([2,3],2) -> [2,3,2];

=================================
None
([2,1],2) -> [2,1,2];
([0],3) -> [0,3];
([3,2,0],3) -> [3,2,0,3];
([0,0],0) -> [0,0,0];
([],2) -> [2];
([0,0,2],1) -> [0,0,2,1];
([3],3) -> [3,3];
([0,0],2) -> [0,0,2];
([3],0) -> [3,0];
([2],3) -> [2,3];
([0,3,3],2) -> [0,3,3,2];
([],1) -> [1];
([1],2) -> [1,2];
([0,0,3],1) -> [0,0,3,1];
([1,1],3) -> [1,1,3];
([2,0],1) -> [2,0,1];
([2,2,0],2) -> [2,2,0,2];
([2,0],2) -> [2,0,2];

=================================
None
([],2) -> [2];
([1],1) -> [1,1];
([0,3],2) -> [0,3,2];
([0],0) -> [0,0];
([0,1],2) -> [0,1,2];
([2,1,2],0) -> [2,1,2,0];
([1,2,2],3) -> [1,2,2,3];
([1],2) -> [1,2];
([2,2],0) -> [2,2,0];
([1,2],2) -> [1,2,2];
([0],2) -> [0,2];
([2,0],1) -> [2,0,1];
([3,1],0) -> [3,1,0];
([0],1) -> [0,1];
([2,0,0],2) -> [2,0,0,2];
([2],3) -> [2,3];
([],0) -> [0];
([3],0) -> [3,0];
([0,2],2) -> [0,2,2];

=================================
None
([],1) -> [1];
([0],2) -> [0,2];
([2,1,3],1) -> [2,1,3,1];
([1,2,2],2) -> [1,2,2,2];
([0,1],0) -> [0,1,0];
([2],2) -> [2,2];
([],3) -> [3];
([3,3,2],3) -> [3,3,2,3];
([],2) -> [2];
([2,2],2) -> [2,2,2];
([0,0],2) -> [0,0,2];
([0,0,1],0) -> [0,0,1,0];
([1,0,0],3) -> [1,0,0,3];
([2,0,0],0) -> [2,0,0,0];
([0],0) -> [0,0];
([0,3,3],0) -> [0,3,3,0];
([],0) -> [0];
([0,0],1) -> [0,0,1];
([1,3,2],1) -> [1,3,2,1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1357 true

([1],2) -> [1,2];
([1],0) -> [1,0];
([0,2],0) -> [0,2,0];
([0,3,0],1) -> [0,3,0,1];
([2,3],3) -> [2,3,3];
([1,3],2) -> [1,3,2];
([0,1,0],2) -> [0,1,0,2];
([3],2) -> [3,2];
([1,0],1) -> [1,0,1];
([0],2) -> [0,2];
([2,2,2],0) -> [2,2,2,0];
([1],1) -> [1,1];
([2,0,0],3) -> [2,0,0,3];
([0,1],1) -> [0,1,1];
([2],1) -> [2,1];
([],2) -> [2];
([2,0],3) -> [2,0,3];
([],1) -> [1];
([2,1],0) -> [2,1,0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.2675 true

([],0) -> [0];
([0,1],1) -> [0,1,1];
([0],2) -> [0,2];
([1,1,0],0) -> [1,1,0,0];
([1,0,1],1) -> [1,0,1,1];
([2,3],1) -> [2,3,1];
([3,0],0) -> [3,0,0];
([],1) -> [1];
([3,1,2],1) -> [3,1,2,1];
([1],0) -> [1,0];
([0,2,1],2) -> [0,2,1,2];
([2,1,3],1) -> [2,1,3,1];
([2],3) -> [2,3];
([1,3],3) -> [1,3,3];
([3,3],1) -> [3,3,1];
([],2) -> [2];
([1,3],1) -> [1,3,1];
([3],1) -> [3,1];
([0,3,0],2) -> [0,3,0,2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.5608 true

([2,1,3],3) -> [2,1,3,3];
([2,1,1],3) -> [2,1,1,3];
([1,2,1],1) -> [1,2,1,1];
([3,1],0) -> [3,1,0];
([],3) -> [3];
([2],2) -> [2,2];
([0,3,1],1) -> [0,3,1,1];
([0,1,3],3) -> [0,1,3,3];
([1,3],2) -> [1,3,2];
([3,1,2],2) -> [3,1,2,2];
([1,2],3) -> [1,2,3];
([],2) -> [2];
([1,0],2) -> [1,0,2];
([1,2],1) -> [1,2,1];
([],0) -> [0];
([1,3],3) -> [1,3,3];
([1,1,2],1) -> [1,1,2,1];
([2,1,2],3) -> [2,1,2,3];
([1],2) -> [1,2];

=================================
None
([],1) -> [1];
([0],1) -> [0,1];
([0,1,0],0) -> [0,1,0,0];
([3],3) -> [3,3];
([],3) -> [3];
([1,2,3],3) -> [1,2,3,3];
([2],0) -> [2,0];
([1],2) -> [1,2];
([0,0],1) -> [0,0,1];
([1,0,1],1) -> [1,0,1,1];
([1,2,3],1) -> [1,2,3,1];
([3,3],2) -> [3,3,2];
([1,2],1) -> [1,2,1];
([1],1) -> [1,1];
([],2) -> [2];
([1,2],3) -> [1,2,3];
([3,0,2],3) -> [3,0,2,3];
([3,0],1) -> [3,0,1];
([2,3,2],3) -> [2,3,2,3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

1.7415 true

([],3) -> [3];
([3],1) -> [3,1];
([1],0) -> [1,0];
([0],3) -> [0,3];
([3,1],1) -> [3,1,1];
([0,1,0],2) -> [0,1,0,2];
([0,2,0],2) -> [0,2,0,2];
([3,3,0],0) -> [3,3,0,0];
([3,3,1],3) -> [3,3,1,3];
([],1) -> [1];
([1,2],0) -> [1,2,0];
([0,2],3) -> [0,2,3];
([2,1,3],3) -> [2,1,3,3];
([2],1) -> [2,1];
([1,0],2) -> [1,0,2];
([],2) -> [2];
([3,2],2) -> [3,2,2];
([2],0) -> [2,0];
([3],2) -> [3,2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

6.1414 true

([1,2,2],0) -> [1,2,2,0];
([2,0],2) -> [2,0,2];
([0,2,0],1) -> [0,2,0,1];
([3],3) -> [3,3];
([1,2,3],3) -> [1,2,3,3];
([0,2],1) -> [0,2,1];
([],3) -> [3];
([1,2,1],1) -> [1,2,1,1];
([],2) -> [2];
([1],3) -> [1,3];
([3,3,3],3) -> [3,3,3,3];
([1,0],1) -> [1,0,1];
([1,0,2],1) -> [1,0,2,1];
([1,3,2],2) -> [1,3,2,2];
([0,1,0],3) -> [0,1,0,3];
([3],0) -> [3,0];
([],0) -> [0];
([],1) -> [1];
([3,1],3) -> [3,1,3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

1.3113 true

([1,1],3) -> [1,1,3];
([3],3) -> [3,3];
([0,3],1) -> [0,3,1];
([],1) -> [1];
([1,0],2) -> [1,0,2];
([1,0],3) -> [1,0,3];
([],0) -> [0];
([0,3,3],1) -> [0,3,3,1];
([],3) -> [3];
([1,2,0],1) -> [1,2,0,1];
([1,3,3],3) -> [1,3,3,3];
([0,3,1],1) -> [0,3,1,1];
([0],0) -> [0,0];
([],2) -> [2];
([0,0],0) -> [0,0,0];
([3],1) -> [3,1];
([1,1,1],1) -> [1,1,1,1];
([2,1],3) -> [2,1,3];
([2,2],1) -> [2,2,1];

=================================
None
([2,0],1) -> [2,0,1];
([0,1],3) -> [0,1,3];
([1,2],3) -> [1,2,3];
([3,1],1) -> [3,1,1];
([2],1) -> [2,1];
([],1) -> [1];
([2,2],3) -> [2,2,3];
([2],3) -> [2,3];
([1],3) -> [1,3];
([],2) -> [2];
([2],0) -> [2,0];
([1,1,1],0) -> [1,1,1,0];
([0],2) -> [0,2];
([0,3,2],3) -> [0,3,2,3];
([],3) -> [3];
([2,0,1],3) -> [2,0,1,3];
([],0) -> [0];
([2,1,0],2) -> [2,1,0,2];
([3,2,0],1) -> [3,2,0,1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

3.1586 true

([3,2,2],2) -> [3,2,2,2];
([1],2) -> [1,2];
([2],0) -> [2,0];
([0,1,1],2) -> [0,1,1,2];
([2],2) -> [2,2];
([],1) -> [1];
([3],1) -> [3,1];
([3,0],3) -> [3,0,3];
([1,2],2) -> [1,2,2];
([2,2],2) -> [2,2,2];
([],3) -> [3];
([0],2) -> [0,2];
([2,3],0) -> [2,3,0];
([3,1,3],0) -> [3,1,3,0];
([0,1,0],1) -> [0,1,0,1];
([2],3) -> [2,3];
([0,2,3],0) -> [0,2,3,0];
([],0) -> [0];
([1,2],1) -> [1,2,1];
([1,3],0) -> [1,3,0];

=================================
None
([3,0],3) -> [3,0,3];
([0,1,1],3) -> [0,1,1,3];
([],3) -> [3];
([],0) -> [0];
([0,3,2],1) -> [0,3,2,1];
([3],1) -> [3,1];
([2,0,0],3) -> [2,0,0,3];
([1],2) -> [1,2];
([1,1,2],1) -> [1,1,2,1];
([2,2],0) -> [2,2,0];
([2],2) -> [2,2];
([1,0,1],3) -> [1,0,1,3];
([0,0,0],3) -> [0,0,0,3];
([1,2,2],3) -> [1,2,2,3];
([3],2) -> [3,2];
([3,0],2) -> [3,0,2];
([0,3],2) -> [0,3,2];
([],1) -> [1];
([0,1],0) -> [0,1,0];
([1,3,1],3) -> [1,3,1,3];

=================================
None
([0,2,0],3) -> [0,2,0,3];
([],3) -> [3];
([],1) -> [1];
([1,2,2],0) -> [1,2,2,0];
([1],1) -> [1,1];
([],0) -> [0];
([3,2,1],0) -> [3,2,1,0];
([0],0) -> [0,0];
([2,0],3) -> [2,0,3];
([3,0,3],0) -> [3,0,3,0];
([0,0],2) -> [0,0,2];
([3,3],3) -> [3,3,3];
([0,1,0],1) -> [0,1,0,1];
([1,0],0) -> [1,0,0];
([3],0) -> [3,0];
([3,0],0) -> [3,0,0];
([0,0],0) -> [0,0,0];
([3,2],1) -> [3,2,1];
([0],3) -> [0,3];
([1],0) -> [1,0];

=================================
None
([0],0) -> [0,0];
([0],1) -> [0,1];
([0,3,3],0) -> [0,3,3,0];
([1,3],3) -> [1,3,3];
([],2) -> [2];
([3],0) -> [3,0];
([0,2],3) -> [0,2,3];
([],1) -> [1];
([2,2,1],3) -> [2,2,1,3];
([],0) -> [0];
([2,1],3) -> [2,1,3];
([3,0,3],1) -> [3,0,3,1];
([3,3],0) -> [3,3,0];
([3,3,1],0) -> [3,3,1,0];
([1,0,2],0) -> [1,0,2,0];
([2,2,2],1) -> [2,2,2,1];
([1],3) -> [1,3];
([2,3],3) -> [2,3,3];
([1],1) -> [1,1];
([2],3) -> [2,3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.3356 true

([1],3) -> [1,3];
([2],1) -> [2,1];
([2,3,3],3) -> [2,3,3,3];
([3,3],1) -> [3,3,1];
([2],3) -> [2,3];
([],0) -> [0];
([3],1) -> [3,1];
([],2) -> [2];
([2,2,3],1) -> [2,2,3,1];
([1,0],2) -> [1,0,2];
([1],2) -> [1,2];
([1,1,2],1) -> [1,1,2,1];
([1],1) -> [1,1];
([3,0],0) -> [3,0,0];
([0],0) -> [0,0];
([2,2,0],2) -> [2,2,0,2];
([3,0,0],0) -> [3,0,0,0];
([3],0) -> [3,0];
([2,1],0) -> [2,1,0];
([],1) -> [1];

=================================
None
([2,3,2],0) -> [2,3,2,0];
([3,3],0) -> [3,3,0];
([],0) -> [0];
([3],1) -> [3,1];
([0,3],3) -> [0,3,3];
([],3) -> [3];
([3,0],0) -> [3,0,0];
([3],2) -> [3,2];
([0,0],3) -> [0,0,3];
([3,2],3) -> [3,2,3];
([1,2],1) -> [1,2,1];
([2,1,3],1) -> [2,1,3,1];
([1,1],3) -> [1,1,3];
([2],0) -> [2,0];
([0],1) -> [0,1];
([0,1,1],1) -> [0,1,1,1];
([1,2],0) -> [1,2,0];
([],2) -> [2];
([1,3],2) -> [1,3,2];
([1],3) -> [1,3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

1.6231 true

([],0) -> [0];
([1,1],2) -> [1,1,2];
([1],1) -> [1,1];
([0,1],3) -> [0,1,3];
([3,3],1) -> [3,3,1];
([],1) -> [1];
([1],2) -> [1,2];
([1],3) -> [1,3];
([0,1],2) -> [0,1,2];
([0,1],0) -> [0,1,0];
([],3) -> [3];
([0,3,2],3) -> [0,3,2,3];
([1,3,1],3) -> [1,3,1,3];
([],2) -> [2];
([3,1,3],2) -> [3,1,3,2];
([3,1],2) -> [3,1,2];
([2,3,2],0) -> [2,3,2,0];
([3,0],3) -> [3,0,3];
([1,3,2],3) -> [1,3,2,3];
([0],2) -> [0,2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

4.7557 true

([],0) -> [0];
([0],3) -> [0,3];
([1,2,0],0) -> [1,2,0,0];
([3],2) -> [3,2];
([3,3],2) -> [3,3,2];
([0,2,0],3) -> [0,2,0,3];
([2,1,1],1) -> [2,1,1,1];
([3,0,0],3) -> [3,0,0,3];
([3,2],1) -> [3,2,1];
([3],1) -> [3,1];
([3,2],0) -> [3,2,0];
([1,0],1) -> [1,0,1];
([2,0,3],3) -> [2,0,3,3];
([1,3,3],3) -> [1,3,3,3];
([1],2) -> [1,2];
([],2) -> [2];
([3,2,1],0) -> [3,2,1,0];
([1,3],1) -> [1,3,1];
([],3) -> [3];
([2],0) -> [2,0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

1.2628 true

([0,1,1],3) -> [0,1,1,3];
([2,3],2) -> [2,3,2];
([0,1,2],2) -> [0,1,2,2];
([],3) -> [3];
([2],3) -> [2,3];
([1,2,0],3) -> [1,2,0,3];
([],2) -> [2];
([2,2],2) -> [2,2,2];
([3,1],1) -> [3,1,1];
([],0) -> [0];
([3],0) -> [3,0];
([0,3],2) -> [0,3,2];
([2],0) -> [2,0];
([3],3) -> [3,3];
([1,0,0],1) -> [1,0,0,1];
([2,2,0],1) -> [2,2,0,1];
([3,2,0],0) -> [3,2,0,0];
([],1) -> [1];
([2,1],2) -> [2,1,2];
([0,0],3) -> [0,0,3];

=================================
None
([3],3) -> [3,3];
([],0) -> [0];
([],3) -> [3];
([0,1,3],2) -> [0,1,3,2];
([2],0) -> [2,0];
([],1) -> [1];
([0,3,3],1) -> [0,3,3,1];
([1,2,1],3) -> [1,2,1,3];
([2,0,1],2) -> [2,0,1,2];
([0],1) -> [0,1];
([0],2) -> [0,2];
([1],3) -> [1,3];
([1],2) -> [1,2];
([],2) -> [2];
([2,1,1],0) -> [2,1,1,0];
([2,3,1],1) -> [2,3,1,1];
([1,1,1],2) -> [1,1,1,2];
([1,0],1) -> [1,0,1];
([0,0],3) -> [0,0,3];
([0],0) -> [0,0];

=================================
None
