list_last
[1,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_last = \xs -> Some 0 in list_last) : NatList -> NatOpt)
0.0018050000001 false false

[1,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_last = \xs -> Some 3 in list_last) : NatList -> NatOpt)
0.00177800000006 false false

[1,2,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_last = \xs -> Some 3 in list_last) : NatList -> NatOpt)
0.00213699999995 false false

[3,3,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_last = \xs -> Some 0 in list_last) : NatList -> NatOpt)
0.00171900000009 false false

[1,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_last = \xs -> Some 0 in list_last) : NatList -> NatOpt)
0.00181100000009 false false

[2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_last = \xs -> Some 2 in list_last) : NatList -> NatOpt)
0.00177800000006 false false

[0,1,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_last = \xs -> Some 0 in list_last) : NatList -> NatOpt)
0.0017170000001 false false

[2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_last = \xs -> Some 2 in list_last) : NatList -> NatOpt)
0.00174500000003 false false

[2,3,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_last = \xs -> Some 0 in list_last) : NatList -> NatOpt)
0.00179800000001 false false

[] -> None;

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_last = \xs -> None in list_last) : NatList -> NatOpt)
0.00167400000009 false false

[] -> None;
[0,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      Some 1 in list_last) : NatList -> NatOpt)
0.00261300000011 false false

[2] -> Some (2);
[0,0] -> Some (0);

=================================
NOSOL

[2,3,1] -> Some (1);
[3] -> Some (3);

=================================
NOSOL

[] -> None;
[2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      Some (#2.1 y1) in list_last) : NatList -> NatOpt)
0.00271500000008 false false

[] -> None;
[3,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      Some 2 in list_last) : NatList -> NatOpt)
0.0026969999999 false false

[] -> None;
[0,2,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      Some 1 in list_last) : NatList -> NatOpt)
0.00259600000004 false false

[3] -> Some (3);
[2,1,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_last = \xs -> Some 3 in list_last) : NatList -> NatOpt)
0.00182700000005 false false

[3,0,2] -> Some (2);
[3,3] -> Some (3);

=================================
NOSOL

[] -> None;
[0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      Some 0 in list_last) : NatList -> NatOpt)
0.00261500000011 false false

[1,2] -> Some (2);
[1,0,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_last = \xs -> Some 2 in list_last) : NatList -> NatOpt)
0.00182100000006 false false

[0,0] -> Some (0);
[2,0,0] -> Some (0);
[0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_last = \xs -> Some 0 in list_last) : NatList -> NatOpt)
0.00178800000003 false false

[1] -> Some (1);
[3,2] -> Some (2);
[0,3] -> Some (3);

=================================
NOSOL

[3,1,2] -> Some (2);
[3,3] -> Some (3);
[] -> None;

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case list_last (#2.2 y1) of
        Some y2 -> 
          Some y2

        None y2 -> 
          case #2.2 y1 of
            Nil y3 -> 
              None

            Cons y3 -> 
              Some (#2.1 y3) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case list_last (#2.2 y1) of
        Some y2 -> 
          Some y2

        None y2 -> 
          case #2.2 y1 of
            Nil y3 -> 
              None

            Cons y3 -> 
              Some (#2.1 y3) in list_last) : NatList -> NatOpt)
0.052502 false false

[2] -> Some (2);
[2,0] -> Some (0);
[1,3] -> Some (3);

=================================
NOSOL

[2,3] -> Some (3);
[2,2,2] -> Some (2);
[3,2,3] -> Some (3);

=================================
NOSOL

[2,1] -> Some (1);
[3] -> Some (3);
[0,2,2] -> Some (2);

=================================
NOSOL

[0] -> Some (0);
[] -> None;
[2,0,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      Some
        (case #2.2 y1 of
          Nil y2 -> 
            0

          Cons y2 -> 
            S (#2.1 y1)) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00763899999993 false true

[3,3] -> Some (3);
[] -> None;
[1,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      Some 3 in list_last) : NatList -> NatOpt)
0.00268699999992 false false

[2,0] -> Some (0);
[1] -> Some (1);
[1,3,3] -> Some (3);

=================================
NOSOL

[2,0] -> Some (0);
[3] -> Some (3);
[] -> None;

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      Some
        (case #2.2 y1 of
          Nil y2 -> 
            #2.1 y1

          Cons y2 -> 
            0) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00649500000009 false true

[0] -> Some (0);
[1,3,1] -> Some (1);
[0,3,1] -> Some (1);
[] -> None;

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      Some
        (case #2.2 y1 of
          Nil y2 -> 
            0

          Cons y2 -> 
            1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00710000000004 false true

[] -> None;
[1] -> Some (1);
[3,1,2] -> Some (2);
[0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      Some
        (case #2.2 y1 of
          Nil y2 -> 
            #2.1 y1

          Cons y2 -> 
            S (#2.1 y2)) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00708600000007 false true

[3,0,3] -> Some (3);
[] -> None;
[3,0,2] -> Some (2);
[2,2] -> Some (2);

=================================
NOSOL

[1,0] -> Some (0);
[2,2,1] -> Some (1);
[] -> None;
[1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00620000000004 true true

[1,3,3] -> Some (3);
[] -> None;
[2,0,2] -> Some (2);
[0,2,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.1 y1 of
        Z y2 -> 
          Some 1

        S y2 -> 
          case y2 of
            Z y3 -> 
              list_last (#2.2 y1)

            S y3 -> 
              Some (#2.1 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.1 y1 of
        Z y2 -> 
          Some 1

        S y2 -> 
          case y2 of
            Z y3 -> 
              list_last (#2.2 y1)

            S y3 -> 
              Some (#2.1 y1) in list_last) : NatList -> NatOpt)
0.019051 false false

[1,2] -> Some (2);
[] -> None;
[3] -> Some (3);
[0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      Some
        (case #2.2 y1 of
          Nil y2 -> 
            #2.1 y1

          Cons y2 -> 
            #2.1 y2) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00736699999993 false true

[1,1] -> Some (1);
[0,2] -> Some (2);
[0,0,0] -> Some (0);
[2] -> Some (2);

=================================
NOSOL

[1] -> Some (1);
[] -> None;
[3,3,3] -> Some (3);
[0,1,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00852099999997 true true

[] -> None;
[1] -> Some (1);
[2,0,3] -> Some (3);
[1,2,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00694399999998 true true

[2,3,3] -> Some (3);
[] -> None;
[3,0,2] -> Some (2);
[2,3,2] -> Some (2);

=================================
NOSOL

[0] -> Some (0);
[3,1,3] -> Some (3);
[0,2,1] -> Some (1);
[] -> None;
[2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.0072889999999 true true

[2,2] -> Some (2);
[1] -> Some (1);
[0,3,1] -> Some (1);
[2,3] -> Some (3);
[0,2] -> Some (2);

=================================
NOSOL

[] -> None;
[3,2,0] -> Some (0);
[3] -> Some (3);
[3,1] -> Some (1);
[0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00694700000008 true true

[] -> None;
[3,0,3] -> Some (3);
[1,0] -> Some (0);
[0,3] -> Some (3);
[3,1,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.1 y1 of
        Z y2 -> 
          Some
            (case #2.2 y1 of
              Nil y3 -> 
                0

              Cons y3 -> 
                #2.1 y3)

        S y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.1 y1 of
        Z y2 -> 
          Some
            (case #2.2 y1 of
              Nil y3 -> 
                0

              Cons y3 -> 
                #2.1 y3)

        S y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.0214450000001 false false

[] -> None;
[0,1] -> Some (1);
[1,3] -> Some (3);
[2,3] -> Some (3);
[3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      Some
        (case #2.2 y1 of
          Nil y2 -> 
            #2.1 y1

          Cons y2 -> 
            #2.1 y2) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00820999999996 false true

[1,2] -> Some (2);
[3,1,3] -> Some (3);
[] -> None;
[2,0,2] -> Some (2);
[0,2,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.1 y1 of
        Z y2 -> 
          Some 3

        S y2 -> 
          case y2 of
            Z y3 -> 
              Some (S (#2.1 y1))

            S y3 -> 
              Some (#2.1 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.1 y1 of
        Z y2 -> 
          Some 3

        S y2 -> 
          case y2 of
            Z y3 -> 
              list_last (#2.2 y1)

            S y3 -> 
              Some (#2.1 y1) in list_last) : NatList -> NatOpt)
0.0265429999999 false false

[2] -> Some (2);
[1,2,3] -> Some (3);
[1] -> Some (1);
[] -> None;
[0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      Some
        (case #2.2 y1 of
          Nil y2 -> 
            #2.1 y1

          Cons y2 -> 
            S (#2.1 y2)) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00752499999999 false true

[1,1] -> Some (1);
[2] -> Some (2);
[0,2,0] -> Some (0);
[3] -> Some (3);
[] -> None;

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      Some (#2.1 y1) in list_last) : NatList -> NatOpt)
0.00274599999989 false false

[0,1] -> Some (1);
[1,1,0] -> Some (0);
[1,3,2] -> Some (2);
[] -> None;
[3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00704599999995 true true

[1] -> Some (1);
[2,0,3] -> Some (3);
[] -> None;
[3,3,1] -> Some (1);
[3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00668700000006 true true

[] -> None;
[0,3,2] -> Some (2);
[1,3] -> Some (3);
[0] -> Some (0);
[2,3,1] -> Some (1);
[3,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.0074360000001 true true

[] -> None;
[3,2,0] -> Some (0);
[2,1] -> Some (1);
[3] -> Some (3);
[0] -> Some (0);
[0,2,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00709000000006 true true

[] -> None;
[0,1,3] -> Some (3);
[2,2] -> Some (2);
[1] -> Some (1);
[2,0] -> Some (0);
[1,0,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00722399999995 true true

[] -> None;
[3,1,0] -> Some (0);
[2] -> Some (2);
[3,3,2] -> Some (2);
[0,0,3] -> Some (3);
[3,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00731500000006 true true

[] -> None;
[2,0] -> Some (0);
[3,1,2] -> Some (2);
[1,2] -> Some (2);
[0] -> Some (0);
[3,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00699299999997 true true

[0] -> Some (0);
[3] -> Some (3);
[] -> None;
[2,3,3] -> Some (3);
[1,3] -> Some (3);
[2,1,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00783999999999 true true

[] -> None;
[0,3,0] -> Some (0);
[2,3] -> Some (3);
[0,0] -> Some (0);
[1,3,2] -> Some (2);
[1,0,3] -> Some (3);

=================================
NOSOL

[2,2,2] -> Some (2);
[0] -> Some (0);
[3] -> Some (3);
[3,3] -> Some (3);
[1,1,2] -> Some (2);
[2,2,0] -> Some (0);

=================================
NOSOL

[1,0,2] -> Some (2);
[3] -> Some (3);
[] -> None;
[1,3,2] -> Some (2);
[0,0] -> Some (0);
[2,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00738200000001 true true

[0,3] -> Some (3);
[2,2,2] -> Some (2);
[3,3,0] -> Some (0);
[] -> None;
[2,0] -> Some (0);
[3,0] -> Some (0);

=================================
NOSOL

[0,1,2] -> Some (2);
[2] -> Some (2);
[3] -> Some (3);
[] -> None;
[3,1,3] -> Some (3);
[1] -> Some (1);
[1,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00818000000004 true true

[0] -> Some (0);
[] -> None;
[3,2] -> Some (2);
[3,0] -> Some (0);
[1] -> Some (1);
[2] -> Some (2);
[0,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      Some
        (case #2.2 y1 of
          Nil y2 -> 
            #2.1 y1

          Cons y2 -> 
            #2.1 y2) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00727200000006 false true

[1,0] -> Some (0);
[2] -> Some (2);
[3,1,0] -> Some (0);
[2,3] -> Some (3);
[1] -> Some (1);
[] -> None;
[0,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00728400000003 true true

[] -> None;
[2,3] -> Some (3);
[0] -> Some (0);
[2] -> Some (2);
[1,0,1] -> Some (1);
[1,3,0] -> Some (0);
[1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00713700000006 true true

[3] -> Some (3);
[] -> None;
[1] -> Some (1);
[3,3] -> Some (3);
[1,2,1] -> Some (1);
[2,2] -> Some (2);
[3,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00654400000008 true true

[2,2] -> Some (2);
[1,3] -> Some (3);
[1,0,3] -> Some (3);
[2,1,1] -> Some (1);
[1,1,1] -> Some (1);
[0,0] -> Some (0);
[] -> None;

=================================
NOSOL

[] -> None;
[0] -> Some (0);
[2,1] -> Some (1);
[0,1,2] -> Some (2);
[1,3] -> Some (3);
[2,3] -> Some (3);
[0,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00733700000001 true true

[0] -> Some (0);
[0,1] -> Some (1);
[3,3] -> Some (3);
[] -> None;
[3,2,3] -> Some (3);
[2,0] -> Some (0);
[1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00706700000001 true true

[] -> None;
[1,0] -> Some (0);
[2,0] -> Some (0);
[1,2] -> Some (2);
[2,2] -> Some (2);
[1,3] -> Some (3);
[0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      Some
        (case #2.2 y1 of
          Nil y2 -> 
            0

          Cons y2 -> 
            #2.1 y2) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00728400000003 false true

[3,3] -> Some (3);
[2,3,2] -> Some (2);
[] -> None;
[1,1] -> Some (1);
[2,0,2] -> Some (2);
[2,2] -> Some (2);
[0,2,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      Some
        (case #2.1 y1 of
          Z y2 -> 
            3

          S y2 -> 
            #2.1 y1) in list_last) : NatList -> NatOpt)
0.00735299999997 false false

[] -> None;
[3,0,2] -> Some (2);
[3] -> Some (3);
[2] -> Some (2);
[0,3] -> Some (3);
[3,1,3] -> Some (3);
[1,0] -> Some (0);
[3,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00731199999996 true true

[1,0] -> Some (0);
[0,2,1] -> Some (1);
[0,1,2] -> Some (2);
[3,3,3] -> Some (3);
[1,1,3] -> Some (3);
[] -> None;
[2,2] -> Some (2);
[1,3] -> Some (3);

=================================
NOSOL

[] -> None;
[3] -> Some (3);
[0,1] -> Some (1);
[0] -> Some (0);
[3,0,0] -> Some (0);
[2,1] -> Some (1);
[2,2,3] -> Some (3);
[3,1,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00746099999992 true true

[3,2] -> Some (2);
[1,1] -> Some (1);
[3] -> Some (3);
[] -> None;
[1,3] -> Some (3);
[1,0] -> Some (0);
[1] -> Some (1);
[0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      Some
        (case #2.2 y1 of
          Nil y2 -> 
            #2.1 y1

          Cons y2 -> 
            #2.1 y2) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00736400000005 false true

[0,0] -> Some (0);
[] -> None;
[3] -> Some (3);
[3,1] -> Some (1);
[2,3] -> Some (3);
[0] -> Some (0);
[1] -> Some (1);
[3,3,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      Some
        (case #2.2 y1 of
          Nil y2 -> 
            #2.1 y1

          Cons y2 -> 
            #2.1 y2) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00749999999994 false true

[1,1] -> Some (1);
[2,1] -> Some (1);
[3] -> Some (3);
[3,1,2] -> Some (2);
[0] -> Some (0);
[1,2] -> Some (2);
[2] -> Some (2);
[2,0,2] -> Some (2);

=================================
NOSOL

[1,0,2] -> Some (2);
[1] -> Some (1);
[0,2] -> Some (2);
[] -> None;
[3] -> Some (3);
[3,3] -> Some (3);
[1,1] -> Some (1);
[0,0,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00840199999993 true true

[2,3] -> Some (3);
[] -> None;
[0] -> Some (0);
[1,2] -> Some (2);
[0,0] -> Some (0);
[3,2,3] -> Some (3);
[1] -> Some (1);
[2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00749399999995 true true

[3,0] -> Some (0);
[1,0,0] -> Some (0);
[3] -> Some (3);
[1,1] -> Some (1);
[1,2] -> Some (2);
[0,3,1] -> Some (1);
[2] -> Some (2);
[] -> None;

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00800200000003 true true

[] -> None;
[3] -> Some (3);
[0] -> Some (0);
[1] -> Some (1);
[0,3,3] -> Some (3);
[0,0] -> Some (0);
[3,1] -> Some (1);
[0,1,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00745899999993 true true

[] -> None;
[1] -> Some (1);
[0] -> Some (0);
[2,2,0] -> Some (0);
[3] -> Some (3);
[3,1] -> Some (1);
[2,1,1] -> Some (1);
[0,0,0] -> Some (0);
[2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00741599999992 true true

[3,0] -> Some (0);
[3] -> Some (3);
[0,2,1] -> Some (1);
[3,2,1] -> Some (1);
[0] -> Some (0);
[] -> None;
[0,0,1] -> Some (1);
[1,1] -> Some (1);
[3,1,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00775199999998 true true

[2,3] -> Some (3);
[] -> None;
[3,2,3] -> Some (3);
[1,3,0] -> Some (0);
[1,2,0] -> Some (0);
[2,2] -> Some (2);
[1,3] -> Some (3);
[0,2] -> Some (2);
[2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00764400000003 true true

[] -> None;
[2] -> Some (2);
[2,0] -> Some (0);
[0,2] -> Some (2);
[2,3] -> Some (3);
[3,3] -> Some (3);
[3] -> Some (3);
[2,1] -> Some (1);
[1,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      Some
        (case #2.2 y1 of
          Nil y2 -> 
            #2.1 y1

          Cons y2 -> 
            #2.1 y2) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00803100000007 false true

[0,2] -> Some (2);
[] -> None;
[2] -> Some (2);
[2,2,3] -> Some (3);
[1,0] -> Some (0);
[0,1] -> Some (1);
[3,2,1] -> Some (1);
[1,1,3] -> Some (3);
[0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00795100000005 true true

[2,0,3] -> Some (3);
[] -> None;
[1,3,2] -> Some (2);
[2,0,2] -> Some (2);
[3] -> Some (3);
[2,0] -> Some (0);
[2,2,0] -> Some (0);
[2,3] -> Some (3);
[3,0,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00670100000002 true true

[3,2] -> Some (2);
[1,0,3] -> Some (3);
[2,1] -> Some (1);
[3,1,1] -> Some (1);
[] -> None;
[0,1,1] -> Some (1);
[2,0,2] -> Some (2);
[0,3] -> Some (3);
[3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00838500000009 true true

[] -> None;
[0,2] -> Some (2);
[1,3,2] -> Some (2);
[1] -> Some (1);
[3,3] -> Some (3);
[2,3] -> Some (3);
[1,1,2] -> Some (2);
[1,3] -> Some (3);
[2,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00865199999998 true true

[3] -> Some (3);
[2] -> Some (2);
[0,0] -> Some (0);
[] -> None;
[1,0] -> Some (0);
[0] -> Some (0);
[1,2,0] -> Some (0);
[1] -> Some (1);
[1,2,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00740799999994 true true

[3,0,2] -> Some (2);
[0,2] -> Some (2);
[3,0] -> Some (0);
[2,0] -> Some (0);
[] -> None;
[0,0,1] -> Some (1);
[3,1] -> Some (1);
[2,0,2] -> Some (2);
[1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00751199999991 true true

[2,2] -> Some (2);
[2,0] -> Some (0);
[1] -> Some (1);
[] -> None;
[3,0,0] -> Some (0);
[0] -> Some (0);
[2] -> Some (2);
[3,3,2] -> Some (2);
[3] -> Some (3);
[3,2,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00757700000008 true true

[2] -> Some (2);
[] -> None;
[3,1] -> Some (1);
[0] -> Some (0);
[3] -> Some (3);
[3,2] -> Some (2);
[2,2] -> Some (2);
[1] -> Some (1);
[1,2,3] -> Some (3);
[1,0,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00744400000008 true true

[] -> None;
[2,1,3] -> Some (3);
[2,1] -> Some (1);
[1,3,1] -> Some (1);
[3,0] -> Some (0);
[2] -> Some (2);
[0,3,1] -> Some (1);
[3,2,0] -> Some (0);
[1,3,0] -> Some (0);
[2,1,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.0079639999999 true true

[2,3] -> Some (3);
[] -> None;
[1,1] -> Some (1);
[3] -> Some (3);
[3,0,0] -> Some (0);
[0,2] -> Some (2);
[1] -> Some (1);
[2,3,1] -> Some (1);
[0] -> Some (0);
[0,2,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00754899999993 true true

[0] -> Some (0);
[3,0] -> Some (0);
[] -> None;
[2] -> Some (2);
[1,0,1] -> Some (1);
[3,3,2] -> Some (2);
[3] -> Some (3);
[0,2,2] -> Some (2);
[1,0] -> Some (0);
[3,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00755200000003 true true

[] -> None;
[2,2,0] -> Some (0);
[0,3,2] -> Some (2);
[1,2,0] -> Some (0);
[1,1,0] -> Some (0);
[3,3,0] -> Some (0);
[1] -> Some (1);
[2,0] -> Some (0);
[3,0,3] -> Some (3);
[3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.007969 true true

[2,3] -> Some (3);
[3,0,2] -> Some (2);
[] -> None;
[1,0,3] -> Some (3);
[3,1,0] -> Some (0);
[2,1] -> Some (1);
[3,1,2] -> Some (2);
[3,3] -> Some (3);
[1] -> Some (1);
[3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00684999999999 true true

[] -> None;
[2,3,2] -> Some (2);
[1,3,3] -> Some (3);
[3,0,2] -> Some (2);
[1] -> Some (1);
[3,2,0] -> Some (0);
[2,2,2] -> Some (2);
[3,3,1] -> Some (1);
[0,2] -> Some (2);
[3,0,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00785399999995 true true

[3,2,1] -> Some (1);
[1,1] -> Some (1);
[2,1] -> Some (1);
[3] -> Some (3);
[] -> None;
[0] -> Some (0);
[0,0] -> Some (0);
[3,0,2] -> Some (2);
[3,2,2] -> Some (2);
[2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.0078289999999 true true

[2,3] -> Some (3);
[1] -> Some (1);
[2,1,0] -> Some (0);
[] -> None;
[0,1] -> Some (1);
[1,1] -> Some (1);
[3,0,1] -> Some (1);
[2,2] -> Some (2);
[1,2,2] -> Some (2);
[1,1,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00787100000002 true true

[0,3,2] -> Some (2);
[2,2] -> Some (2);
[3,3,3] -> Some (3);
[] -> None;
[2] -> Some (2);
[0] -> Some (0);
[1,3,1] -> Some (1);
[0,3,3] -> Some (3);
[1,2] -> Some (2);
[0,0,1] -> Some (1);
[1,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00799400000005 true true

[0,3] -> Some (3);
[1] -> Some (1);
[1,2] -> Some (2);
[2,0] -> Some (0);
[0,2,3] -> Some (3);
[2,2,2] -> Some (2);
[3] -> Some (3);
[2,0,1] -> Some (1);
[3,3,0] -> Some (0);
[0,1] -> Some (1);
[3,0,1] -> Some (1);

=================================
NOSOL

[2,1] -> Some (1);
[1,1] -> Some (1);
[0] -> Some (0);
[1,0,2] -> Some (2);
[] -> None;
[2] -> Some (2);
[1,1,1] -> Some (1);
[0,3,1] -> Some (1);
[1,0,1] -> Some (1);
[2,2,0] -> Some (0);
[0,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.0073440000001 true true

[0,1,2] -> Some (2);
[0] -> Some (0);
[2,1,1] -> Some (1);
[3,3] -> Some (3);
[1] -> Some (1);
[0,3] -> Some (3);
[1,1,3] -> Some (3);
[2,2,0] -> Some (0);
[] -> None;
[3,0] -> Some (0);
[2,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00813500000004 true true

[] -> None;
[1,0,2] -> Some (2);
[3,2] -> Some (2);
[2,1] -> Some (1);
[0,0,2] -> Some (2);
[1] -> Some (1);
[1,3] -> Some (3);
[2,0,3] -> Some (3);
[3,0] -> Some (0);
[3,3] -> Some (3);
[2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.0079740000001 true true

[2] -> Some (2);
[2,0,0] -> Some (0);
[2,1,0] -> Some (0);
[] -> None;
[0] -> Some (0);
[1,1] -> Some (1);
[1] -> Some (1);
[3] -> Some (3);
[2,2] -> Some (2);
[2,3,2] -> Some (2);
[0,0,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00746000000004 true true

[2] -> Some (2);
[0,0] -> Some (0);
[0,0,0] -> Some (0);
[] -> None;
[1,0] -> Some (0);
[1] -> Some (1);
[1,1] -> Some (1);
[0] -> Some (0);
[1,1,0] -> Some (0);
[2,3,3] -> Some (3);
[3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00742500000001 true true

[0] -> Some (0);
[] -> None;
[1,3,3] -> Some (3);
[1,1] -> Some (1);
[3] -> Some (3);
[2,1] -> Some (1);
[0,3,0] -> Some (0);
[0,0] -> Some (0);
[3,3] -> Some (3);
[2,3] -> Some (3);
[3,2,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00817299999994 true true

[0,2] -> Some (2);
[3] -> Some (3);
[] -> None;
[3,3] -> Some (3);
[0,0,0] -> Some (0);
[3,0] -> Some (0);
[2,3,0] -> Some (0);
[1] -> Some (1);
[1,1] -> Some (1);
[2,0] -> Some (0);
[1,3,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00761899999998 true true

[1] -> Some (1);
[2] -> Some (2);
[1,0] -> Some (0);
[3] -> Some (3);
[0] -> Some (0);
[] -> None;
[3,3] -> Some (3);
[3,3,2] -> Some (2);
[1,0,2] -> Some (2);
[2,1,2] -> Some (2);
[1,2,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.007791 true true

[1,2] -> Some (2);
[3,2,2] -> Some (2);
[0,0,3] -> Some (3);
[1,1] -> Some (1);
[3] -> Some (3);
[] -> None;
[2,0] -> Some (0);
[2,1,2] -> Some (2);
[1,3] -> Some (3);
[0] -> Some (0);
[2,1] -> Some (1);
[3,2,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00868999999989 true true

[] -> None;
[0] -> Some (0);
[2,1] -> Some (1);
[0,1,3] -> Some (3);
[3,3,0] -> Some (0);
[2,1,2] -> Some (2);
[1,2] -> Some (2);
[3,2] -> Some (2);
[2] -> Some (2);
[2,3] -> Some (3);
[0,3] -> Some (3);
[0,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00785599999995 true true

[3] -> Some (3);
[2,0] -> Some (0);
[1,0,3] -> Some (3);
[] -> None;
[2,1] -> Some (1);
[0,0] -> Some (0);
[1,1,3] -> Some (3);
[3,0] -> Some (0);
[2,2,2] -> Some (2);
[2] -> Some (2);
[1,3,1] -> Some (1);
[3,0,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00768999999991 true true

[3,2,3] -> Some (3);
[0,3] -> Some (3);
[2,3] -> Some (3);
[] -> None;
[3] -> Some (3);
[2] -> Some (2);
[1] -> Some (1);
[3,1,0] -> Some (0);
[3,1] -> Some (1);
[2,2] -> Some (2);
[2,1,3] -> Some (3);
[1,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00790499999994 true true

[3,1] -> Some (1);
[] -> None;
[3] -> Some (3);
[2,3] -> Some (3);
[0,3,2] -> Some (2);
[1] -> Some (1);
[0] -> Some (0);
[0,1] -> Some (1);
[3,2] -> Some (2);
[2,1,0] -> Some (0);
[2] -> Some (2);
[0,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00776500000006 true true

[] -> None;
[3,2] -> Some (2);
[1,0] -> Some (0);
[3,1] -> Some (1);
[0,0] -> Some (0);
[1] -> Some (1);
[2,2,0] -> Some (0);
[3,0,2] -> Some (2);
[1,1] -> Some (1);
[2] -> Some (2);
[3,1,2] -> Some (2);
[2,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00776199999996 true true

[2,2,2] -> Some (2);
[3,2,2] -> Some (2);
[] -> None;
[1,3] -> Some (3);
[3,2,0] -> Some (0);
[1] -> Some (1);
[2] -> Some (2);
[0,2,1] -> Some (1);
[3] -> Some (3);
[0,3,1] -> Some (1);
[3,3] -> Some (3);
[1,0,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00778100000002 true true

[0,0,0] -> Some (0);
[3,2] -> Some (2);
[2,1,0] -> Some (0);
[2,0] -> Some (0);
[2,1] -> Some (1);
[0,0,3] -> Some (3);
[3] -> Some (3);
[0,2] -> Some (2);
[0,1,0] -> Some (0);
[3,1] -> Some (1);
[2,3,3] -> Some (3);
[] -> None;

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00767900000005 true true

[2] -> Some (2);
[2,1,1] -> Some (1);
[1,1,3] -> Some (3);
[2,2] -> Some (2);
[3] -> Some (3);
[] -> None;
[1,0,1] -> Some (1);
[0] -> Some (0);
[1,3] -> Some (3);
[1,0] -> Some (0);
[2,2,0] -> Some (0);
[0,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00769700000001 true true

[1,0] -> Some (0);
[3,3] -> Some (3);
[1,2,1] -> Some (1);
[] -> None;
[1] -> Some (1);
[2,0] -> Some (0);
[2] -> Some (2);
[3,2] -> Some (2);
[2,1] -> Some (1);
[1,0,0] -> Some (0);
[2,3,1] -> Some (1);
[1,0,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00701000000004 true true

[] -> None;
[0] -> Some (0);
[3,0] -> Some (0);
[2] -> Some (2);
[1,1,3] -> Some (3);
[3] -> Some (3);
[1] -> Some (1);
[3,0,0] -> Some (0);
[0,1,3] -> Some (3);
[1,0,1] -> Some (1);
[0,2] -> Some (2);
[0,0] -> Some (0);
[3,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00800600000002 true true

[3] -> Some (3);
[2] -> Some (2);
[2,1] -> Some (1);
[] -> None;
[0,3,3] -> Some (3);
[3,3,3] -> Some (3);
[1] -> Some (1);
[1,1,3] -> Some (3);
[3,2,3] -> Some (3);
[3,0,2] -> Some (2);
[2,3] -> Some (3);
[0,0] -> Some (0);
[1,3,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00793399999998 true true

[] -> None;
[0] -> Some (0);
[1,0] -> Some (0);
[0,0] -> Some (0);
[0,2] -> Some (2);
[3] -> Some (3);
[3,2,0] -> Some (0);
[0,2,1] -> Some (1);
[0,2,2] -> Some (2);
[1,3,3] -> Some (3);
[0,0,3] -> Some (3);
[0,1] -> Some (1);
[1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00800600000002 true true

[1] -> Some (1);
[] -> None;
[0] -> Some (0);
[2,0,1] -> Some (1);
[0,3] -> Some (3);
[3] -> Some (3);
[0,3,0] -> Some (0);
[2,0] -> Some (0);
[2] -> Some (2);
[3,3,3] -> Some (3);
[0,0] -> Some (0);
[0,1,1] -> Some (1);
[3,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.012827 true true

[3,0,2] -> Some (2);
[2] -> Some (2);
[] -> None;
[2,1,1] -> Some (1);
[3,3,0] -> Some (0);
[1,3] -> Some (3);
[1,2,0] -> Some (0);
[3,3] -> Some (3);
[3,3,3] -> Some (3);
[3,1] -> Some (1);
[0,1] -> Some (1);
[0] -> Some (0);
[3,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00754200000006 true true

[] -> None;
[2,0,1] -> Some (1);
[2] -> Some (2);
[2,3,3] -> Some (3);
[3,3] -> Some (3);
[3] -> Some (3);
[0,2,0] -> Some (0);
[2,0] -> Some (0);
[0,0] -> Some (0);
[0] -> Some (0);
[0,3] -> Some (3);
[3,0,2] -> Some (2);
[0,1,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00755200000003 true true

[2,0,1] -> Some (1);
[2,2] -> Some (2);
[] -> None;
[2] -> Some (2);
[1,1,3] -> Some (3);
[1] -> Some (1);
[2,1,1] -> Some (1);
[0,3,1] -> Some (1);
[3,3,3] -> Some (3);
[3,0,2] -> Some (2);
[1,0] -> Some (0);
[0] -> Some (0);
[0,0,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00781099999995 true true

[0,1] -> Some (1);
[1,0] -> Some (0);
[] -> None;
[3,2,3] -> Some (3);
[0] -> Some (0);
[2] -> Some (2);
[1,2] -> Some (2);
[2,2] -> Some (2);
[3,2,1] -> Some (1);
[3,1,0] -> Some (0);
[0,3] -> Some (3);
[3] -> Some (3);
[3,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00773499999991 true true

[1,1] -> Some (1);
[2,3] -> Some (3);
[] -> None;
[3,1,3] -> Some (3);
[0,3] -> Some (3);
[3,1,2] -> Some (2);
[3,2,2] -> Some (2);
[0,0] -> Some (0);
[3,0] -> Some (0);
[3] -> Some (3);
[1] -> Some (1);
[0,2,2] -> Some (2);
[1,3,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00739999999996 true true

[1] -> Some (1);
[3] -> Some (3);
[] -> None;
[3,3,2] -> Some (2);
[0,1] -> Some (1);
[2,0,3] -> Some (3);
[2] -> Some (2);
[3,1] -> Some (1);
[0,0,2] -> Some (2);
[3,2] -> Some (2);
[2,0] -> Some (0);
[2,3] -> Some (3);
[0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00736099999995 true true

[1,2] -> Some (2);
[0,0] -> Some (0);
[] -> None;
[3,1,3] -> Some (3);
[2] -> Some (2);
[0] -> Some (0);
[0,1] -> Some (1);
[2,1,3] -> Some (3);
[3,3,1] -> Some (1);
[0,1,0] -> Some (0);
[2,0] -> Some (0);
[1] -> Some (1);
[3,1] -> Some (1);
[2,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00745099999995 true true

[0] -> Some (0);
[2,2] -> Some (2);
[3,1,0] -> Some (0);
[2] -> Some (2);
[0,3] -> Some (3);
[1] -> Some (1);
[3] -> Some (3);
[2,3] -> Some (3);
[1,1,1] -> Some (1);
[2,3,3] -> Some (3);
[] -> None;
[0,3,0] -> Some (0);
[1,0] -> Some (0);
[0,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00949199999991 true true

[] -> None;
[2] -> Some (2);
[2,2,3] -> Some (3);
[2,1,3] -> Some (3);
[2,2] -> Some (2);
[1,3,0] -> Some (0);
[0,1] -> Some (1);
[0,0,1] -> Some (1);
[0,3] -> Some (3);
[3,1] -> Some (1);
[2,1,0] -> Some (0);
[2,0,1] -> Some (1);
[3] -> Some (3);
[1,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00774500000011 true true

[3] -> Some (3);
[] -> None;
[0] -> Some (0);
[3,2] -> Some (2);
[1,3] -> Some (3);
[3,3] -> Some (3);
[0,3] -> Some (3);
[2] -> Some (2);
[1,1,2] -> Some (2);
[3,0] -> Some (0);
[1,1,0] -> Some (0);
[1,0] -> Some (0);
[0,1,0] -> Some (0);
[1,2,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.007519 true true

[3,1,2] -> Some (2);
[] -> None;
[0,3] -> Some (3);
[2,1] -> Some (1);
[3] -> Some (3);
[1] -> Some (1);
[0] -> Some (0);
[3,1,0] -> Some (0);
[1,0,3] -> Some (3);
[0,1] -> Some (1);
[2,1,1] -> Some (1);
[2,3] -> Some (3);
[2] -> Some (2);
[2,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00756000000001 true true

[] -> None;
[0,1,1] -> Some (1);
[3,2,1] -> Some (1);
[0] -> Some (0);
[2] -> Some (2);
[3] -> Some (3);
[1,2,1] -> Some (1);
[0,0] -> Some (0);
[3,3] -> Some (3);
[0,0,3] -> Some (3);
[0,0,0] -> Some (0);
[1] -> Some (1);
[2,2] -> Some (2);
[1,1,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00778500000001 true true

[3,3,0] -> Some (0);
[0,0] -> Some (0);
[2,1] -> Some (1);
[] -> None;
[1,0] -> Some (0);
[2] -> Some (2);
[3] -> Some (3);
[1,1,1] -> Some (1);
[2,3,0] -> Some (0);
[2,2] -> Some (2);
[3,2,2] -> Some (2);
[2,0] -> Some (0);
[2,0,3] -> Some (3);
[0,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00799600000005 true true

[] -> None;
[1,2] -> Some (2);
[0,0,2] -> Some (2);
[0,1,0] -> Some (0);
[0,2] -> Some (2);
[1,0,2] -> Some (2);
[0,0] -> Some (0);
[0,1] -> Some (1);
[1,0,3] -> Some (3);
[2] -> Some (2);
[2,2,1] -> Some (1);
[3] -> Some (3);
[1,1] -> Some (1);
[1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00816800000007 true true

[] -> None;
[1,1,1] -> Some (1);
[2,0,3] -> Some (3);
[3,0,1] -> Some (1);
[1] -> Some (1);
[3,1,3] -> Some (3);
[2,1] -> Some (1);
[3] -> Some (3);
[1,0,0] -> Some (0);
[0] -> Some (0);
[2,0] -> Some (0);
[0,1] -> Some (1);
[3,1] -> Some (1);
[3,3,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00780299999997 true true

[0,0] -> Some (0);
[3,2,0] -> Some (0);
[] -> None;
[0,3,3] -> Some (3);
[3] -> Some (3);
[2,0,2] -> Some (2);
[3,0] -> Some (0);
[0] -> Some (0);
[2] -> Some (2);
[2,2,2] -> Some (2);
[2,0,1] -> Some (1);
[0,2,2] -> Some (2);
[3,2] -> Some (2);
[2,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.0077510000001 true true

[2,2,0] -> Some (0);
[2] -> Some (2);
[2,3] -> Some (3);
[2,2] -> Some (2);
[] -> None;
[1] -> Some (1);
[1,1,1] -> Some (1);
[1,1] -> Some (1);
[2,1,0] -> Some (0);
[3,2,3] -> Some (3);
[0] -> Some (0);
[3] -> Some (3);
[0,3] -> Some (3);
[0,2] -> Some (2);
[0,1,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00794500000006 true true

[] -> None;
[0] -> Some (0);
[3,2,0] -> Some (0);
[1,1] -> Some (1);
[3,3] -> Some (3);
[0,0,3] -> Some (3);
[3,1] -> Some (1);
[0,2,3] -> Some (3);
[0,1,3] -> Some (3);
[0,0] -> Some (0);
[3,3,3] -> Some (3);
[1] -> Some (1);
[3,3,1] -> Some (1);
[1,0,3] -> Some (3);
[1,3,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00781000000006 true true

[1] -> Some (1);
[2] -> Some (2);
[0,0] -> Some (0);
[] -> None;
[3,2,3] -> Some (3);
[0,0,1] -> Some (1);
[1,1] -> Some (1);
[0,3] -> Some (3);
[2,1,2] -> Some (2);
[2,2] -> Some (2);
[1,3] -> Some (3);
[0,3,2] -> Some (2);
[1,3,0] -> Some (0);
[2,0] -> Some (0);
[2,2,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.0078840000001 true true

[] -> None;
[2,3,2] -> Some (2);
[2] -> Some (2);
[1] -> Some (1);
[1,1] -> Some (1);
[2,2] -> Some (2);
[0,0] -> Some (0);
[3] -> Some (3);
[1,1,2] -> Some (2);
[3,1,2] -> Some (2);
[0,1] -> Some (1);
[2,2,1] -> Some (1);
[3,1,0] -> Some (0);
[2,1] -> Some (1);
[0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00803399999995 true true

[3,0,1] -> Some (1);
[3,0,0] -> Some (0);
[0,1,1] -> Some (1);
[] -> None;
[0,3,0] -> Some (0);
[0,2] -> Some (2);
[1] -> Some (1);
[1,0] -> Some (0);
[0,0,2] -> Some (2);
[2] -> Some (2);
[2,3,1] -> Some (1);
[0] -> Some (0);
[3,0] -> Some (0);
[3,2,2] -> Some (2);
[3,1,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.015543 true true

[] -> None;
[1,2] -> Some (2);
[1] -> Some (1);
[2,2] -> Some (2);
[2,0,3] -> Some (3);
[0,3] -> Some (3);
[1,2,1] -> Some (1);
[2] -> Some (2);
[0,0] -> Some (0);
[0,1] -> Some (1);
[3] -> Some (3);
[1,0,0] -> Some (0);
[2,3] -> Some (3);
[2,1,2] -> Some (2);
[2,3,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.0154669999999 true true

[0,2] -> Some (2);
[0] -> Some (0);
[0,2,3] -> Some (3);
[] -> None;
[1,3,3] -> Some (3);
[0,0,0] -> Some (0);
[2,3,3] -> Some (3);
[3,2,2] -> Some (2);
[0,3] -> Some (3);
[1,0] -> Some (0);
[3] -> Some (3);
[2] -> Some (2);
[1] -> Some (1);
[1,1] -> Some (1);
[2,3,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00789699999996 true true

[2] -> Some (2);
[1,3,0] -> Some (0);
[] -> None;
[0,1,0] -> Some (0);
[3,2] -> Some (2);
[0] -> Some (0);
[2,3,2] -> Some (2);
[0,3] -> Some (3);
[3] -> Some (3);
[1] -> Some (1);
[1,0,3] -> Some (3);
[1,3,1] -> Some (1);
[0,2,2] -> Some (2);
[3,3] -> Some (3);
[1,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00788499999999 true true

[] -> None;
[2] -> Some (2);
[2,1] -> Some (1);
[1,2] -> Some (2);
[0,2,0] -> Some (0);
[3,0] -> Some (0);
[0,3] -> Some (3);
[0,1] -> Some (1);
[0,1,0] -> Some (0);
[1] -> Some (1);
[0] -> Some (0);
[0,2] -> Some (2);
[1,0] -> Some (0);
[1,3,0] -> Some (0);
[3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00769500000001 true true

[] -> None;
[1,1,1] -> Some (1);
[2,3,1] -> Some (1);
[2,0,0] -> Some (0);
[1,0,0] -> Some (0);
[2,1] -> Some (1);
[3,1,0] -> Some (0);
[3,0,3] -> Some (3);
[2] -> Some (2);
[1] -> Some (1);
[0,0,0] -> Some (0);
[1,0,3] -> Some (3);
[0] -> Some (0);
[3,2] -> Some (2);
[1,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00798400000008 true true

[2,0,3] -> Some (3);
[0] -> Some (0);
[2,0,1] -> Some (1);
[3,0,0] -> Some (0);
[2,0] -> Some (0);
[3,0] -> Some (0);
[3] -> Some (3);
[] -> None;
[1,3,3] -> Some (3);
[3,1] -> Some (1);
[3,3] -> Some (3);
[2,2] -> Some (2);
[1,3] -> Some (3);
[1,0,0] -> Some (0);
[0,2] -> Some (2);
[2,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00828799999999 true true

[] -> None;
[1] -> Some (1);
[2,0] -> Some (0);
[1,0] -> Some (0);
[2] -> Some (2);
[3,3,0] -> Some (0);
[0,2] -> Some (2);
[0] -> Some (0);
[1,1,2] -> Some (2);
[3] -> Some (3);
[1,2] -> Some (2);
[0,1] -> Some (1);
[0,3] -> Some (3);
[3,3] -> Some (3);
[3,2,0] -> Some (0);
[1,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00817000000006 true true

[0,0] -> Some (0);
[1,0,0] -> Some (0);
[] -> None;
[2,3] -> Some (3);
[0,1,3] -> Some (3);
[2] -> Some (2);
[2,2] -> Some (2);
[2,3,3] -> Some (3);
[0,1,0] -> Some (0);
[0,3] -> Some (3);
[1,3,3] -> Some (3);
[1] -> Some (1);
[3] -> Some (3);
[1,1] -> Some (1);
[3,3,0] -> Some (0);
[0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00814100000002 true true

[0] -> Some (0);
[0,2] -> Some (2);
[1,3,1] -> Some (1);
[2,0,1] -> Some (1);
[1,3] -> Some (3);
[2,0,0] -> Some (0);
[3,2,2] -> Some (2);
[1] -> Some (1);
[2] -> Some (2);
[3] -> Some (3);
[3,2] -> Some (2);
[] -> None;
[1,0,2] -> Some (2);
[1,0] -> Some (0);
[1,3,3] -> Some (3);
[3,1,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00830399999995 true true

[3,0,3] -> Some (3);
[] -> None;
[1,1] -> Some (1);
[0,2] -> Some (2);
[1,2,2] -> Some (2);
[2,3] -> Some (3);
[0,3] -> Some (3);
[0,1] -> Some (1);
[3] -> Some (3);
[2] -> Some (2);
[1,3,0] -> Some (0);
[0,0,2] -> Some (2);
[3,0,1] -> Some (1);
[0] -> Some (0);
[0,0] -> Some (0);
[3,2,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00830999999994 true true

[3,1] -> Some (1);
[3,0,0] -> Some (0);
[0] -> Some (0);
[1,1] -> Some (1);
[] -> None;
[2,3,2] -> Some (2);
[2] -> Some (2);
[2,3] -> Some (3);
[2,0,3] -> Some (3);
[3] -> Some (3);
[0,3,1] -> Some (1);
[3,1,3] -> Some (3);
[1,1,1] -> Some (1);
[3,2] -> Some (2);
[3,3] -> Some (3);
[1,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.0085039999999 true true

[1] -> Some (1);
[] -> None;
[2,2] -> Some (2);
[1,3] -> Some (3);
[3] -> Some (3);
[3,3] -> Some (3);
[3,1] -> Some (1);
[3,0] -> Some (0);
[3,3,2] -> Some (2);
[0] -> Some (0);
[1,2,3] -> Some (3);
[3,2,3] -> Some (3);
[1,3,2] -> Some (2);
[1,1,3] -> Some (3);
[0,2,2] -> Some (2);
[3,0,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00822300000004 true true

[2] -> Some (2);
[0] -> Some (0);
[3] -> Some (3);
[] -> None;
[0,1] -> Some (1);
[1] -> Some (1);
[0,2,0] -> Some (0);
[0,3,1] -> Some (1);
[0,2] -> Some (2);
[3,1] -> Some (1);
[1,2] -> Some (2);
[2,0] -> Some (0);
[1,0,2] -> Some (2);
[0,0,0] -> Some (0);
[1,3] -> Some (3);
[2,1,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00777700000003 true true

[0] -> Some (0);
[] -> None;
[1,2,3] -> Some (3);
[2] -> Some (2);
[1] -> Some (1);
[3,2,1] -> Some (1);
[0,3] -> Some (3);
[1,1] -> Some (1);
[3,0] -> Some (0);
[2,2,0] -> Some (0);
[3] -> Some (3);
[0,1] -> Some (1);
[3,2,3] -> Some (3);
[0,3,2] -> Some (2);
[0,0] -> Some (0);
[1,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00792700000011 true true

[3,1,2] -> Some (2);
[2,2,2] -> Some (2);
[3,3] -> Some (3);
[1,0,3] -> Some (3);
[] -> None;
[0] -> Some (0);
[1,2] -> Some (2);
[3,2,2] -> Some (2);
[1,3] -> Some (3);
[0,3,3] -> Some (3);
[2,0] -> Some (0);
[3,2,1] -> Some (1);
[2] -> Some (2);
[0,0,1] -> Some (1);
[1,3,3] -> Some (3);
[1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00817000000006 true true

[3,2] -> Some (2);
[3,0,2] -> Some (2);
[0] -> Some (0);
[2] -> Some (2);
[0,0] -> Some (0);
[0,1] -> Some (1);
[2,1] -> Some (1);
[0,2,3] -> Some (3);
[1] -> Some (1);
[1,1,1] -> Some (1);
[3,0,0] -> Some (0);
[] -> None;
[3] -> Some (3);
[1,1,0] -> Some (0);
[0,3,3] -> Some (3);
[1,2] -> Some (2);
[3,2,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.008466 true true

[1] -> Some (1);
[0,0,3] -> Some (3);
[0,3,2] -> Some (2);
[3,0] -> Some (0);
[3,2,0] -> Some (0);
[] -> None;
[0,0,0] -> Some (0);
[0,3,1] -> Some (1);
[1,1,2] -> Some (2);
[3,3,0] -> Some (0);
[3,3] -> Some (3);
[0,0] -> Some (0);
[3] -> Some (3);
[1,1,3] -> Some (3);
[2,2,2] -> Some (2);
[3,0,2] -> Some (2);
[2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00839300000007 true true

[2] -> Some (2);
[0,2] -> Some (2);
[] -> None;
[0,0,0] -> Some (0);
[1,0,2] -> Some (2);
[2,1] -> Some (1);
[1,2,1] -> Some (1);
[3,2] -> Some (2);
[2,0,1] -> Some (1);
[3,3,0] -> Some (0);
[2,2] -> Some (2);
[2,2,1] -> Some (1);
[2,0] -> Some (0);
[1] -> Some (1);
[3,0,1] -> Some (1);
[3,3] -> Some (3);
[3,0,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00803700000006 true true

[] -> None;
[2,0] -> Some (0);
[2] -> Some (2);
[3,2,2] -> Some (2);
[1,3] -> Some (3);
[0,2,1] -> Some (1);
[0,2] -> Some (2);
[0,1,0] -> Some (0);
[3] -> Some (3);
[1,3,1] -> Some (1);
[3,1,2] -> Some (2);
[3,2,1] -> Some (1);
[3,0,2] -> Some (2);
[0,3,1] -> Some (1);
[3,2,0] -> Some (0);
[2,1] -> Some (1);
[0,1,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00831500000004 true true

[1,2] -> Some (2);
[0,1] -> Some (1);
[0] -> Some (0);
[3] -> Some (3);
[1,1] -> Some (1);
[3,0] -> Some (0);
[] -> None;
[2,2,0] -> Some (0);
[1,2,3] -> Some (3);
[1,0] -> Some (0);
[2,2] -> Some (2);
[2,3,2] -> Some (2);
[0,1,3] -> Some (3);
[0,2] -> Some (2);
[1] -> Some (1);
[3,3] -> Some (3);
[0,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00866999999994 true true

[1,1] -> Some (1);
[] -> None;
[0,0] -> Some (0);
[3,2,0] -> Some (0);
[0,3] -> Some (3);
[2] -> Some (2);
[0] -> Some (0);
[1,0,1] -> Some (1);
[0,3,2] -> Some (2);
[3,2] -> Some (2);
[2,3,1] -> Some (1);
[2,2] -> Some (2);
[2,3,3] -> Some (3);
[1,2,3] -> Some (3);
[1,0] -> Some (0);
[1,2,1] -> Some (1);
[2,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00823999999989 true true

[0,2] -> Some (2);
[0,1,3] -> Some (3);
[] -> None;
[3,3,0] -> Some (0);
[0] -> Some (0);
[1,0,1] -> Some (1);
[2,1] -> Some (1);
[0,3,0] -> Some (0);
[0,2,3] -> Some (3);
[3] -> Some (3);
[1] -> Some (1);
[2,1,3] -> Some (3);
[1,2,0] -> Some (0);
[3,1] -> Some (1);
[2,3,2] -> Some (2);
[2] -> Some (2);
[2,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.017736 true true

[2,2,3] -> Some (3);
[2] -> Some (2);
[3,3] -> Some (3);
[] -> None;
[1] -> Some (1);
[1,2] -> Some (2);
[0,3,2] -> Some (2);
[0] -> Some (0);
[3] -> Some (3);
[0,3] -> Some (3);
[2,2,1] -> Some (1);
[1,0] -> Some (0);
[1,2,0] -> Some (0);
[1,1,0] -> Some (0);
[3,2] -> Some (2);
[0,2,1] -> Some (1);
[3,0,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00843600000007 true true

[2,1] -> Some (1);
[3,2,1] -> Some (1);
[0,0] -> Some (0);
[3] -> Some (3);
[] -> None;
[2,1,0] -> Some (0);
[1,1,0] -> Some (0);
[1,1,2] -> Some (2);
[3,0] -> Some (0);
[3,3,2] -> Some (2);
[3,1,1] -> Some (1);
[0] -> Some (0);
[2] -> Some (2);
[1,0] -> Some (0);
[0,2,1] -> Some (1);
[2,2] -> Some (2);
[0,1,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00829500000009 true true

[0,3,0] -> Some (0);
[1,2,0] -> Some (0);
[3] -> Some (3);
[] -> None;
[2] -> Some (2);
[1,1] -> Some (1);
[3,3] -> Some (3);
[1,1,3] -> Some (3);
[2,2] -> Some (2);
[3,3,3] -> Some (3);
[1] -> Some (1);
[3,0] -> Some (0);
[0,3] -> Some (3);
[0,2] -> Some (2);
[0] -> Some (0);
[1,2,3] -> Some (3);
[2,0,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.014075 true true

[2] -> Some (2);
[1] -> Some (1);
[2,1] -> Some (1);
[2,3] -> Some (3);
[3,2,3] -> Some (3);
[] -> None;
[0] -> Some (0);
[0,3,1] -> Some (1);
[1,0,1] -> Some (1);
[3] -> Some (3);
[1,2,1] -> Some (1);
[2,3,0] -> Some (0);
[0,2] -> Some (2);
[0,1,3] -> Some (3);
[3,0] -> Some (0);
[1,1] -> Some (1);
[1,2] -> Some (2);
[2,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00816600000007 true true

[1,1,1] -> Some (1);
[] -> None;
[0,0] -> Some (0);
[2,3] -> Some (3);
[0] -> Some (0);
[3,1] -> Some (1);
[2] -> Some (2);
[0,3,0] -> Some (0);
[1,2,0] -> Some (0);
[2,0] -> Some (0);
[3,3] -> Some (3);
[3,2,0] -> Some (0);
[1] -> Some (1);
[2,2,1] -> Some (1);
[0,2] -> Some (2);
[0,2,0] -> Some (0);
[3,0,0] -> Some (0);
[3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00839399999995 true true

[] -> None;
[0,2] -> Some (2);
[3,1] -> Some (1);
[0] -> Some (0);
[2,2] -> Some (2);
[1,3,1] -> Some (1);
[0,1,0] -> Some (0);
[1,0,0] -> Some (0);
[1,2,0] -> Some (0);
[3,0,2] -> Some (2);
[1,0] -> Some (0);
[3,0] -> Some (0);
[1] -> Some (1);
[1,1] -> Some (1);
[2] -> Some (2);
[2,0,3] -> Some (3);
[3,2,0] -> Some (0);
[3,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00862499999994 true true

[3] -> Some (3);
[0] -> Some (0);
[1,3] -> Some (3);
[1,0,1] -> Some (1);
[1,3,0] -> Some (0);
[3,2,0] -> Some (0);
[3,2] -> Some (2);
[3,0] -> Some (0);
[2] -> Some (2);
[0,3,3] -> Some (3);
[] -> None;
[1] -> Some (1);
[1,1] -> Some (1);
[0,3,2] -> Some (2);
[3,2,2] -> Some (2);
[0,2] -> Some (2);
[2,1,2] -> Some (2);
[2,1,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00795399999993 true true

[1,1] -> Some (1);
[] -> None;
[2,3] -> Some (3);
[2,1] -> Some (1);
[1,0] -> Some (0);
[2,2] -> Some (2);
[1,2,3] -> Some (3);
[1,3,3] -> Some (3);
[1] -> Some (1);
[0,0,0] -> Some (0);
[1,3,1] -> Some (1);
[2,0,2] -> Some (2);
[3] -> Some (3);
[2] -> Some (2);
[1,0,0] -> Some (0);
[1,3] -> Some (3);
[0,0] -> Some (0);
[3,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00817800000004 true true

[0] -> Some (0);
[1] -> Some (1);
[0,2,2] -> Some (2);
[2,1] -> Some (1);
[] -> None;
[1,0] -> Some (0);
[0,2] -> Some (2);
[3,0] -> Some (0);
[2] -> Some (2);
[0,0] -> Some (0);
[3] -> Some (3);
[3,2,0] -> Some (0);
[3,0,2] -> Some (2);
[1,1,3] -> Some (3);
[3,2,2] -> Some (2);
[1,1,0] -> Some (0);
[1,3] -> Some (3);
[1,1,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00813199999993 true true

[] -> None;
[0,1] -> Some (1);
[2,3,1] -> Some (1);
[1] -> Some (1);
[1,3] -> Some (3);
[2,1] -> Some (1);
[2,0,0] -> Some (0);
[2,2] -> Some (2);
[3,3] -> Some (3);
[0] -> Some (0);
[2,3,2] -> Some (2);
[1,3,2] -> Some (2);
[2] -> Some (2);
[3] -> Some (3);
[2,0] -> Some (0);
[3,1] -> Some (1);
[0,0] -> Some (0);
[0,2,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00834000000009 true true

[0,2] -> Some (2);
[] -> None;
[0,0] -> Some (0);
[3,2,3] -> Some (3);
[3,2,0] -> Some (0);
[2,3] -> Some (3);
[2,0] -> Some (0);
[1,1,1] -> Some (1);
[0,2,1] -> Some (1);
[3,0] -> Some (0);
[2] -> Some (2);
[1,0] -> Some (0);
[2,1] -> Some (1);
[0,1] -> Some (1);
[3,1] -> Some (1);
[1,0,2] -> Some (2);
[0] -> Some (0);
[1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00848199999996 true true

[0,2,1] -> Some (1);
[3,0,0] -> Some (0);
[] -> None;
[2,1] -> Some (1);
[3] -> Some (3);
[1] -> Some (1);
[2] -> Some (2);
[2,3] -> Some (3);
[0,2,2] -> Some (2);
[0,0,0] -> Some (0);
[2,2,2] -> Some (2);
[3,0,2] -> Some (2);
[0,1] -> Some (1);
[3,0] -> Some (0);
[3,1] -> Some (1);
[0,1,2] -> Some (2);
[0] -> Some (0);
[0,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.0082359999999 true true

[] -> None;
[2,0,1] -> Some (1);
[3,1,3] -> Some (3);
[3,2,1] -> Some (1);
[2] -> Some (2);
[0,2,0] -> Some (0);
[3,2,2] -> Some (2);
[0] -> Some (0);
[1,2] -> Some (2);
[1,2,3] -> Some (3);
[3,2] -> Some (2);
[1] -> Some (1);
[1,3,0] -> Some (0);
[0,0] -> Some (0);
[0,3,2] -> Some (2);
[3,0] -> Some (0);
[2,2,0] -> Some (0);
[2,1,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00826600000005 true true

[2,0] -> Some (0);
[] -> None;
[0] -> Some (0);
[1] -> Some (1);
[0,1,0] -> Some (0);
[1,2] -> Some (2);
[1,2,2] -> Some (2);
[3,0] -> Some (0);
[2,3] -> Some (3);
[0,1] -> Some (1);
[2,2] -> Some (2);
[0,3] -> Some (3);
[1,1,0] -> Some (0);
[1,3,0] -> Some (0);
[0,0,3] -> Some (3);
[2] -> Some (2);
[3,3,0] -> Some (0);
[2,3,2] -> Some (2);
[0,2,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00839199999996 true true

[3] -> Some (3);
[0] -> Some (0);
[] -> None;
[3,2,2] -> Some (2);
[1] -> Some (1);
[3,2] -> Some (2);
[2,2] -> Some (2);
[0,0] -> Some (0);
[0,1,3] -> Some (3);
[2,1,2] -> Some (2);
[2] -> Some (2);
[1,0] -> Some (0);
[3,3] -> Some (3);
[3,1,0] -> Some (0);
[3,0,2] -> Some (2);
[2,3,1] -> Some (1);
[0,2] -> Some (2);
[1,2] -> Some (2);
[3,2,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00830900000005 true true

[1,3,1] -> Some (1);
[] -> None;
[2,0,2] -> Some (2);
[3] -> Some (3);
[2,3] -> Some (3);
[3,3,0] -> Some (0);
[2,1] -> Some (1);
[0,0] -> Some (0);
[3,0] -> Some (0);
[0] -> Some (0);
[3,0,3] -> Some (3);
[2] -> Some (2);
[0,0,2] -> Some (2);
[1,3] -> Some (3);
[1] -> Some (1);
[1,3,3] -> Some (3);
[0,1] -> Some (1);
[2,0] -> Some (0);
[0,0,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00836299999992 true true

[0,0] -> Some (0);
[3,0,2] -> Some (2);
[3] -> Some (3);
[] -> None;
[2,1,2] -> Some (2);
[1,0] -> Some (0);
[2,0] -> Some (0);
[2] -> Some (2);
[1] -> Some (1);
[1,1,2] -> Some (2);
[0,3,0] -> Some (0);
[1,3,3] -> Some (3);
[1,3] -> Some (3);
[3,3] -> Some (3);
[3,2] -> Some (2);
[1,2] -> Some (2);
[2,3] -> Some (3);
[2,2,1] -> Some (1);
[2,3,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00861400000008 true true

[2,3] -> Some (3);
[0,0,1] -> Some (1);
[0] -> Some (0);
[3,1] -> Some (1);
[0,1,0] -> Some (0);
[] -> None;
[2,1,0] -> Some (0);
[1,1] -> Some (1);
[0,1,3] -> Some (3);
[2,2] -> Some (2);
[0,0,2] -> Some (2);
[1,2] -> Some (2);
[3] -> Some (3);
[1] -> Some (1);
[2] -> Some (2);
[0,0] -> Some (0);
[1,3] -> Some (3);
[1,2,1] -> Some (1);
[3,2,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.020027 true true

[0,3,0] -> Some (0);
[2,0,2] -> Some (2);
[0] -> Some (0);
[] -> None;
[2,2,1] -> Some (1);
[2,2] -> Some (2);
[2,0,0] -> Some (0);
[2] -> Some (2);
[0,0,3] -> Some (3);
[0,3] -> Some (3);
[1,1,2] -> Some (2);
[3,3] -> Some (3);
[0,0] -> Some (0);
[1,1] -> Some (1);
[3] -> Some (3);
[3,2] -> Some (2);
[3,0,0] -> Some (0);
[2,3,0] -> Some (0);
[1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00829199999998 true true

[1] -> Some (1);
[0] -> Some (0);
[] -> None;
[1,0,2] -> Some (2);
[2,1,3] -> Some (3);
[2] -> Some (2);
[3] -> Some (3);
[2,2] -> Some (2);
[2,0] -> Some (0);
[2,0,2] -> Some (2);
[0,0,0] -> Some (0);
[1,3] -> Some (3);
[2,0,1] -> Some (1);
[1,2] -> Some (2);
[0,2] -> Some (2);
[0,1] -> Some (1);
[3,3] -> Some (3);
[3,1,2] -> Some (2);
[2,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.0080660000001 true true

[3] -> Some (3);
[2,3] -> Some (3);
[3,2,0] -> Some (0);
[] -> None;
[2,2] -> Some (2);
[1,0,1] -> Some (1);
[1,3,0] -> Some (0);
[2] -> Some (2);
[1,2,1] -> Some (1);
[0,2,3] -> Some (3);
[1,1] -> Some (1);
[2,1,3] -> Some (3);
[1] -> Some (1);
[0,0] -> Some (0);
[2,0,1] -> Some (1);
[0,1] -> Some (1);
[3,2,1] -> Some (1);
[0,1,1] -> Some (1);
[0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.010078 true true

[] -> None;
[1,2] -> Some (2);
[3] -> Some (3);
[0,2,0] -> Some (0);
[3,2] -> Some (2);
[2,3] -> Some (3);
[0] -> Some (0);
[1] -> Some (1);
[1,2,3] -> Some (3);
[1,1,0] -> Some (0);
[2,2] -> Some (2);
[2] -> Some (2);
[0,3] -> Some (3);
[2,1,1] -> Some (1);
[3,3,2] -> Some (2);
[2,3,0] -> Some (0);
[0,1] -> Some (1);
[2,0,0] -> Some (0);
[0,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00856300000009 true true

[] -> None;
[3,0] -> Some (0);
[0] -> Some (0);
[2] -> Some (2);
[0,3,2] -> Some (2);
[2,1,0] -> Some (0);
[2,1] -> Some (1);
[1] -> Some (1);
[1,1] -> Some (1);
[1,0,0] -> Some (0);
[3,2,2] -> Some (2);
[3,3] -> Some (3);
[3,1] -> Some (1);
[1,1,3] -> Some (3);
[0,0,3] -> Some (3);
[3,2,0] -> Some (0);
[3] -> Some (3);
[0,1,3] -> Some (3);
[1,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00847500000009 true true

[1,0] -> Some (0);
[0,1] -> Some (1);
[0,2] -> Some (2);
[0,3] -> Some (3);
[2,0,1] -> Some (1);
[1,0,2] -> Some (2);
[0] -> Some (0);
[3,1,0] -> Some (0);
[1] -> Some (1);
[2] -> Some (2);
[3,2] -> Some (2);
[] -> None;
[3] -> Some (3);
[3,2,1] -> Some (1);
[0,3,2] -> Some (2);
[1,2] -> Some (2);
[3,1] -> Some (1);
[2,0] -> Some (0);
[2,1,3] -> Some (3);
[1,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00830599999995 true true

[3,3] -> Some (3);
[2,2] -> Some (2);
[1,3] -> Some (3);
[] -> None;
[2,1] -> Some (1);
[0] -> Some (0);
[0,1,2] -> Some (2);
[2] -> Some (2);
[1,1,3] -> Some (3);
[0,2] -> Some (2);
[1,0,2] -> Some (2);
[3] -> Some (3);
[1,0] -> Some (0);
[2,2,0] -> Some (0);
[1,2,0] -> Some (0);
[2,3] -> Some (3);
[3,2,2] -> Some (2);
[1,2,1] -> Some (1);
[3,3,1] -> Some (1);
[0,1,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00854800000002 true true

[] -> None;
[3,3] -> Some (3);
[0,1,3] -> Some (3);
[0,0] -> Some (0);
[1,0,1] -> Some (1);
[3,0,3] -> Some (3);
[1,0,3] -> Some (3);
[2] -> Some (2);
[3,2,3] -> Some (3);
[2,0,3] -> Some (3);
[3,1] -> Some (1);
[1,2,0] -> Some (0);
[3] -> Some (3);
[1,3,1] -> Some (1);
[3,1,3] -> Some (3);
[1] -> Some (1);
[3,0] -> Some (0);
[1,3] -> Some (3);
[3,2] -> Some (2);
[2,3,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00827299999992 true true

[2,2] -> Some (2);
[] -> None;
[2] -> Some (2);
[3,0] -> Some (0);
[0,1] -> Some (1);
[3,2] -> Some (2);
[0,2] -> Some (2);
[1,2] -> Some (2);
[0] -> Some (0);
[1,0,2] -> Some (2);
[0,1,0] -> Some (0);
[3,2,1] -> Some (1);
[2,2,2] -> Some (2);
[3] -> Some (3);
[0,3] -> Some (3);
[1,1,0] -> Some (0);
[1,1] -> Some (1);
[3,3] -> Some (3);
[1] -> Some (1);
[0,3,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00817800000004 true true

[0] -> Some (0);
[] -> None;
[1,2] -> Some (2);
[0,1,2] -> Some (2);
[0,1] -> Some (1);
[2] -> Some (2);
[2,2,0] -> Some (0);
[3] -> Some (3);
[2,3,1] -> Some (1);
[0,1,0] -> Some (0);
[2,3,0] -> Some (0);
[1] -> Some (1);
[2,3] -> Some (3);
[1,0,1] -> Some (1);
[3,2] -> Some (2);
[0,3,1] -> Some (1);
[2,2] -> Some (2);
[3,0,1] -> Some (1);
[2,1] -> Some (1);
[1,3,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00846000000001 true true

[] -> None;
[3] -> Some (3);
[2,1] -> Some (1);
[2] -> Some (2);
[1] -> Some (1);
[3,0] -> Some (0);
[0,2,3] -> Some (3);
[0,0,1] -> Some (1);
[1,1,1] -> Some (1);
[2,0] -> Some (0);
[2,2,0] -> Some (0);
[1,2,3] -> Some (3);
[0] -> Some (0);
[3,3] -> Some (3);
[0,0] -> Some (0);
[1,2,1] -> Some (1);
[3,2,3] -> Some (3);
[3,0,2] -> Some (2);
[3,2,0] -> Some (0);
[2,1,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00817899999993 true true

[] -> None;
[0,3] -> Some (3);
[2] -> Some (2);
[0,2] -> Some (2);
[3] -> Some (3);
[1,1,0] -> Some (0);
[3,3,3] -> Some (3);
[0,0] -> Some (0);
[1,2,3] -> Some (3);
[3,1] -> Some (1);
[3,0,1] -> Some (1);
[0,1] -> Some (1);
[1,0] -> Some (0);
[0,3,3] -> Some (3);
[3,2] -> Some (2);
[1,0,1] -> Some (1);
[1,2] -> Some (2);
[2,2,0] -> Some (0);
[0,1,1] -> Some (1);
[3,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00823100000002 true true

[] -> None;
[3] -> Some (3);
[2,0,3] -> Some (3);
[1] -> Some (1);
[0,2] -> Some (2);
[2,0] -> Some (0);
[0,3] -> Some (3);
[3,3,3] -> Some (3);
[1,2] -> Some (2);
[1,3,1] -> Some (1);
[0,1,3] -> Some (3);
[3,0,2] -> Some (2);
[2] -> Some (2);
[0] -> Some (0);
[3,0] -> Some (0);
[2,3,2] -> Some (2);
[3,3,0] -> Some (0);
[1,1,3] -> Some (3);
[1,1,1] -> Some (1);
[1,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00854499999991 true true

[2,2,2] -> Some (2);
[0,1,0] -> Some (0);
[1] -> Some (1);
[3,0,0] -> Some (0);
[2] -> Some (2);
[0,1] -> Some (1);
[1,1] -> Some (1);
[] -> None;
[3,3,2] -> Some (2);
[0,2,0] -> Some (0);
[3,0,1] -> Some (1);
[2,3,0] -> Some (0);
[1,2] -> Some (2);
[0] -> Some (0);
[3,3,3] -> Some (3);
[0,2] -> Some (2);
[2,2,0] -> Some (0);
[0,0] -> Some (0);
[3,0,2] -> Some (2);
[1,0,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00864999999999 true true

[3,2] -> Some (2);
[2] -> Some (2);
[1,0,2] -> Some (2);
[] -> None;
[0] -> Some (0);
[2,1,1] -> Some (1);
[1,1,3] -> Some (3);
[2,2] -> Some (2);
[3] -> Some (3);
[1] -> Some (1);
[3,1,3] -> Some (3);
[1,1,1] -> Some (1);
[0,3,0] -> Some (0);
[0,1,2] -> Some (2);
[1,2,2] -> Some (2);
[3,3] -> Some (3);
[2,0] -> Some (0);
[0,0,0] -> Some (0);
[0,1] -> Some (1);
[3,0,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00839599999995 true true

