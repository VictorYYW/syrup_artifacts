list_nth
([0,0],1) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0000 false

([],1) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0000 false

([1],2) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0000 false

([2,0,1],0) -> 2;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> Un_Cons (x . 0) . 0

0.0192 false

([],0) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0000 false

([],2) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0000 false

([],2) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0000 false

([2,0,2],3) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0000 false

([2,0],1) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0000 false

([],2) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0000 false

([2],0) -> 2;
([],0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Un_Cons (x . 0) . 0

0.0066 false

([3,0],3) -> 0;
([3,0,1],3) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([],2) -> 0;
([0,2],2) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([],1) -> 0;
([3,3],1) -> 3;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Un_S (x . 1)
      | Cons _ -> Un_Cons (x . 0) . 0

0.1116 false

([],2) -> 0;
([2,3],3) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([1,1],0) -> 1;
([0,0,2],2) -> 2;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match Un_Cons (x . 0) . 0 with
      | O _ -> x . 1
      | S _ -> Un_Cons (x . 0) . 0

28.0122 false

([],1) -> 0;
([1,2],0) -> 1;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Un_Cons (x . 0) . 0
      | S _ -> Un_S (x . 1)

0.0135 false

([1,0,1],0) -> 1;
([2],1) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Un_Cons (x . 0) . 0
      | S _ -> Un_S (x . 1)

0.2724 false

([1,1,0],0) -> 1;
([2,1,0],0) -> 2;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> Un_Cons (x . 0) . 0

0.0181 false

([3,1],1) -> 1;
([],3) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) -> match x . 0 with
                          | Nil _ -> 0
                          | Cons _ -> x . 1

2.8962 false

([2,2],1) -> 2;
([1],1) -> 0;
([0,2],1) -> 2;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match Un_Cons (x . 0) . 1 with
      | Nil _ -> Un_S (x . 1)
      | Cons _ -> S (x . 1)

2.5238 false

([1],2) -> 0;
([0,2],2) -> 0;
([],3) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([],1) -> 0;
([2,1],3) -> 0;
([1],1) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([2,2],0) -> 2;
([],3) -> 0;
([0,3],1) -> 3;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> Un_Cons (Un_Cons (x . 0) . 1) . 0

0.0722 false

([],1) -> 0;
([2],0) -> 2;
([3,3],1) -> 3;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Un_S (x . 1)
      | Cons _ -> Un_Cons (x . 0) . 0

0.0416 false

([],2) -> 0;
([0,1],2) -> 0;
([],0) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([1,2,1],2) -> 1;
([],2) -> 0;
([2,3],0) -> 2;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> Un_Cons (x . 0) . 0

4.4954 false

([3,3,3],0) -> 3;
([],3) -> 0;
([3,1,1],3) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Un_Cons (x . 0) . 0
      | S _ -> 0

0.0881 false

([2,1],0) -> 2;
([1,0],0) -> 1;
([1],3) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Un_Cons (x . 0) . 0
      | S _ -> 0

0.2433 false

([3,0,3],3) -> 0;
([],1) -> 0;
([3],0) -> 3;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Un_Cons (x . 0) . 0
      | S _ -> 0

1.5370 false

([2,1,1],1) -> 1;
([2],1) -> 0;
([3,0,3],2) -> 3;
([3,2],2) -> 0;

=================================
None
([],2) -> 0;
([2,0],0) -> 2;
([],0) -> 0;
([0],1) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> Un_Cons (x . 0) . 0

0.0274 false

([],0) -> 0;
([0,1],1) -> 1;
([3,1],3) -> 0;
([],1) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match Un_S (x . 1) with
                     | O _ -> x . 1
                     | S _ -> 0)

5.2513 false

([],1) -> 0;
([],3) -> 0;
([0,2],0) -> 0;
([1,3,2],3) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([3,1,3],1) -> 1;
([0,0],3) -> 0;
([1,0],0) -> 1;
([0,2,1],2) -> 1;

=================================
None
([2,1],0) -> 2;
([0,3,0],0) -> 0;
([3,2,0],0) -> 3;
([0,3],1) -> 3;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Un_Cons (x . 0) . 0
      | S _ -> Un_Cons (Un_Cons (x . 0) . 1) . 0

2.2194 false

([0],2) -> 0;
([1],3) -> 0;
([1,2],2) -> 0;
([0],1) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([3,3],0) -> 3;
([3,2],0) -> 3;
([],0) -> 0;
([1],1) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> (match x . 0 with
                  | Nil _ -> x . 1
                  | Cons _ -> Un_Cons (x . 0) . 0)
      | S _ -> Un_S (x . 1)

0.1296 false

([],3) -> 0;
([0,2],0) -> 0;
([2],0) -> 2;
([],2) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Un_Cons (x . 0) . 0
      | S _ -> 0

0.0116 false

([2],2) -> 0;
([2,1,2],1) -> 1;
([2],3) -> 0;
([],0) -> 0;

=================================
None
([0,2,1],1) -> 2;
([3,3],1) -> 3;
([1],0) -> 1;
([0],3) -> 0;
([0,2,2],3) -> 0;

=================================
None
([],1) -> 0;
([0],2) -> 0;
([],3) -> 0;
([0],0) -> 0;
([],0) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([3],1) -> 0;
([0],1) -> 0;
([1,3,3],2) -> 3;
([0],3) -> 0;
([1,2,1],0) -> 1;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match Un_Cons (x . 0) . 1 with
      | Nil _ -> 0
      | Cons _ -> S (x . 1)

45.0378 false

([],3) -> 0;
([1],0) -> 1;
([2,1,3],1) -> 1;
([2],3) -> 0;
([],0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, 0))

39.9078 false

([3],0) -> 3;
([0,3],1) -> 3;
([2],1) -> 0;
([1,1,3],3) -> 0;
([0,1],2) -> 0;

=================================
None
([2,0],1) -> 0;
([2,1],1) -> 1;
([0],3) -> 0;
([2,3],2) -> 0;
([],2) -> 0;

=================================
None
([2,1,2],1) -> 1;
([2,2],2) -> 0;
([1,1],1) -> 1;
([2,1],0) -> 2;
([3],1) -> 0;

=================================
None
([2,0],0) -> 2;
([],0) -> 0;
([1,3],3) -> 0;
([2],3) -> 0;
([1,2],2) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> (match x . 0 with
                  | Nil _ -> x . 1
                  | Cons _ -> Un_Cons (x . 0) . 0)
      | S _ -> 0

0.3901 false

([3,1,1],2) -> 1;
([3,1],0) -> 3;
([3,2,2],1) -> 2;
([],0) -> 0;
([2],0) -> 2;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> Un_Cons (Un_Cons (x . 0) . 1) . 0)

9.8834 false

([],2) -> 0;
([1,1],0) -> 1;
([3],2) -> 0;
([],0) -> 0;
([0,3,3],3) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> 0)

0.5702 false

([0,0],0) -> 0;
([3,1,1],0) -> 3;
([3],2) -> 0;
([0,2],0) -> 0;
([0],1) -> 0;
([],3) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Un_Cons (x . 0) . 0
      | S _ -> 0

0.6878 false

([0],1) -> 0;
([],0) -> 0;
([0,3,3],3) -> 0;
([3,0],2) -> 0;
([],2) -> 0;
([0,0],0) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([1,1,0],3) -> 0;
([3,0,3],0) -> 3;
([3,3,1],1) -> 3;
([2],0) -> 2;
([],2) -> 0;
([],3) -> 0;

=================================
None
([],0) -> 0;
([3,2],0) -> 3;
([0],3) -> 0;
([2],1) -> 0;
([],1) -> 0;
([1],3) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> (match x . 0 with
                  | Nil _ -> x . 1
                  | Cons _ -> Un_Cons (x . 0) . 0)
      | S _ -> 0

0.2136 false

([],1) -> 0;
([1,2,3],2) -> 3;
([],2) -> 0;
([2],2) -> 0;
([1,1],3) -> 0;
([0],1) -> 0;

=================================
None
([],2) -> 0;
([2],2) -> 0;
([3,0],3) -> 0;
([3,3,1],2) -> 1;
([1,0],0) -> 1;
([1,3,0],3) -> 0;

=================================
None
([0,1,1],1) -> 1;
([1],3) -> 0;
([3],0) -> 3;
([3,1,1],3) -> 0;
([0,2,1],2) -> 1;
([2,2],1) -> 2;

=================================
None
([],0) -> 0;
([3,1,0],0) -> 3;
([3,1],1) -> 1;
([0],3) -> 0;
([3],3) -> 0;
([2,1,0],3) -> 0;

=================================
None
([0,3,2],2) -> 2;
([0,2,2],1) -> 2;
([2],1) -> 0;
([3,0],3) -> 0;
([3,0],1) -> 0;
([1,2,3],3) -> 0;

=================================
None
([2,0],0) -> 2;
([],3) -> 0;
([0,2,2],1) -> 2;
([],2) -> 0;
([],0) -> 0;
([1,3,0],0) -> 1;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> S (x . 1))

14.1294 false

([1,1,2],2) -> 2;
([0,3,0],2) -> 0;
([1,3,3],2) -> 3;
([2,2,0],3) -> 0;
([2,2,2],1) -> 2;
([],0) -> 0;
([1,3,0],1) -> 3;

=================================
None
([2,2,0],0) -> 2;
([],3) -> 0;
([1,3,1],0) -> 1;
([],1) -> 0;
([3],3) -> 0;
([0,2,1],2) -> 1;
([1],2) -> 0;

=================================
None
([0,0,2],3) -> 0;
([3],1) -> 0;
([],3) -> 0;
([2],2) -> 0;
([],2) -> 0;
([],0) -> 0;
([3],0) -> 3;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> (match x . 0 with
                  | Nil _ -> x . 1
                  | Cons _ -> Un_Cons (x . 0) . 0)
      | S _ -> 0

0.4423 false

([3,2],2) -> 0;
([3],1) -> 0;
([2],3) -> 0;
([],1) -> 0;
([1],2) -> 0;
([],0) -> 0;
([2,2,1],1) -> 2;

=================================
None
([3],0) -> 3;
([],0) -> 0;
([1],1) -> 0;
([],3) -> 0;
([],2) -> 0;
([1],3) -> 0;
([2],1) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> (match x . 0 with
                  | Nil _ -> x . 1
                  | Cons _ -> Un_Cons (x . 0) . 0)
      | S _ -> 0

0.0269 false

([2],3) -> 0;
([1,0],0) -> 1;
([2],0) -> 2;
([],1) -> 0;
([],2) -> 0;
([3,1],2) -> 0;
([3,1,2],2) -> 2;

=================================
None
([],2) -> 0;
([2,0,2],2) -> 2;
([],3) -> 0;
([0,1,3],3) -> 0;
([0,1,3],1) -> 1;
([3],2) -> 0;
([2],3) -> 0;

=================================
None
([0,2,3],2) -> 3;
([2,2],3) -> 0;
([0,3,2],1) -> 3;
([0,3],1) -> 3;
([0],1) -> 0;
([],3) -> 0;
([0],3) -> 0;

=================================
None
([1,1,0],1) -> 1;
([2,2],3) -> 0;
([3],1) -> 0;
([],3) -> 0;
([],2) -> 0;
([0,1,0],2) -> 0;
([],0) -> 0;

=================================
None
([1,0],3) -> 0;
([1],2) -> 0;
([0],0) -> 0;
([2],0) -> 2;
([2],3) -> 0;
([0],3) -> 0;
([3,3],2) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Un_Cons (x . 0) . 0
      | S _ -> 0

0.4146 false

([1,1],1) -> 1;
([0],2) -> 0;
([0,3],1) -> 3;
([2,0,3],3) -> 0;
([3],3) -> 0;
([1,1,2],2) -> 2;
([3,2,2],2) -> 2;
([1,0,2],3) -> 0;

=================================
None
([1,2],0) -> 1;
([3,2],3) -> 0;
([1,2,2],1) -> 2;
([1,0],1) -> 0;
([3,1,1],3) -> 0;
([],0) -> 0;
([3],3) -> 0;
([0],3) -> 0;

=================================
None
([0,0,0],1) -> 0;
([2,3],0) -> 2;
([2,1,3],1) -> 1;
([2,1],0) -> 2;
([1,3,3],1) -> 3;
([3,1,0],0) -> 3;
([2,3,3],0) -> 2;
([],1) -> 0;

=================================
None
([2,0],3) -> 0;
([0,0],0) -> 0;
([1,0,3],1) -> 0;
([],3) -> 0;
([],0) -> 0;
([3,2,0],3) -> 0;
([2,3,0],0) -> 2;
([0,1,0],3) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> (match x . 0 with
                  | Nil _ -> x . 1
                  | Cons _ -> Un_Cons (x . 0) . 0)
      | S _ -> 0

9.9168 false

([2],0) -> 2;
([2,1],2) -> 0;
([1],3) -> 0;
([3,3,0],3) -> 0;
([0,1,3],3) -> 0;
([1,2,0],3) -> 0;
([],3) -> 0;
([2,1],1) -> 1;

=================================
None
([3],0) -> 3;
([],0) -> 0;
([0,1,2],2) -> 2;
([1],1) -> 0;
([1,0],1) -> 0;
([3,1,0],1) -> 1;
([2,1,1],3) -> 0;
([2],2) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

17.1843 true

([3],3) -> 0;
([2],1) -> 0;
([3,2,3],2) -> 3;
([1,1,1],2) -> 1;
([3,1,0],2) -> 0;
([0,3,0],0) -> 0;
([1,0],1) -> 0;
([],0) -> 0;

=================================
None
([0,1,3],0) -> 0;
([0,3],2) -> 0;
([3,0,2],2) -> 2;
([0],3) -> 0;
([3,0,2],0) -> 3;
([1,3,0],3) -> 0;
([2,2],2) -> 0;
([2,2],0) -> 2;

=================================
None
([0,3],0) -> 0;
([2,1,2],1) -> 1;
([],3) -> 0;
([0,0,0],0) -> 0;
([],2) -> 0;
([0,1,0],0) -> 0;
([3,0],1) -> 0;
([1],3) -> 0;

=================================
None
([],1) -> 0;
([0,0],0) -> 0;
([3],0) -> 3;
([2,1],1) -> 1;
([3],1) -> 0;
([1,0,0],1) -> 0;
([3,1],0) -> 3;
([1,3],3) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

6.4543 true

([3,0,1],3) -> 0;
([],1) -> 0;
([0,1,1],0) -> 0;
([1,0,2],2) -> 2;
([1,3],1) -> 3;
([0,3,0],1) -> 3;
([2],2) -> 0;
([0],0) -> 0;
([3,2,1],0) -> 3;

=================================
None
([0,3,0],0) -> 0;
([2],0) -> 2;
([1,0],0) -> 1;
([3,3,2],2) -> 2;
([1],2) -> 0;
([1,0],1) -> 0;
([2,1,1],0) -> 2;
([],2) -> 0;
([2],2) -> 0;

=================================
None
([],1) -> 0;
([3],1) -> 0;
([],0) -> 0;
([2,2,0],2) -> 0;
([0,2],0) -> 0;
([0],3) -> 0;
([1,2,3],0) -> 1;
([],3) -> 0;
([0,0],1) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> 0)

0.8280 false

([],0) -> 0;
([2],2) -> 0;
([],2) -> 0;
([1,0],2) -> 0;
([],3) -> 0;
([],1) -> 0;
([0,1],0) -> 0;
([1],0) -> 1;
([1,3],0) -> 1;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> (match x . 0 with
                  | Nil _ -> x . 1
                  | Cons _ -> Un_Cons (x . 0) . 0)
      | S _ -> 0

0.0286 false

([0,0,1],0) -> 0;
([],2) -> 0;
([2,3,1],3) -> 0;
([2,1,3],3) -> 0;
([0,1,1],2) -> 1;
([2,0,3],1) -> 0;
([1,2],1) -> 2;
([3,3],0) -> 3;
([],1) -> 0;

=================================
None
([2],2) -> 0;
([2],0) -> 2;
([],0) -> 0;
([3],3) -> 0;
([0,0],2) -> 0;
([1],2) -> 0;
([0,2],2) -> 0;
([2,0,0],2) -> 0;
([],2) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> (match x . 0 with
                  | Nil _ -> x . 1
                  | Cons _ -> Un_Cons (x . 0) . 0)
      | S _ -> 0

0.1609 false

([3],1) -> 0;
([3],3) -> 0;
([1,0,3],2) -> 3;
([3,0],2) -> 0;
([0],0) -> 0;
([1],0) -> 1;
([],1) -> 0;
([2],2) -> 0;
([1,3,3],0) -> 1;

=================================
None
([],1) -> 0;
([0],0) -> 0;
([],0) -> 0;
([2,1],0) -> 2;
([1,3],1) -> 3;
([0],3) -> 0;
([3,3],2) -> 0;
([1,2,3],1) -> 2;
([2],0) -> 2;

=================================
None
([2],2) -> 0;
([1],1) -> 0;
([1,1],3) -> 0;
([],2) -> 0;
([],0) -> 0;
([],1) -> 0;
([1,0,0],2) -> 0;
([0,2],1) -> 2;
([1,2],3) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match Un_Cons (x . 0) . 0 with
                     | O _ -> S (x . 1)
                     | S _ -> 0)

6.9133 false

([1],3) -> 0;
([0,0],1) -> 0;
([0,2,1],1) -> 2;
([3],0) -> 3;
([3,2],3) -> 0;
([0,0],3) -> 0;
([1,3,2],3) -> 0;
([2],2) -> 0;
([],2) -> 0;

=================================
None
([2],2) -> 0;
([],3) -> 0;
([3,1,1],3) -> 0;
([3,2,0],3) -> 0;
([0,0,0],3) -> 0;
([1,3],2) -> 0;
([],2) -> 0;
([1],2) -> 0;
([3,3],1) -> 3;
([],0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match Un_S (x . 1) with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> 0)

5.7405 false

([2,0],3) -> 0;
([2],2) -> 0;
([0],2) -> 0;
([3],2) -> 0;
([2,2,2],3) -> 0;
([1,3],1) -> 3;
([0],3) -> 0;
([2,1],1) -> 1;
([2,2],3) -> 0;
([1,0],3) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match Un_S (x . 1) with
      | O _ -> Un_Cons (Un_Cons (x . 0) . 1) . 0
      | S _ -> 0

3.2949 false

([2,3,2],3) -> 0;
([1,1],2) -> 0;
([0,2],3) -> 0;
([],3) -> 0;
([0,2,2],1) -> 2;
([],2) -> 0;
([3],2) -> 0;
([3,0],2) -> 0;
([1,1,1],2) -> 1;
([],0) -> 0;

=================================
None
([],0) -> 0;
([],1) -> 0;
([0,0],1) -> 0;
([1],1) -> 0;
([1,1],2) -> 0;
([],2) -> 0;
([0,1,3],0) -> 0;
([0,3],2) -> 0;
([2,0,2],0) -> 2;
([1],3) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> 0)

0.3082 false

([],2) -> 0;
([0,2],1) -> 2;
([],0) -> 0;
([2],3) -> 0;
([1,0,0],1) -> 0;
([2],0) -> 2;
([],1) -> 0;
([0],1) -> 0;
([0,1],0) -> 0;
([0,3,0],2) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

20.6687 true

([3],2) -> 0;
([2],2) -> 0;
([],1) -> 0;
([3],1) -> 0;
([1,0],1) -> 0;
([2],0) -> 2;
([1,0],0) -> 1;
([0],0) -> 0;
([],0) -> 0;
([0,2],0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> (match x . 0 with
                  | Nil _ -> x . 1
                  | Cons _ -> Un_Cons (x . 0) . 0)
      | S _ -> 0

0.0526 false

([1],3) -> 0;
([2],3) -> 0;
([3,1],2) -> 0;
([3,1,0],2) -> 0;
([],1) -> 0;
([2],0) -> 2;
([3,3],2) -> 0;
([3],3) -> 0;
([3,0],1) -> 0;
([3,0,2],1) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Un_Cons (x . 0) . 0
      | S _ -> 0

0.0870 false

([0,3,2],2) -> 2;
([3,0],3) -> 0;
([],2) -> 0;
([1,1,2],2) -> 2;
([1,3,2],3) -> 0;
([0,1,2],0) -> 0;
([0,3],0) -> 0;
([0],3) -> 0;
([0,1],3) -> 0;
([2,2,3],2) -> 3;

=================================
None
([],2) -> 0;
([0],0) -> 0;
([],0) -> 0;
([0,0],1) -> 0;
([2],3) -> 0;
([1,3],3) -> 0;
([],3) -> 0;
([3,2,1],3) -> 0;
([3,3,0],2) -> 0;
([],1) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([2,0,3],2) -> 3;
([3,0],3) -> 0;
([],3) -> 0;
([1,2,3],3) -> 0;
([1],2) -> 0;
([],0) -> 0;
([2,3,1],1) -> 3;
([],2) -> 0;
([0,1],2) -> 0;
([1],1) -> 0;

=================================
None
([2,1],2) -> 0;
([3,3,1],0) -> 3;
([0],3) -> 0;
([3],2) -> 0;
([2],3) -> 0;
([],2) -> 0;
([3],1) -> 0;
([2,1],1) -> 1;
([1],1) -> 0;
([2,3],1) -> 3;
([],0) -> 0;

=================================
None
([0,0,3],3) -> 0;
([0,3,1],2) -> 1;
([3,2],3) -> 0;
([],2) -> 0;
([3,3],2) -> 0;
([],1) -> 0;
([],3) -> 0;
([0,2],3) -> 0;
([3,2,3],2) -> 3;
([2],1) -> 0;
([2,2],2) -> 0;

=================================
None
([0],1) -> 0;
([3,3],0) -> 3;
([2,2,1],2) -> 1;
([0,1,0],2) -> 0;
([0,2,1],3) -> 0;
([3,2],2) -> 0;
([3],0) -> 3;
([3,0,3],3) -> 0;
([],2) -> 0;
([1,2,1],1) -> 2;
([1,1],1) -> 1;

=================================
None
([],2) -> 0;
([2,2,3],1) -> 2;
([3,2,1],3) -> 0;
([],0) -> 0;
([2,1,1],2) -> 1;
([2,0,0],3) -> 0;
([2,0,3],2) -> 3;
([0,1],3) -> 0;
([],3) -> 0;
([3,1],3) -> 0;
([0,3,0],2) -> 0;

=================================
None
([0],3) -> 0;
([],1) -> 0;
([1],0) -> 1;
([],0) -> 0;
([2,3],0) -> 2;
([1,1],3) -> 0;
([2,1],3) -> 0;
([0,3,2],1) -> 3;
([3],1) -> 0;
([],2) -> 0;
([2,0,3],1) -> 0;

=================================
None
([],1) -> 0;
([],2) -> 0;
([2,1],0) -> 2;
([3,2,0],1) -> 2;
([1,2,0],3) -> 0;
([3],1) -> 0;
([0],1) -> 0;
([3,3,3],2) -> 3;
([2,0],1) -> 0;
([0,3],2) -> 0;
([1],0) -> 1;

=================================
None
([2],0) -> 2;
([1,2,2],1) -> 2;
([3,0,1],2) -> 1;
([0],1) -> 0;
([],1) -> 0;
([3,0,3],2) -> 3;
([2,3],2) -> 0;
([1,0],1) -> 0;
([2,1],3) -> 0;
([],0) -> 0;
([1,3],2) -> 0;

=================================
None
([0],1) -> 0;
([],2) -> 0;
([1,1,3],1) -> 1;
([1,0,3],2) -> 3;
([],1) -> 0;
([3,0],3) -> 0;
([2],0) -> 2;
([],3) -> 0;
([0],3) -> 0;
([],0) -> 0;
([0,0],1) -> 0;

=================================
None
([3],3) -> 0;
([],0) -> 0;
([1,2,0],1) -> 2;
([0],2) -> 0;
([1,1],0) -> 1;
([0,2,2],3) -> 0;
([3],0) -> 3;
([2,0],0) -> 2;
([0,0],0) -> 0;
([2],3) -> 0;
([2,0,0],0) -> 2;

=================================
None
([2],0) -> 2;
([],3) -> 0;
([3,0,1],3) -> 0;
([1,2,2],0) -> 1;
([1],0) -> 1;
([],2) -> 0;
([],0) -> 0;
([],1) -> 0;
([0],2) -> 0;
([0,1],0) -> 0;
([3],2) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> (match x . 0 with
                  | Nil _ -> x . 1
                  | Cons _ -> Un_Cons (x . 0) . 0)
      | S _ -> 0

0.1902 false

([1],2) -> 0;
([],2) -> 0;
([2],0) -> 2;
([2],3) -> 0;
([],1) -> 0;
([],0) -> 0;
([3,1,2],1) -> 1;
([3,2,1],2) -> 1;
([0],0) -> 0;
([],3) -> 0;
([3],3) -> 0;
([3,3],0) -> 3;

=================================
None
([],3) -> 0;
([],2) -> 0;
([0,3],1) -> 3;
([3],0) -> 3;
([2,1,0],3) -> 0;
([1],0) -> 1;
([0,2],3) -> 0;
([3,0,1],0) -> 3;
([],0) -> 0;
([0],2) -> 0;
([2],0) -> 2;
([1,3],1) -> 3;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

59.2070 true

([1,0],2) -> 0;
([2,2],2) -> 0;
([2,0],0) -> 2;
([1],3) -> 0;
([2,2,1],3) -> 0;
([0],1) -> 0;
([],1) -> 0;
([],2) -> 0;
([1,3],3) -> 0;
([2],3) -> 0;
([3,3,3],0) -> 3;
([0],2) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Un_Cons (x . 0) . 0
      | S _ -> 0

0.3217 false

([0,3],1) -> 3;
([],2) -> 0;
([2,0,2],0) -> 2;
([0,3,3],1) -> 3;
([2,1],0) -> 2;
([],3) -> 0;
([3,1,0],1) -> 1;
([0,2],2) -> 0;
([2],0) -> 2;
([0,2,1],0) -> 0;
([2,0],1) -> 0;
([1,0,3],1) -> 0;

=================================
None
([0,2],2) -> 0;
([],2) -> 0;
([3,3,0],0) -> 3;
([3,1],3) -> 0;
([1,3,1],2) -> 1;
([],3) -> 0;
([2,3,2],2) -> 2;
([0,0],3) -> 0;
([0,0,1],0) -> 0;
([],1) -> 0;
([0,1,3],1) -> 1;
([2,3],1) -> 3;

=================================
None
([2,1],3) -> 0;
([],3) -> 0;
([0,1,3],0) -> 0;
([1,1],3) -> 0;
([1,3,1],3) -> 0;
([1,2],3) -> 0;
([2,1],1) -> 1;
([],2) -> 0;
([3,0,2],0) -> 3;
([0,2],0) -> 0;
([3,3],0) -> 3;
([2],0) -> 2;

=================================
None
([1,2,3],0) -> 1;
([],2) -> 0;
([],0) -> 0;
([2,1,0],0) -> 2;
([0],0) -> 0;
([2],1) -> 0;
([2],0) -> 2;
([2],3) -> 0;
([3,1],0) -> 3;
([],3) -> 0;
([0],1) -> 0;
([1,1,2],2) -> 2;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

9.8364 true

([3,0],3) -> 0;
([0,0],3) -> 0;
([],1) -> 0;
([],2) -> 0;
([3,3,1],1) -> 3;
([],3) -> 0;
([2],2) -> 0;
([0,2,2],1) -> 2;
([2,0],3) -> 0;
([0,2],0) -> 0;
([1],0) -> 1;
([3,0,3],2) -> 3;

=================================
None
([],0) -> 0;
([1,2,3],2) -> 3;
([3,0,0],0) -> 3;
([3,3],2) -> 0;
([0],3) -> 0;
([1,2],2) -> 0;
([],3) -> 0;
([0,2,1],2) -> 1;
([1],1) -> 0;
([1,1],1) -> 1;
([1,0,0],3) -> 0;
([1,0],2) -> 0;

=================================
None
([0,2],1) -> 2;
([],0) -> 0;
([0,3],3) -> 0;
([],1) -> 0;
([1,2,1],1) -> 2;
([3],3) -> 0;
([2],1) -> 0;
([],2) -> 0;
([2],2) -> 0;
([2,0,2],2) -> 2;
([0],2) -> 0;
([3,0,3],0) -> 3;

=================================
None
([3],3) -> 0;
([],2) -> 0;
([2,1,1],1) -> 1;
([0],0) -> 0;
([2,2,2],2) -> 2;
([3,2],3) -> 0;
([1],0) -> 1;
([],3) -> 0;
([3,0,3],2) -> 3;
([1,3],1) -> 3;
([0],2) -> 0;
([0,0],1) -> 0;
([0],3) -> 0;

=================================
None
([0,0],1) -> 0;
([1],0) -> 1;
([1],2) -> 0;
([],0) -> 0;
([1,3],0) -> 1;
([],2) -> 0;
([0],2) -> 0;
([0,2,1],0) -> 0;
([0],1) -> 0;
([2],2) -> 0;
([1,2,1],0) -> 1;
([3],1) -> 0;
([2,2,3],3) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> (match x . 0 with
                  | Nil _ -> x . 1
                  | Cons _ -> Un_Cons (x . 0) . 0)
      | S _ -> 0

0.1178 false

([2,2],0) -> 2;
([1,2,2],0) -> 1;
([0,3,2],0) -> 0;
([1],2) -> 0;
([2],0) -> 2;
([1,0],0) -> 1;
([],1) -> 0;
([1],1) -> 0;
([1,1,0],1) -> 1;
([0],3) -> 0;
([2],3) -> 0;
([2,1],3) -> 0;
([0,0,0],1) -> 0;

=================================
None
([0],3) -> 0;
([1,2,2],0) -> 1;
([0,1],3) -> 0;
([3],3) -> 0;
([],0) -> 0;
([1,2],0) -> 1;
([2],2) -> 0;
([1,0],1) -> 0;
([],1) -> 0;
([2,2],2) -> 0;
([2,3],3) -> 0;
([2,3,3],2) -> 3;
([3],1) -> 0;

=================================
None
([],3) -> 0;
([3,3],3) -> 0;
([1,1,0],2) -> 0;
([3,0],1) -> 0;
([1,2],2) -> 0;
([1,3,2],3) -> 0;
([1],2) -> 0;
([1,2],3) -> 0;
([1,1],2) -> 0;
([1,0,0],3) -> 0;
([1],1) -> 0;
([0],1) -> 0;
([0,2],2) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0002 false

([2],3) -> 0;
([0,3,3],3) -> 0;
([3,3,1],0) -> 3;
([2,1,3],0) -> 2;
([],0) -> 0;
([],2) -> 0;
([3,1,2],2) -> 2;
([0],2) -> 0;
([1,2],0) -> 1;
([3,2,0],0) -> 3;
([2],2) -> 0;
([0,1,0],1) -> 1;
([],1) -> 0;

=================================
None
([3,2],3) -> 0;
([],1) -> 0;
([],2) -> 0;
([2],0) -> 2;
([0],1) -> 0;
([3,1],1) -> 1;
([],3) -> 0;
([2],3) -> 0;
([2,2],3) -> 0;
([0,1],1) -> 1;
([2,1],3) -> 0;
([],0) -> 0;
([1,2,1],1) -> 2;

=================================
None
([0,1,3],1) -> 1;
([],3) -> 0;
([0],3) -> 0;
([1,0,1],3) -> 0;
([3,3],1) -> 3;
([],1) -> 0;
([1],0) -> 1;
([3,3,3],3) -> 0;
([0],1) -> 0;
([2],2) -> 0;
([],0) -> 0;
([0],0) -> 0;
([1],2) -> 0;

=================================
None
([0,2],1) -> 2;
([],3) -> 0;
([0,3],2) -> 0;
([0],1) -> 0;
([2,0,2],1) -> 0;
([0],2) -> 0;
([3,1],3) -> 0;
([0,3,1],0) -> 0;
([3],3) -> 0;
([0,1],0) -> 0;
([3,3,0],0) -> 3;
([0,3],0) -> 0;
([],2) -> 0;

=================================
None
([1],3) -> 0;
([1,3,3],3) -> 0;
([1,1],1) -> 1;
([3,1,1],2) -> 1;
([0,0],0) -> 0;
([3],2) -> 0;
([0,0,3],3) -> 0;
([2,3],3) -> 0;
([3],1) -> 0;
([0],1) -> 0;
([],1) -> 0;
([2,3],2) -> 0;
([3,3,1],2) -> 1;

=================================
None
([],2) -> 0;
([],1) -> 0;
([3,1,1],1) -> 1;
([3],1) -> 0;
([3],2) -> 0;
([2,1],2) -> 0;
([3,3],3) -> 0;
([2,2,3],3) -> 0;
([0,3,0],2) -> 0;
([3,2,3],2) -> 3;
([],0) -> 0;
([1],1) -> 0;
([0,0,3],2) -> 3;
([3,0],3) -> 0;

=================================
None
([2,2,1],0) -> 2;
([1,3],1) -> 3;
([],3) -> 0;
([0,2],2) -> 0;
([0,3,0],3) -> 0;
([0],2) -> 0;
([3,3],2) -> 0;
([0,0,1],3) -> 0;
([],1) -> 0;
([0,2,1],1) -> 2;
([3,3,2],3) -> 0;
([0,1,3],0) -> 0;
([],2) -> 0;
([2],0) -> 2;

=================================
None
([],3) -> 0;
([3],2) -> 0;
([0,2,0],0) -> 0;
([3,3,1],0) -> 3;
([],2) -> 0;
([3,1],3) -> 0;
([],1) -> 0;
([],0) -> 0;
([3],3) -> 0;
([3,2,0],2) -> 0;
([3,0,1],1) -> 0;
([2],3) -> 0;
([1,1],0) -> 1;
([0,0],1) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> (match x . 0 with
                  | Nil _ -> x . 1
                  | Cons _ -> Un_Cons (x . 0) . 0)
      | S _ -> 0

0.6734 false

([3,0,0],3) -> 0;
([0,0],2) -> 0;
([2],0) -> 2;
([0,3],0) -> 0;
([],1) -> 0;
([2],2) -> 0;
([],0) -> 0;
([0,3,1],2) -> 1;
([1],1) -> 0;
([1,2,2],2) -> 2;
([],2) -> 0;
([2,2,0],0) -> 2;
([3],3) -> 0;
([3],2) -> 0;

=================================
None
([],3) -> 0;
([0,2],3) -> 0;
([1],1) -> 0;
([3,3],0) -> 3;
([3,1,3],1) -> 1;
([0],3) -> 0;
([],1) -> 0;
([1,1],1) -> 1;
([0],2) -> 0;
([0],0) -> 0;
([1,3],3) -> 0;
([2,2],3) -> 0;
([0,2,2],0) -> 0;
([3],1) -> 0;

=================================
None
([],0) -> 0;
([2],3) -> 0;
([2,3],1) -> 3;
([2],1) -> 0;
([],2) -> 0;
([0,2],1) -> 2;
([1,0],2) -> 0;
([2,1,0],0) -> 2;
([],3) -> 0;
([2,2,2],2) -> 2;
([3,3],3) -> 0;
([1,0,1],0) -> 1;
([0,1,0],3) -> 0;
([3],3) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

68.9993 true

([2,1,3],1) -> 1;
([2,0],1) -> 0;
([],3) -> 0;
([1,0],0) -> 1;
([2,2,2],2) -> 2;
([1,2],0) -> 1;
([3],0) -> 3;
([2,2,1],1) -> 2;
([3,2,2],3) -> 0;
([],1) -> 0;
([1,0,1],3) -> 0;
([],0) -> 0;
([2,2],1) -> 2;
([2],2) -> 0;

=================================
None
([2,3],1) -> 3;
([0,1,1],0) -> 0;
([2,1,3],0) -> 2;
([],3) -> 0;
([],2) -> 0;
([3],1) -> 0;
([3],2) -> 0;
([0],3) -> 0;
([0,2,2],3) -> 0;
([0,3,3],1) -> 3;
([2],0) -> 2;
([1,1],0) -> 1;
([1],0) -> 1;
([3,0],0) -> 3;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

32.8640 true

([2],2) -> 0;
([2,0,2],1) -> 0;
([3,1],2) -> 0;
([0,1],0) -> 0;
([1,2,2],3) -> 0;
([2],1) -> 0;
([],3) -> 0;
([],2) -> 0;
([1],1) -> 0;
([1,2],2) -> 0;
([3,0],0) -> 3;
([],1) -> 0;
([],0) -> 0;
([0],2) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> 0)

0.5466 false

([3,1,0],3) -> 0;
([1],1) -> 0;
([0],3) -> 0;
([1,1,3],0) -> 1;
([0,2,2],1) -> 2;
([1,0,3],1) -> 0;
([2,1,1],0) -> 2;
([2],2) -> 0;
([0],2) -> 0;
([],3) -> 0;
([],0) -> 0;
([],1) -> 0;
([1,3],3) -> 0;
([3],2) -> 0;

=================================
None
([0],2) -> 0;
([],0) -> 0;
([3,3],0) -> 3;
([0],0) -> 0;
([],1) -> 0;
([],3) -> 0;
([3],1) -> 0;
([0,3,1],1) -> 3;
([3,0,3],1) -> 0;
([0,0],2) -> 0;
([3,1],0) -> 3;
([],2) -> 0;
([1],2) -> 0;
([2,2,1],1) -> 2;
([0],1) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, 0))

3.1065 false

([1],2) -> 0;
([0,2,1],1) -> 2;
([3],0) -> 3;
([3,2,2],3) -> 0;
([2,2,2],1) -> 2;
([],1) -> 0;
([],3) -> 0;
([],0) -> 0;
([3,3],0) -> 3;
([0,3],3) -> 0;
([0],1) -> 0;
([2],2) -> 0;
([3],2) -> 0;
([0,2,2],1) -> 2;
([],2) -> 0;

=================================
None
([3,2,3],2) -> 3;
([3],1) -> 0;
([0],3) -> 0;
([2],2) -> 0;
([0],0) -> 0;
([],0) -> 0;
([],3) -> 0;
([0,1,2],2) -> 2;
([3,1],2) -> 0;
([],2) -> 0;
([2,2,0],1) -> 2;
([2,1,0],0) -> 2;
([1,2],0) -> 1;
([],1) -> 0;
([0,2],3) -> 0;

=================================
None
([],1) -> 0;
([0,3],1) -> 3;
([1],3) -> 0;
([0,3],0) -> 0;
([1,3],3) -> 0;
([1,0],0) -> 1;
([3],2) -> 0;
([0],1) -> 0;
([2,0],1) -> 0;
([2,1],2) -> 0;
([3,1,2],1) -> 1;
([1],1) -> 0;
([],2) -> 0;
([2,0,1],3) -> 0;
([],0) -> 0;

=================================
None
([],2) -> 0;
([2],1) -> 0;
([0,1],0) -> 0;
([1,0,3],1) -> 0;
([1,3],1) -> 3;
([2,1,2],3) -> 0;
([0,0,1],0) -> 0;
([2],0) -> 2;
([1],3) -> 0;
([1],1) -> 0;
([3],2) -> 0;
([0,3],0) -> 0;
([],1) -> 0;
([],0) -> 0;
([0,3],3) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.7674 true

([],0) -> 0;
([1,2,2],2) -> 2;
([0],0) -> 0;
([2,2],2) -> 0;
([2],2) -> 0;
([2],0) -> 2;
([1,0,1],0) -> 1;
([3],2) -> 0;
([2,0],1) -> 0;
([3,1,3],2) -> 3;
([3,1,1],3) -> 0;
([1,1],3) -> 0;
([],3) -> 0;
([],1) -> 0;
([1,2,1],0) -> 1;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

76.3822 true

([2,0,0],1) -> 0;
([0,1,2],3) -> 0;
([],2) -> 0;
([1,1],1) -> 1;
([2],1) -> 0;
([0],0) -> 0;
([1,0,1],3) -> 0;
([2,3,3],0) -> 2;
([3,0,0],0) -> 3;
([1],2) -> 0;
([],1) -> 0;
([3],1) -> 0;
([3,2],3) -> 0;
([1,2],3) -> 0;
([3],2) -> 0;

=================================
None
([],2) -> 0;
([0,3,0],0) -> 0;
([0],3) -> 0;
([3],2) -> 0;
([],1) -> 0;
([1,0],2) -> 0;
([],3) -> 0;
([1,1],2) -> 0;
([3,3,3],3) -> 0;
([3],1) -> 0;
([0,0],2) -> 0;
([],0) -> 0;
([0,0],1) -> 0;
([1],3) -> 0;
([2],2) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([3,1],2) -> 0;
([2],2) -> 0;
([3,0,0],2) -> 0;
([],2) -> 0;
([1,0],3) -> 0;
([3,3],1) -> 3;
([],1) -> 0;
([3,3],3) -> 0;
([0],0) -> 0;
([3],3) -> 0;
([],0) -> 0;
([2,3,1],1) -> 3;
([],3) -> 0;
([3,0],0) -> 3;
([1],3) -> 0;

=================================
None
([0,0,1],3) -> 0;
([1,0,2],1) -> 0;
([],0) -> 0;
([1],3) -> 0;
([2,0],3) -> 0;
([1,0],3) -> 0;
([3,0,1],0) -> 3;
([1],1) -> 0;
([3],0) -> 3;
([2,2],1) -> 2;
([3],1) -> 0;
([1,0],0) -> 1;
([0,0,1],2) -> 1;
([],1) -> 0;
([1,2,2],3) -> 0;

=================================
None
([0],3) -> 0;
([3,0,3],0) -> 3;
([0,0,2],2) -> 2;
([1,2,0],1) -> 2;
([2,0],3) -> 0;
([],1) -> 0;
([2,3,3],3) -> 0;
([],0) -> 0;
([0,2],1) -> 2;
([2,1,0],0) -> 2;
([2,1],2) -> 0;
([3,2,3],1) -> 2;
([0,3,3],0) -> 0;
([1,1,0],0) -> 1;
([1,3],2) -> 0;
([],2) -> 0;

=================================
None
([3,2,1],3) -> 0;
([1,2],2) -> 0;
([0,3,1],3) -> 0;
([2,1],2) -> 0;
([0,2,0],0) -> 0;
([],0) -> 0;
([1],0) -> 1;
([1],2) -> 0;
([3,3],2) -> 0;
([],2) -> 0;
([0,3],2) -> 0;
([0,3,3],2) -> 3;
([],3) -> 0;
([3,2],2) -> 0;
([1,2,0],1) -> 2;
([2,2],3) -> 0;

=================================
None
([1],3) -> 0;
([2],0) -> 2;
([3],2) -> 0;
([2,1,3],3) -> 0;
([1,0],3) -> 0;
([1],1) -> 0;
([2,3,2],2) -> 2;
([],0) -> 0;
([3],3) -> 0;
([],3) -> 0;
([],1) -> 0;
([1,3],1) -> 3;
([3,1,0],3) -> 0;
([1,3,2],0) -> 1;
([0],0) -> 0;
([1,2,1],2) -> 1;

=================================
None
([2],0) -> 2;
([1],1) -> 0;
([3,2,3],1) -> 2;
([0,1,3],3) -> 0;
([1],2) -> 0;
([],3) -> 0;
([],1) -> 0;
([0],3) -> 0;
([3],0) -> 3;
([3,0,0],3) -> 0;
([3,0,3],0) -> 3;
([2,3],1) -> 3;
([0],1) -> 0;
([2,1],1) -> 1;
([3],3) -> 0;
([1,0],2) -> 0;

=================================
None
([0],2) -> 0;
([3],1) -> 0;
([3,0,3],2) -> 3;
([0],3) -> 0;
([0,1,0],1) -> 1;
([3,3],3) -> 0;
([1,3,1],3) -> 0;
([],3) -> 0;
([2,1],2) -> 0;
([3],0) -> 3;
([3,2],3) -> 0;
([1,1,0],0) -> 1;
([3,1],1) -> 1;
([3],3) -> 0;
([3,2],2) -> 0;
([2],1) -> 0;

=================================
None
([1,3],3) -> 0;
([],0) -> 0;
([1,1,3],2) -> 3;
([3,3],2) -> 0;
([0,2,1],3) -> 0;
([0,0,1],0) -> 0;
([3,2],1) -> 2;
([3,3],3) -> 0;
([3],1) -> 0;
([0],3) -> 0;
([2,2],1) -> 2;
([0,0],2) -> 0;
([0],0) -> 0;
([],3) -> 0;
([1,1],0) -> 1;
([],2) -> 0;

=================================
None
([0],2) -> 0;
([2],1) -> 0;
([0,3],1) -> 3;
([2],2) -> 0;
([],1) -> 0;
([0,0],3) -> 0;
([1,1,0],1) -> 1;
([0,3],0) -> 0;
([1],1) -> 0;
([0,1],0) -> 0;
([2,3],0) -> 2;
([],0) -> 0;
([],2) -> 0;
([2,2],1) -> 2;
([3,3,1],3) -> 0;
([3],0) -> 3;

=================================
None
([1],2) -> 0;
([],2) -> 0;
([0,2,2],1) -> 2;
([3,0],3) -> 0;
([0,3],3) -> 0;
([3,1,1],0) -> 3;
([],0) -> 0;
([1],0) -> 1;
([1,3],2) -> 0;
([2],1) -> 0;
([3],3) -> 0;
([1],1) -> 0;
([3],1) -> 0;
([0,2],3) -> 0;
([1,3,2],3) -> 0;
([0],3) -> 0;

=================================
None
([0,1,2],2) -> 2;
([1,2,3],0) -> 1;
([2],0) -> 2;
([2,0,3],1) -> 0;
([],0) -> 0;
([0,0,3],1) -> 0;
([2,0,1],1) -> 0;
([],2) -> 0;
([0,0,0],3) -> 0;
([0,2,1],0) -> 0;
([1,1,3],2) -> 3;
([1,0],0) -> 1;
([0,2,0],1) -> 2;
([1],3) -> 0;
([0,3],3) -> 0;
([2,0,1],2) -> 1;

=================================
None
([],2) -> 0;
([],1) -> 0;
([3,1,1],2) -> 1;
([0,2,3],3) -> 0;
([1,2,0],0) -> 1;
([0],1) -> 0;
([2,0],2) -> 0;
([],0) -> 0;
([2,3,3],0) -> 2;
([3,2,1],0) -> 3;
([3,2],2) -> 0;
([1],1) -> 0;
([1],3) -> 0;
([1,1,3],0) -> 1;
([0,0],3) -> 0;
([3,0],3) -> 0;

=================================
None
([1],3) -> 0;
([0],2) -> 0;
([0,0],2) -> 0;
([1,2,1],1) -> 2;
([0,3],2) -> 0;
([0,2,0],3) -> 0;
([],2) -> 0;
([2,3],3) -> 0;
([0],1) -> 0;
([1,1,1],1) -> 1;
([2],2) -> 0;
([3,1,0],2) -> 0;
([0],0) -> 0;
([],0) -> 0;
([1,3,2],3) -> 0;
([2],1) -> 0;
([3],1) -> 0;

=================================
None
([2,3],1) -> 3;
([3],3) -> 0;
([1],3) -> 0;
([1,3,3],1) -> 3;
([0,3,3],2) -> 3;
([2],0) -> 2;
([3,0],0) -> 3;
([],3) -> 0;
([2],1) -> 0;
([],2) -> 0;
([2,3],2) -> 0;
([1,3,0],0) -> 1;
([1,0],3) -> 0;
([2,1,2],0) -> 2;
([1,1],1) -> 1;
([0,3],2) -> 0;
([3,2],1) -> 2;

=================================
None
([],2) -> 0;
([3,2,2],3) -> 0;
([],3) -> 0;
([0],1) -> 0;
([1,2,1],0) -> 1;
([0,1],2) -> 0;
([3,2],0) -> 3;
([],0) -> 0;
([0,3,3],3) -> 0;
([2,2],1) -> 2;
([0],3) -> 0;
([2,2,3],2) -> 3;
([0,1,0],0) -> 0;
([3,2,2],1) -> 2;
([2],1) -> 0;
([1,3,2],2) -> 2;
([0,3],0) -> 0;

=================================
None
([3],3) -> 0;
([],2) -> 0;
([2,3],0) -> 2;
([1,3],1) -> 3;
([0,0],3) -> 0;
([2,3,2],0) -> 2;
([1],1) -> 0;
([],1) -> 0;
([3,3],1) -> 3;
([],0) -> 0;
([0,1],1) -> 1;
([1,1],1) -> 1;
([2],0) -> 2;
([0,3,2],1) -> 3;
([2,1,0],2) -> 0;
([2],1) -> 0;
([0],1) -> 0;

=================================
None
([],2) -> 0;
([2],0) -> 2;
([2,0,0],2) -> 0;
([1,1,1],0) -> 1;
([3],0) -> 3;
([0,0,3],2) -> 3;
([1,2,2],3) -> 0;
([1],1) -> 0;
([3,2,2],0) -> 3;
([],0) -> 0;
([],3) -> 0;
([3],2) -> 0;
([0],3) -> 0;
([1,1],2) -> 0;
([],1) -> 0;
([0,1],3) -> 0;
([0,0],1) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

87.4846 true

([0,2,3],3) -> 0;
([0],1) -> 0;
([2,0,3],2) -> 3;
([0,1,0],2) -> 0;
([3],2) -> 0;
([1,2,3],0) -> 1;
([],2) -> 0;
([],0) -> 0;
([1,0,3],1) -> 0;
([0,3,2],0) -> 0;
([0],2) -> 0;
([2,1],0) -> 2;
([],3) -> 0;
([2,1],3) -> 0;
([0,3],3) -> 0;
([3,3],0) -> 3;
([2,2,1],2) -> 1;

=================================
None
([],0) -> 0;
([1,3,3],2) -> 3;
([],3) -> 0;
([1,2,3],3) -> 0;
([3,3],0) -> 3;
([2],2) -> 0;
([1,3],0) -> 1;
([],2) -> 0;
([1,3],3) -> 0;
([1,2,0],3) -> 0;
([3,3],3) -> 0;
([2,3,0],3) -> 0;
([2,2],3) -> 0;
([3,3,3],2) -> 3;
([3,2],0) -> 3;
([0,1],1) -> 1;
([3,2],1) -> 2;

=================================
None
([2],0) -> 2;
([2],2) -> 0;
([0,0,0],2) -> 0;
([],2) -> 0;
([0,3],2) -> 0;
([2,3],1) -> 3;
([],1) -> 0;
([],0) -> 0;
([2,0],0) -> 2;
([],3) -> 0;
([1,0],2) -> 0;
([0,2],3) -> 0;
([2,1,1],2) -> 1;
([3],0) -> 3;
([2,3],2) -> 0;
([3,2],0) -> 3;
([2,2,2],1) -> 2;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

2.6667 true

([],2) -> 0;
([0],1) -> 0;
([0,3,2],1) -> 3;
([3,0],2) -> 0;
([1],0) -> 1;
([3],1) -> 0;
([2,1,0],1) -> 1;
([2],1) -> 0;
([],0) -> 0;
([1,0,2],2) -> 2;
([],1) -> 0;
([2,2],1) -> 2;
([1],2) -> 0;
([0,2],2) -> 0;
([2,3,1],1) -> 3;
([1],1) -> 0;
([2,0,1],1) -> 0;

=================================
None
([0],1) -> 0;
([0,3],2) -> 0;
([1,2,3],3) -> 0;
([],0) -> 0;
([3,0,2],3) -> 0;
([1],3) -> 0;
([2,3,0],2) -> 0;
([3,0],1) -> 0;
([2,1,3],3) -> 0;
([3],3) -> 0;
([],1) -> 0;
([3,0],3) -> 0;
([1],0) -> 1;
([1,2,0],3) -> 0;
([1,1,0],2) -> 0;
([3,1,0],0) -> 3;
([2,0],3) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> 0)

1.0098 false

([0,2,3],1) -> 2;
([1,0],3) -> 0;
([],3) -> 0;
([],1) -> 0;
([3,2,2],0) -> 3;
([1,0,0],0) -> 1;
([3,1],2) -> 0;
([],0) -> 0;
([0],1) -> 0;
([3,0],2) -> 0;
([0,2,1],0) -> 0;
([3],3) -> 0;
([0,0],1) -> 0;
([1,1],1) -> 1;
([],2) -> 0;
([3,1],1) -> 1;
([1,2,0],3) -> 0;
([3,1,2],2) -> 2;

=================================
None
([],0) -> 0;
([1,2,3],0) -> 1;
([0,2],1) -> 2;
([2],3) -> 0;
([1,1],2) -> 0;
([0,1],0) -> 0;
([3,3],1) -> 3;
([2],2) -> 0;
([2],0) -> 2;
([1,1],0) -> 1;
([1,3,1],2) -> 1;
([],1) -> 0;
([0],2) -> 0;
([3,3],2) -> 0;
([2,1,3],0) -> 2;
([3,3,2],0) -> 3;
([0],3) -> 0;
([],2) -> 0;

=================================
None
([],3) -> 0;
([1,0],0) -> 1;
([0,3],2) -> 0;
([0],3) -> 0;
([2,3,1],2) -> 1;
([],1) -> 0;
([1],0) -> 1;
([1],2) -> 0;
([2,1],1) -> 1;
([1,1,3],3) -> 0;
([1,2,1],0) -> 1;
([0],0) -> 0;
([0],2) -> 0;
([0,0,2],0) -> 0;
([2,3,3],1) -> 3;
([3],0) -> 3;
([3,0],1) -> 0;
([2],1) -> 0;

=================================
None
([0],3) -> 0;
([2,2,0],2) -> 0;
([1],1) -> 0;
([0,1],0) -> 0;
([2],3) -> 0;
([3],1) -> 0;
([],3) -> 0;
([2,2,3],3) -> 0;
([],1) -> 0;
([3,3],0) -> 3;
([],0) -> 0;
([0,3,1],2) -> 1;
([3,0,1],3) -> 0;
([1,1,3],0) -> 1;
([2],0) -> 2;
([0,3,3],0) -> 0;
([3,1],3) -> 0;
([3,0],1) -> 0;

=================================
None
([],3) -> 0;
([],0) -> 0;
([1,0],3) -> 0;
([1,2],2) -> 0;
([3],3) -> 0;
([1,3],2) -> 0;
([],2) -> 0;
([1,1],1) -> 1;
([0,2],1) -> 2;
([0,3,2],0) -> 0;
([3,1,2],2) -> 2;
([2],2) -> 0;
([2,2,3],0) -> 2;
([1,2],1) -> 2;
([2],0) -> 2;
([],1) -> 0;
([2,0,1],2) -> 1;
([2,3],2) -> 0;

=================================
None
([],3) -> 0;
([2,2],1) -> 2;
([1],2) -> 0;
([],0) -> 0;
([0,1,3],2) -> 3;
([1,1],1) -> 1;
([3,2,1],1) -> 2;
([0,0],2) -> 0;
([2],0) -> 2;
([3,0,1],2) -> 1;
([3],1) -> 0;
([1,3],3) -> 0;
([1,0,2],1) -> 0;
([3],0) -> 3;
([1],0) -> 1;
([3,2],0) -> 3;
([0,1],1) -> 1;
([0],1) -> 0;

=================================
None
([],1) -> 0;
([3],1) -> 0;
([0,1],2) -> 0;
([1,0,2],0) -> 1;
([],2) -> 0;
([0,1,1],3) -> 0;
([1],2) -> 0;
([],0) -> 0;
([1,2],3) -> 0;
([1,2,3],1) -> 2;
([0,1],3) -> 0;
([2,1],3) -> 0;
([3,2,2],1) -> 2;
([],3) -> 0;
([1,2],2) -> 0;
([0,2],3) -> 0;
([2,3,3],0) -> 2;
([3,1,0],3) -> 0;

=================================
None
([],2) -> 0;
([2,0],2) -> 0;
([],3) -> 0;
([3],3) -> 0;
([1],0) -> 1;
([1,1],2) -> 0;
([],0) -> 0;
([0,3],0) -> 0;
([2,0,3],1) -> 0;
([0,3],2) -> 0;
([1],1) -> 0;
([2,3],1) -> 3;
([1,3],2) -> 0;
([0],2) -> 0;
([1,0,3],1) -> 0;
([0,0,2],1) -> 0;
([2,3,3],1) -> 3;
([],1) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

91.5820 true

([1,1],3) -> 0;
([2,2,1],3) -> 0;
([3],2) -> 0;
([1,2],3) -> 0;
([2,1],3) -> 0;
([0,0,3],3) -> 0;
([3,3],0) -> 3;
([],0) -> 0;
([3,2],3) -> 0;
([3,2],0) -> 3;
([0,3],2) -> 0;
([2,0],0) -> 2;
([0,2,1],3) -> 0;
([3],1) -> 0;
([2,3],3) -> 0;
([3,2],1) -> 2;
([3,1,3],3) -> 0;
([],1) -> 0;

=================================
None
([1,0,1],1) -> 0;
([1,0],2) -> 0;
([],2) -> 0;
([],0) -> 0;
([],1) -> 0;
([2,2,2],2) -> 2;
([3],0) -> 3;
([],3) -> 0;
([2,1],2) -> 0;
([2,1],1) -> 1;
([1],1) -> 0;
([3,0],3) -> 0;
([1],3) -> 0;
([0],2) -> 0;
([0,1],0) -> 0;
([3,1,2],1) -> 1;
([3,1,0],2) -> 0;
([2,3],3) -> 0;

=================================
None
([1,0],3) -> 0;
([2,1],2) -> 0;
([3,3],0) -> 3;
([3,1,3],3) -> 0;
([3,0,1],0) -> 3;
([1],3) -> 0;
([1,3],2) -> 0;
([],2) -> 0;
([1],1) -> 0;
([2,1,1],3) -> 0;
([3,3],2) -> 0;
([0,1,3],1) -> 1;
([1,1,3],3) -> 0;
([1,3],0) -> 1;
([3,0],1) -> 0;
([1,1],3) -> 0;
([3],0) -> 3;
([0,3,1],1) -> 3;
([2,0],1) -> 0;

=================================
None
([2,2,1],1) -> 2;
([3],2) -> 0;
([0,0],3) -> 0;
([],3) -> 0;
([1,1],3) -> 0;
([1,1,3],1) -> 1;
([1,1],1) -> 1;
([],0) -> 0;
([3,3,1],2) -> 1;
([0],3) -> 0;
([],1) -> 0;
([2],3) -> 0;
([2],1) -> 0;
([1],2) -> 0;
([0],1) -> 0;
([2,0,3],0) -> 2;
([2,3],0) -> 2;
([3,3,0],2) -> 0;
([3,3,0],0) -> 3;

=================================
None
([],0) -> 0;
([1,1],3) -> 0;
([1,0,1],3) -> 0;
([1,0],0) -> 1;
([3,2],0) -> 3;
([],3) -> 0;
([],2) -> 0;
([2],2) -> 0;
([3,2,1],1) -> 2;
([2,2],0) -> 2;
([0],3) -> 0;
([0,1,2],3) -> 0;
([1],3) -> 0;
([3,3,2],3) -> 0;
([0,1],3) -> 0;
([],1) -> 0;
([2,0],2) -> 0;
([3,0],3) -> 0;
([2,2,1],1) -> 2;

=================================
None
([0],1) -> 0;
([2,2,0],1) -> 2;
([],3) -> 0;
([0],2) -> 0;
([1,3,3],2) -> 3;
([2],3) -> 0;
([2,2,2],2) -> 2;
([1,0],2) -> 0;
([2,2],3) -> 0;
([3,3],3) -> 0;
([3,3],0) -> 3;
([1,2,0],1) -> 2;
([1,0,3],0) -> 1;
([1,3,0],0) -> 1;
([],2) -> 0;
([0,2],0) -> 0;
([3,3,1],2) -> 1;
([0,2,0],0) -> 0;
([1],3) -> 0;

=================================
None
([3,2,0],2) -> 0;
([1,2,3],3) -> 0;
([3,3,3],3) -> 0;
([2,1],0) -> 2;
([2],0) -> 2;
([2],1) -> 0;
([1],1) -> 0;
([1,0],2) -> 0;
([2,0],1) -> 0;
([1,2],1) -> 2;
([0,0],2) -> 0;
([],1) -> 0;
([0,1],0) -> 0;
([],2) -> 0;
([3],0) -> 3;
([2,2,3],2) -> 3;
([3],1) -> 0;
([0,3,0],3) -> 0;
([3,0,0],0) -> 3;

=================================
None
([],2) -> 0;
([0,2,2],2) -> 2;
([2],0) -> 2;
([3],1) -> 0;
([0,2],3) -> 0;
([1],0) -> 1;
([],0) -> 0;
([2,0,1],3) -> 0;
([1,1],0) -> 1;
([1,2,0],2) -> 0;
([1,2,0],1) -> 2;
([2],1) -> 0;
([1,0],3) -> 0;
([0,0,3],2) -> 3;
([3,3],2) -> 0;
([2,3],1) -> 3;
([3],0) -> 3;
([3,2],2) -> 0;
([2,1],3) -> 0;

=================================
None
([2,2,1],2) -> 1;
([],1) -> 0;
([3,2,3],2) -> 3;
([2],2) -> 0;
([3,0],0) -> 3;
([],0) -> 0;
([2],0) -> 2;
([2,3],2) -> 0;
([3,0],1) -> 0;
([],3) -> 0;
([0,1],3) -> 0;
([1],3) -> 0;
([1,3,3],2) -> 3;
([2,3],1) -> 3;
([1,0],0) -> 1;
([1,0],1) -> 0;
([3,3],2) -> 0;
([0],2) -> 0;
([1,3],0) -> 1;

=================================
None
([3,2],2) -> 0;
([0,3],3) -> 0;
([1,3],1) -> 3;
([0,1,2],2) -> 2;
([0,2,1],3) -> 0;
([3],1) -> 0;
([2],0) -> 2;
([],2) -> 0;
([],3) -> 0;
([0],3) -> 0;
([0,2],3) -> 0;
([0],0) -> 0;
([3,0],2) -> 0;
([2],2) -> 0;
([1],0) -> 1;
([1],2) -> 0;
([0,0],3) -> 0;
([2,3],2) -> 0;
([],0) -> 0;

=================================
None
([],3) -> 0;
([2],2) -> 0;
([2],0) -> 2;
([],1) -> 0;
([],0) -> 0;
([],2) -> 0;
([1,0,3],0) -> 1;
([0,2,2],1) -> 2;
([0,2,0],2) -> 0;
([0,2],2) -> 0;
([3,0],2) -> 0;
([3,3,0],3) -> 0;
([2,2,0],2) -> 0;
([2,0,1],2) -> 1;
([0,1,2],0) -> 0;
([3,0,1],0) -> 3;
([1,2],1) -> 2;
([1,2,2],3) -> 0;
([2,3],0) -> 2;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

9.3890 true

([2,0,0],0) -> 2;
([0,0],2) -> 0;
([3,2],1) -> 2;
([3,0,1],3) -> 0;
([],0) -> 0;
([1,1,3],1) -> 1;
([3,0,3],0) -> 3;
([0],2) -> 0;
([3,0,0],2) -> 0;
([1],0) -> 1;
([],2) -> 0;
([3,2,3],2) -> 3;
([1,2],1) -> 2;
([3,3],3) -> 0;
([3,3,2],2) -> 2;
([1],1) -> 0;
([2],2) -> 0;
([0,0,3],0) -> 0;
([1,1],1) -> 1;

=================================
None
([3],2) -> 0;
([3],1) -> 0;
([3,2],3) -> 0;
([],2) -> 0;
([2],1) -> 0;
([],3) -> 0;
([0,2,0],0) -> 0;
([3,1,1],2) -> 1;
([0],2) -> 0;
([1,0,3],1) -> 0;
([2,0,0],2) -> 0;
([],1) -> 0;
([0,3],2) -> 0;
([1],3) -> 0;
([0,0],1) -> 0;
([3,1,0],2) -> 0;
([1,0,1],1) -> 0;
([1,2],1) -> 2;
([],0) -> 0;
([1],0) -> 1;

=================================
None
([0,3,1],2) -> 1;
([0,3],1) -> 3;
([0,2],1) -> 2;
([1,3,1],1) -> 3;
([],1) -> 0;
([2],2) -> 0;
([0,3,2],3) -> 0;
([2],3) -> 0;
([1,1],1) -> 1;
([3],3) -> 0;
([1],3) -> 0;
([0,3],3) -> 0;
([2,0],2) -> 0;
([1,3],3) -> 0;
([],2) -> 0;
([2,1],1) -> 1;
([0,3,2],2) -> 2;
([2,3],3) -> 0;
([3],2) -> 0;
([2,2,2],2) -> 2;

=================================
None
([2,3,2],0) -> 2;
([],1) -> 0;
([2],1) -> 0;
([1,0],0) -> 1;
([1,1],2) -> 0;
([1,0,3],1) -> 0;
([3],3) -> 0;
([1,1,3],1) -> 1;
([],0) -> 0;
([2,0],3) -> 0;
([],3) -> 0;
([1],3) -> 0;
([0,1,0],3) -> 0;
([0,3],1) -> 3;
([],2) -> 0;
([0,1],0) -> 0;
([1,2],1) -> 2;
([0,0,3],3) -> 0;
([0],3) -> 0;
([2,1,0],2) -> 0;

=================================
None
([],2) -> 0;
([2,0,1],1) -> 0;
([3],0) -> 3;
([1,0,3],2) -> 3;
([],1) -> 0;
([2,2],1) -> 2;
([3,3],3) -> 0;
([0],3) -> 0;
([0,2],3) -> 0;
([3],1) -> 0;
([],3) -> 0;
([],0) -> 0;
([3,1,3],0) -> 3;
([0,1],0) -> 0;
([3,1],3) -> 0;
([2,1,3],1) -> 1;
([0],0) -> 0;
([1,0,0],0) -> 1;
([3,2],0) -> 3;
([3,1],1) -> 1;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

23.4530 true

([0],1) -> 0;
([],1) -> 0;
([3,0,3],1) -> 0;
([],2) -> 0;
([2],2) -> 0;
([1,0],0) -> 1;
([],3) -> 0;
([3,1],2) -> 0;
([3,1],3) -> 0;
([2,0],1) -> 0;
([1,3],0) -> 1;
([1,2],0) -> 1;
([3,0],1) -> 0;
([3],0) -> 3;
([2,2,2],3) -> 0;
([2],3) -> 0;
([1,2],1) -> 2;
([2,2],0) -> 2;
([0,3],1) -> 3;
([3,3],1) -> 3;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

72.6321 true

([],2) -> 0;
([3,1,3],2) -> 3;
([2,3,0],0) -> 2;
([],0) -> 0;
([1,1],0) -> 1;
([2],2) -> 0;
([3],3) -> 0;
([1],3) -> 0;
([1],1) -> 0;
([0],3) -> 0;
([0,0,3],2) -> 3;
([2,0],3) -> 0;
([1,2],0) -> 1;
([0],2) -> 0;
([3],1) -> 0;
([3,2],2) -> 0;
([],1) -> 0;
([3,0],3) -> 0;
([2,2],3) -> 0;
([2],0) -> 2;

=================================
None
([3,2,2],0) -> 3;
([2,0,2],0) -> 2;
([0,3],1) -> 3;
([1],0) -> 1;
([0],2) -> 0;
([],0) -> 0;
([0],3) -> 0;
([1,2,0],0) -> 1;
([],2) -> 0;
([3,2,2],2) -> 2;
([3,0,1],0) -> 3;
([0,1],1) -> 1;
([],3) -> 0;
([],1) -> 0;
([2],1) -> 0;
([0,0],0) -> 0;
([1,2],0) -> 1;
([2,1,2],1) -> 1;
([0,0,3],2) -> 3;
([3,1],3) -> 0;

=================================
None
([1],2) -> 0;
([0,2],1) -> 2;
([0,2],2) -> 0;
([1,3,2],1) -> 3;
([1],1) -> 0;
([2],1) -> 0;
([2],0) -> 2;
([],2) -> 0;
([0,0,1],1) -> 0;
([1,3,0],1) -> 3;
([0,1],3) -> 0;
([0,2,0],3) -> 0;
([],3) -> 0;
([1,0,1],2) -> 1;
([1,2],0) -> 1;
([1],0) -> 1;
([0,0,3],3) -> 0;
([0,0],2) -> 0;
([2,1],0) -> 2;
([0,1],0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

91.2630 true

([0,2,1],2) -> 1;
([0,2,0],0) -> 0;
([],0) -> 0;
([0],0) -> 0;
([],2) -> 0;
([3],3) -> 0;
([0,0],3) -> 0;
([1,3,3],2) -> 3;
([2,3],2) -> 0;
([1,0,1],0) -> 1;
([3,3],2) -> 0;
([0],2) -> 0;
([2,2,3],0) -> 2;
([2],3) -> 0;
([2,2],1) -> 2;
([2,3],1) -> 3;
([2,0],3) -> 0;
([],3) -> 0;
([],1) -> 0;
([0,1,3],3) -> 0;

=================================
None
([2,2,1],3) -> 0;
([2,0,0],1) -> 0;
([2],0) -> 2;
([3,1],2) -> 0;
([1,0,2],2) -> 2;
([3],2) -> 0;
([3],3) -> 0;
([1],2) -> 0;
([3,0],0) -> 3;
([2],2) -> 0;
([0,0,3],2) -> 3;
([],1) -> 0;
([],0) -> 0;
([3,2],2) -> 0;
([],2) -> 0;
([2,1],3) -> 0;
([2,0],3) -> 0;
([3,2],0) -> 3;
([3,2],3) -> 0;
([0,2,1],3) -> 0;

=================================
None
