list_snoc
([],0) -> [0];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 -> ( Nil )
  
0.0003 false

([2,1],2) -> [2,1,2];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0077 true

([1,2],2) -> [1,2,2];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0079 true

([3],0) -> [3,0];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0011 true

([1,1,1],1) -> [1,1,1,1];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0075 true

([],0) -> [0];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 -> ( Nil )
  
0.0003 false

([2,2,0],0) -> [2,2,0,0];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0030 true

([],0) -> [0];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 -> ( Nil )
  
0.0004 false

([1],0) -> [1,0];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0010 true

([2,1,0],3) -> [2,1,0,3];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0178 true

([3,0],0) -> [3,0,0];
([3,2,2],1) -> [3,2,2,1];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0090 true

([1,0],3) -> [1,0,3];
([],3) -> [3];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0124 true

([],0) -> [0];
([0,0],1) -> [0,0,1];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0037 true

([3],1) -> [3,1];
([0],3) -> [0,3];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0078 true

([1,2],2) -> [1,2,2];
([0],2) -> [0,2];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0110 true

([1],3) -> [1,3];
([],1) -> [1];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0052 true

([0],0) -> [0,0];
([2,1,0],2) -> [2,1,0,2];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0113 true

([2,0],2) -> [2,0,2];
([1,2,0],3) -> [1,2,0,3];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0247 true

([2,0,3],3) -> [2,0,3,3];
([0,2],2) -> [0,2,2];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0272 true

([2,3,2],2) -> [2,3,2,2];
([],3) -> [3];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0150 true

([3,3],1) -> [3,3,1];
([0],2) -> [0,2];
([1,3,1],3) -> [1,3,1,3];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0392 true

([0,1],3) -> [0,1,3];
([3,2],0) -> [3,2,0];
([],1) -> [1];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0132 true

([2,3],3) -> [2,3,3];
([3,0,1],1) -> [3,0,1,1];
([0,3],1) -> [0,3,1];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0361 true

([0,3],3) -> [0,3,3];
([0],1) -> [0,1];
([],2) -> [2];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0174 true

([],2) -> [2];
([2,0,0],0) -> [2,0,0,0];
([3],0) -> [3,0];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0057 true

([],3) -> [3];
([0,3],2) -> [0,3,2];
([1,2,3],1) -> [1,2,3,1];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0244 true

([2,3],2) -> [2,3,2];
([0],1) -> [0,1];
([3],1) -> [3,1];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0112 true

([2],0) -> [2,0];
([],1) -> [1];
([2,0,0],0) -> [2,0,0,0];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0051 true

([3,0],3) -> [3,0,3];
([],3) -> [3];
([0],1) -> [0,1];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0175 true

([],0) -> [0];
([3,1],3) -> [3,1,3];
([2,1,2],1) -> [2,1,2,1];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0226 true

([0,0,0],2) -> [0,0,0,2];
([0,0],1) -> [0,0,1];
([3,3],2) -> [3,3,2];
([2,1,2],0) -> [2,1,2,0];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.2471 true

([2,3,1],3) -> [2,3,1,3];
([2,1],1) -> [2,1,1];
([3,2,2],2) -> [3,2,2,2];
([2],1) -> [2,1];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.2345 true

([3,2,2],3) -> [3,2,2,3];
([0,1],1) -> [0,1,1];
([],1) -> [1];
([1,3,2],3) -> [1,3,2,3];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.1152 true

([2,3,3],1) -> [2,3,3,1];
([1,0],2) -> [1,0,2];
([0],3) -> [0,3];
([],2) -> [2];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0672 true

([2,2,3],1) -> [2,2,3,1];
([0,3,1],2) -> [0,3,1,2];
([2,1,0],1) -> [2,1,0,1];
([1,1],2) -> [1,1,2];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.5209 true

([],3) -> [3];
([1],1) -> [1,1];
([1,0,1],0) -> [1,0,1,0];
([3,2],1) -> [3,2,1];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0357 true

([1,1],1) -> [1,1,1];
([],1) -> [1];
([0],0) -> [0,0];
([3,0,0],3) -> [3,0,0,3];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0294 true

([0],3) -> [0,3];
([],0) -> [0];
([0],0) -> [0,0];
([1],1) -> [1,1];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0079 true

([],0) -> [0];
([1],3) -> [1,3];
([],3) -> [3];
([],1) -> [1];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0075 true

([2],1) -> [2,1];
([],0) -> [0];
([],2) -> [2];
([3],3) -> [3,3];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0130 true

([],2) -> [2];
([3,0,1],2) -> [3,0,1,2];
([],3) -> [3];
([3,0,0],3) -> [3,0,0,3];
([3,1],3) -> [3,1,3];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.5103 true

([1,1,1],1) -> [1,1,1,1];
([],2) -> [2];
([2,3],2) -> [2,3,2];
([2],0) -> [2,0];
([2,3,2],3) -> [2,3,2,3];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.4437 true

([1,3],3) -> [1,3,3];
([1,2],1) -> [1,2,1];
([3,1,2],0) -> [3,1,2,0];
([0,3],2) -> [0,3,2];
([],1) -> [1];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.2898 true

([],1) -> [1];
([3,2,3],2) -> [3,2,3,2];
([3,0],1) -> [3,0,1];
([1,2],1) -> [1,2,1];
([1,0,2],1) -> [1,0,2,1];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.1063 true

([2,0,3],0) -> [2,0,3,0];
([],3) -> [3];
([1],0) -> [1,0];
([3],0) -> [3,0];
([1],1) -> [1,1];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0122 true

([0,2,1],3) -> [0,2,1,3];
([1],3) -> [1,3];
([0],1) -> [0,1];
([1],0) -> [1,0];
([3,1],2) -> [3,1,2];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.1714 true

([3],2) -> [3,2];
([3,3,1],1) -> [3,3,1,1];
([0],1) -> [0,1];
([],1) -> [1];
([2,0,1],3) -> [2,0,1,3];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.1775 true

([3,2,3],0) -> [3,2,3,0];
([2],1) -> [2,1];
([],3) -> [3];
([1,0],3) -> [1,0,3];
([1,3],2) -> [1,3,2];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.3158 true

([0,3,1],2) -> [0,3,1,2];
([1],2) -> [1,2];
([3,1,0],3) -> [3,1,0,3];
([1,3,0],2) -> [1,3,0,2];
([0,3,3],0) -> [0,3,3,0];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
2.9594 true

([],1) -> [1];
([3],3) -> [3,3];
([],0) -> [0];
([2],1) -> [2,1];
([0,0,0],1) -> [0,0,0,1];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0240 true

([2,1,2],1) -> [2,1,2,1];
([3,2,1],1) -> [3,2,1,1];
([],0) -> [0];
([3,3,0],1) -> [3,3,0,1];
([3,1],1) -> [3,1,1];
([2],3) -> [2,3];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
2.4274 true

([1,1,0],2) -> [1,1,0,2];
([2],2) -> [2,2];
([1,0],0) -> [1,0,0];
([0,1],3) -> [0,1,3];
([1,1,0],3) -> [1,1,0,3];
([0],3) -> [0,3];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
2.5151 true

([3],3) -> [3,3];
([3,3],2) -> [3,3,2];
([1,3],3) -> [1,3,3];
([0],3) -> [0,3];
([2,3],0) -> [2,3,0];
([1],0) -> [1,0];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
1.2130 true

([3,0],3) -> [3,0,3];
([],3) -> [3];
([2],2) -> [2,2];
([0,2],3) -> [0,2,3];
([2,1,0],3) -> [2,1,0,3];
([3,1,1],2) -> [3,1,1,2];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
116.2345 true

([3,0,3],1) -> [3,0,3,1];
([],2) -> [2];
([0,3,1],0) -> [0,3,1,0];
([1],2) -> [1,2];
([],1) -> [1];
([2,1,2],3) -> [2,1,2,3];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.5391 true

([2,3],2) -> [2,3,2];
([],2) -> [2];
([],3) -> [3];
([3,0],2) -> [3,0,2];
([0,3,2],0) -> [0,3,2,0];
([],1) -> [1];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0527 true

([2],1) -> [2,1];
([3],2) -> [3,2];
([0,3],3) -> [0,3,3];
([3],1) -> [3,1];
([],3) -> [3];
([],0) -> [0];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.1033 true

([],1) -> [1];
([0],1) -> [0,1];
([1],2) -> [1,2];
([2],2) -> [2,2];
([],3) -> [3];
([1,1],1) -> [1,1,1];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.1937 true

([3,3],1) -> [3,3,1];
([],0) -> [0];
([],3) -> [3];
([1,1],3) -> [1,1,3];
([3,2],0) -> [3,2,0];
([1,2,1],3) -> [1,2,1,3];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.6489 true

([1,3,1],3) -> [1,3,1,3];
([],1) -> [1];
([0,2],3) -> [0,2,3];
([3],0) -> [3,0];
([2,0,2],3) -> [2,0,2,3];
([3],2) -> [3,2];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
2.9634 true

([],1) -> [1];
([2],0) -> [2,0];
([2,1],3) -> [2,1,3];
([],2) -> [2];
([1],2) -> [1,2];
([3],0) -> [3,0];
([3,3],3) -> [3,3,3];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.5307 true

([],3) -> [3];
([0],2) -> [0,2];
([],1) -> [1];
([2,3,3],1) -> [2,3,3,1];
([1,3],2) -> [1,3,2];
([2],3) -> [2,3];
([3],2) -> [3,2];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
10.7077 true

([2],1) -> [2,1];
([],1) -> [1];
([0,3,1],3) -> [0,3,1,3];
([3,0],1) -> [3,0,1];
([1],0) -> [1,0];
([3,3],2) -> [3,3,2];
([2,2],0) -> [2,2,0];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
1.2930 true

([],1) -> [1];
([0,1,3],3) -> [0,1,3,3];
([0,3],1) -> [0,3,1];
([1,3],2) -> [1,3,2];
([2,3],3) -> [2,3,3];
([],0) -> [0];
([3],2) -> [3,2];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
9.1660 true

([2,1,3],2) -> [2,1,3,2];
([1,1],3) -> [1,1,3];
([3],3) -> [3,3];
([2,2],1) -> [2,2,1];
([],0) -> [0];
([3,2,1],0) -> [3,2,1,0];
([1,2,3],1) -> [1,2,3,1];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
35.4130 true

([2],2) -> [2,2];
([1,3],0) -> [1,3,0];
([1,0,0],1) -> [1,0,0,1];
([],1) -> [1];
([2],3) -> [2,3];
([3],3) -> [3,3];
([1],3) -> [1,3];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
1.3739 true

([0],2) -> [0,2];
([],3) -> [3];
([],1) -> [1];
([],0) -> [0];
([3],1) -> [3,1];
([2,2,1],1) -> [2,2,1,1];
([2,0],1) -> [2,0,1];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.1351 true

([],0) -> [0];
([],1) -> [1];
([2,2,3],0) -> [2,2,3,0];
([0,2],3) -> [0,2,3];
([1],1) -> [1,1];
([2,0],2) -> [2,0,2];
([1,1],0) -> [1,1,0];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.4066 true

([],2) -> [2];
([],3) -> [3];
([],1) -> [1];
([2,1,1],3) -> [2,1,1,3];
([2,3],0) -> [2,3,0];
([0,2,1],1) -> [0,2,1,1];
([2],2) -> [2,2];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.2708 true

([2,3],1) -> [2,3,1];
([0,2],3) -> [0,2,3];
([3,0],1) -> [3,0,1];
([3,3,2],0) -> [3,3,2,0];
([],0) -> [0];
([3],2) -> [3,2];
([],2) -> [2];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
1.1729 true

([],2) -> [2];
([],3) -> [3];
([1],0) -> [1,0];
([1,2],3) -> [1,2,3];
([3,3,3],2) -> [3,3,3,2];
([2],1) -> [2,1];
([3,2,3],2) -> [3,2,3,2];
([2],0) -> [2,0];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
1.1904 true

([2,0],2) -> [2,0,2];
([0],2) -> [0,2];
([2,0,2],1) -> [2,0,2,1];
([],3) -> [3];
([],1) -> [1];
([3,2,3],0) -> [3,2,3,0];
([0,1],1) -> [0,1,1];
([],0) -> [0];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.5906 true

([1],2) -> [1,2];
([2],0) -> [2,0];
([3,2],0) -> [3,2,0];
([3,3,1],0) -> [3,3,1,0];
([],2) -> [2];
([2,2],1) -> [2,2,1];
([0],0) -> [0,0];
([3,3],3) -> [3,3,3];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
1.3667 true

([1,1],3) -> [1,1,3];
([2,1],2) -> [2,1,2];
([0],0) -> [0,0];
([],3) -> [3];
([2,3,1],3) -> [2,3,1,3];
([2,1],3) -> [2,1,3];
([3,2,2],2) -> [3,2,2,2];
([3],0) -> [3,0];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
16.9845 true

([1],1) -> [1,1];
([],0) -> [0];
([],2) -> [2];
([2],3) -> [2,3];
([3,3,2],1) -> [3,3,2,1];
([],1) -> [1];
([3,0,0],0) -> [3,0,0,0];
([0,1],2) -> [0,1,2];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.5656 true

([0],3) -> [0,3];
([2,2],3) -> [2,2,3];
([],0) -> [0];
([2,3,0],1) -> [2,3,0,1];
([2],0) -> [2,0];
([0,0],1) -> [0,0,1];
([1,1,3],3) -> [1,1,3,3];
([1,2],3) -> [1,2,3];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([3],1) -> [3,1];
([3],3) -> [3,3];
([2,0],0) -> [2,0,0];
([1],3) -> [1,3];
([0,3,3],1) -> [0,3,3,1];
([3,0,1],0) -> [3,0,1,0];
([1,3],0) -> [1,3,0];
([0],0) -> [0,0];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
1.8463 true

([],3) -> [3];
([],2) -> [2];
([1,2],0) -> [1,2,0];
([3,2],0) -> [3,2,0];
([],0) -> [0];
([3],1) -> [3,1];
([0],1) -> [0,1];
([0],0) -> [0,0];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0154 true

([],0) -> [0];
([1,3,0],3) -> [1,3,0,3];
([],2) -> [2];
([1],1) -> [1,1];
([0,1,1],0) -> [0,1,1,0];
([0],3) -> [0,3];
([2,3,0],2) -> [2,3,0,2];
([2],2) -> [2,2];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
25.0164 true

([0],0) -> [0,0];
([],0) -> [0];
([],3) -> [3];
([0,2],0) -> [0,2,0];
([1],2) -> [1,2];
([0,2,3],1) -> [0,2,3,1];
([],2) -> [2];
([2],2) -> [2,2];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.1275 true

([2],3) -> [2,3];
([0,0,1],3) -> [0,0,1,3];
([2],1) -> [2,1];
([],3) -> [3];
([1,3,1],0) -> [1,3,1,0];
([],2) -> [2];
([],1) -> [1];
([3],3) -> [3,3];
([1,0],0) -> [1,0,0];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
1.5304 true

([1,1],3) -> [1,1,3];
([0],0) -> [0,0];
([1],0) -> [1,0];
([2,2],3) -> [2,2,3];
([2],0) -> [2,0];
([],2) -> [2];
([3],0) -> [3,0];
([2,1,3],1) -> [2,1,3,1];
([0,1],1) -> [0,1,1];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
12.7210 true

([2],3) -> [2,3];
([],3) -> [3];
([3,0],3) -> [3,0,3];
([3,2],1) -> [3,2,1];
([3,2,0],2) -> [3,2,0,2];
([],1) -> [1];
([0],1) -> [0,1];
([2,2,3],1) -> [2,2,3,1];
([3,1],0) -> [3,1,0];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
64.5127 true

([],2) -> [2];
([2],3) -> [2,3];
([3,1,2],3) -> [3,1,2,3];
([2,2,3],2) -> [2,2,3,2];
([0],0) -> [0,0];
([0,3,2],2) -> [0,3,2,2];
([],1) -> [1];
([3],1) -> [3,1];
([3,1,3],1) -> [3,1,3,1];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
76.7685 true

([],1) -> [1];
([3,0,1],1) -> [3,0,1,1];
([],2) -> [2];
([3,0,3],3) -> [3,0,3,3];
([0,0],0) -> [0,0,0];
([],0) -> [0];
([0,2],0) -> [0,2,0];
([3],1) -> [3,1];
([3],3) -> [3,3];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.5876 true

([],2) -> [2];
([],0) -> [0];
([1,0],3) -> [1,0,3];
([2,1],3) -> [2,1,3];
([3,0],0) -> [3,0,0];
([3],2) -> [3,2];
([3],0) -> [3,0];
([1,1,0],1) -> [1,1,0,1];
([0],0) -> [0,0];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
2.4555 true

([2],2) -> [2,2];
([3,0,0],1) -> [3,0,0,1];
([3],0) -> [3,0];
([3],1) -> [3,1];
([],3) -> [3];
([0,3],2) -> [0,3,2];
([0,1,0],1) -> [0,1,0,1];
([0,0],0) -> [0,0,0];
([2,3],1) -> [2,3,1];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
19.6688 true

([],2) -> [2];
([2],3) -> [2,3];
([3,3],2) -> [3,3,2];
([3],2) -> [3,2];
([3,1],0) -> [3,1,0];
([],3) -> [3];
([1],3) -> [1,3];
([2],0) -> [2,0];
([1],0) -> [1,0];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
1.9111 true

([2,2,0],0) -> [2,2,0,0];
([3,1,3],3) -> [3,1,3,3];
([3,0,1],1) -> [3,0,1,1];
([],0) -> [0];
([3,2],3) -> [3,2,3];
([2,1,1],3) -> [2,1,1,3];
([1],3) -> [1,3];
([3],3) -> [3,3];
([0,0],2) -> [0,0,2];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([3,1],2) -> [3,1,2];
([0,2,1],0) -> [0,2,1,0];
([0,1,3],1) -> [0,1,3,1];
([1,0],0) -> [1,0,0];
([3,1,0],2) -> [3,1,0,2];
([],2) -> [2];
([1,2],2) -> [1,2,2];
([1,2],3) -> [1,2,3];
([2,2],1) -> [2,2,1];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([2,3],1) -> [2,3,1];
([],2) -> [2];
([0,3],0) -> [0,3,0];
([0,1,3],0) -> [0,1,3,0];
([],1) -> [1];
([],0) -> [0];
([2,3],0) -> [2,3,0];
([0],3) -> [0,3];
([3,2],1) -> [3,2,1];
([1,3,1],2) -> [1,3,1,2];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
2.6306 true

([],3) -> [3];
([0],0) -> [0,0];
([0],1) -> [0,1];
([1,2,1],3) -> [1,2,1,3];
([],1) -> [1];
([1],0) -> [1,0];
([2],3) -> [2,3];
([3,1],2) -> [3,1,2];
([2,2,1],0) -> [2,2,1,0];
([2],2) -> [2,2];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
2.0770 true

([2,3],0) -> [2,3,0];
([1,2,0],3) -> [1,2,0,3];
([1],0) -> [1,0];
([0,0,2],3) -> [0,0,2,3];
([3],1) -> [3,1];
([0,3],1) -> [0,3,1];
([1,3],3) -> [1,3,3];
([],2) -> [2];
([2,0],3) -> [2,0,3];
([0,2,0],2) -> [0,2,0,2];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([],0) -> [0];
([0,3],1) -> [0,3,1];
([3,2,2],3) -> [3,2,2,3];
([3],2) -> [3,2];
([1],1) -> [1,1];
([],2) -> [2];
([0,0,3],0) -> [0,0,3,0];
([],1) -> [1];
([3,2],0) -> [3,2,0];
([2,1,0],0) -> [2,1,0,0];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
8.1296 true

([],1) -> [1];
([0,3,0],1) -> [0,3,0,1];
([1],1) -> [1,1];
([0,3,2],2) -> [0,3,2,2];
([],2) -> [2];
([2],0) -> [2,0];
([3,0,1],3) -> [3,0,1,3];
([2,2,1],1) -> [2,2,1,1];
([1,3],3) -> [1,3,3];
([2,0,3],3) -> [2,0,3,3];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([1,1,0],3) -> [1,1,0,3];
([3],2) -> [3,2];
([1,2,2],0) -> [1,2,2,0];
([2,0],0) -> [2,0,0];
([1],2) -> [1,2];
([2,2],2) -> [2,2,2];
([3,0],3) -> [3,0,3];
([],2) -> [2];
([0],0) -> [0,0];
([2,1],3) -> [2,1,3];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([0,2],2) -> [0,2,2];
([],1) -> [1];
([],0) -> [0];
([],2) -> [2];
([0,3,2],2) -> [0,3,2,2];
([1,1,3],1) -> [1,1,3,1];
([0,3],0) -> [0,3,0];
([2],3) -> [2,3];
([3,3,2],1) -> [3,3,2,1];
([3,3,2],2) -> [3,3,2,2];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
10.8739 true

([2],3) -> [2,3];
([],0) -> [0];
([3,1,2],2) -> [3,1,2,2];
([1],0) -> [1,0];
([0,2,1],2) -> [0,2,1,2];
([1,2],2) -> [1,2,2];
([],1) -> [1];
([1,1],3) -> [1,1,3];
([0,3,2],0) -> [0,3,2,0];
([1,3],3) -> [1,3,3];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([1,3],1) -> [1,3,1];
([2,1,1],3) -> [2,1,1,3];
([],0) -> [0];
([],2) -> [2];
([],3) -> [3];
([2,0],0) -> [2,0,0];
([0,0,2],3) -> [0,0,2,3];
([],1) -> [1];
([3,1],0) -> [3,1,0];
([3],1) -> [3,1];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
1.8549 true

([3,1],0) -> [3,1,0];
([],3) -> [3];
([3,0],3) -> [3,0,3];
([],0) -> [0];
([0,1,0],2) -> [0,1,0,2];
([2,1],1) -> [2,1,1];
([3,1],2) -> [3,1,2];
([2,3],0) -> [2,3,0];
([3,3],3) -> [3,3,3];
([],2) -> [2];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
33.0003 true

([0],2) -> [0,2];
([2,1],1) -> [2,1,1];
([0,1,0],2) -> [0,1,0,2];
([],2) -> [2];
([3,3],2) -> [3,3,2];
([3,2],3) -> [3,2,3];
([3,3,3],3) -> [3,3,3,3];
([0,3,1],2) -> [0,3,1,2];
([],3) -> [3];
([2,3,0],1) -> [2,3,0,1];
([3],3) -> [3,3];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([],3) -> [3];
([],0) -> [0];
([],2) -> [2];
([3],2) -> [3,2];
([0],2) -> [0,2];
([0,0,0],3) -> [0,0,0,3];
([2],3) -> [2,3];
([2,2],0) -> [2,2,0];
([1],0) -> [1,0];
([2,0],0) -> [2,0,0];
([1,0],3) -> [1,0,3];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([3],3) -> [3,3];
([1],0) -> [1,0];
([3,1],0) -> [3,1,0];
([3],1) -> [3,1];
([3],2) -> [3,2];
([0],1) -> [0,1];
([0,0],3) -> [0,0,3];
([2,2,1],2) -> [2,2,1,2];
([1,3,2],2) -> [1,3,2,2];
([3,2,3],1) -> [3,2,3,1];
([3,3],0) -> [3,3,0];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([0,1],3) -> [0,1,3];
([0,2,1],0) -> [0,2,1,0];
([3,3],3) -> [3,3,3];
([],3) -> [3];
([3],0) -> [3,0];
([],0) -> [0];
([2,1,0],0) -> [2,1,0,0];
([],2) -> [2];
([3,1,1],0) -> [3,1,1,0];
([0,2],1) -> [0,2,1];
([2,1,1],3) -> [2,1,1,3];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([3,1],1) -> [3,1,1];
([],3) -> [3];
([],0) -> [0];
([0,1],0) -> [0,1,0];
([3,3,0],2) -> [3,3,0,2];
([2,0],1) -> [2,0,1];
([2,3],1) -> [2,3,1];
([2],2) -> [2,2];
([],1) -> [1];
([0],3) -> [0,3];
([2,2,3],1) -> [2,2,3,1];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([],0) -> [0];
([2],2) -> [2,2];
([2,1,1],1) -> [2,1,1,1];
([],1) -> [1];
([1,2,2],0) -> [1,2,2,0];
([],3) -> [3];
([0,3],1) -> [0,3,1];
([0,1],2) -> [0,1,2];
([0,0,0],1) -> [0,0,0,1];
([0],2) -> [0,2];
([3],0) -> [3,0];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
41.2493 true

([3,3,3],3) -> [3,3,3,3];
([],1) -> [1];
([0,0],2) -> [0,0,2];
([3,1],2) -> [3,1,2];
([3,1],1) -> [3,1,1];
([0,1,1],0) -> [0,1,1,0];
([],0) -> [0];
([0,1],3) -> [0,1,3];
([1],2) -> [1,2];
([2],2) -> [2,2];
([3],3) -> [3,3];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([3,3],2) -> [3,3,2];
([1,2,3],3) -> [1,2,3,3];
([1],0) -> [1,0];
([],1) -> [1];
([1,0],2) -> [1,0,2];
([1],1) -> [1,1];
([1,1],0) -> [1,1,0];
([2],2) -> [2,2];
([1,0],0) -> [1,0,0];
([2],0) -> [2,0];
([0,2],0) -> [0,2,0];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
10.8567 true

([3,3,3],2) -> [3,3,3,2];
([2,3],0) -> [2,3,0];
([],1) -> [1];
([1],2) -> [1,2];
([3,1],0) -> [3,1,0];
([2,0],1) -> [2,0,1];
([1,2,2],0) -> [1,2,2,0];
([1,3,1],0) -> [1,3,1,0];
([3],1) -> [3,1];
([0,2],0) -> [0,2,0];
([0],3) -> [0,3];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([],0) -> [0];
([3,1],3) -> [3,1,3];
([2,0,0],3) -> [2,0,0,3];
([1],2) -> [1,2];
([2,3,1],0) -> [2,3,1,0];
([2],1) -> [2,1];
([],2) -> [2];
([0,1,1],2) -> [0,1,1,2];
([1],3) -> [1,3];
([],1) -> [1];
([1,1,1],3) -> [1,1,1,3];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([2,0,2],3) -> [2,0,2,3];
([3,0,1],2) -> [3,0,1,2];
([],1) -> [1];
([1,3],0) -> [1,3,0];
([2,3,0],2) -> [2,3,0,2];
([2],1) -> [2,1];
([],0) -> [0];
([1],3) -> [1,3];
([3,2,1],1) -> [3,2,1,1];
([1],2) -> [1,2];
([],3) -> [3];
([1,2,0],2) -> [1,2,0,2];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([],2) -> [2];
([0,1,2],0) -> [0,1,2,0];
([1,0,2],0) -> [1,0,2,0];
([3],0) -> [3,0];
([3,1],3) -> [3,1,3];
([0,3],0) -> [0,3,0];
([1,1],1) -> [1,1,1];
([1],2) -> [1,2];
([1,1,0],3) -> [1,1,0,3];
([2,2],0) -> [2,2,0];
([3,2,1],2) -> [3,2,1,2];
([0,0],1) -> [0,0,1];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([2,3],2) -> [2,3,2];
([],2) -> [2];
([3,1],1) -> [3,1,1];
([0],3) -> [0,3];
([],0) -> [0];
([],1) -> [1];
([3],0) -> [3,0];
([0,3],0) -> [0,3,0];
([1],1) -> [1,1];
([3],1) -> [3,1];
([2,3,3],3) -> [2,3,3,3];
([2],0) -> [2,0];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
13.0970 true

([3],1) -> [3,1];
([0,3],0) -> [0,3,0];
([3],3) -> [3,3];
([],2) -> [2];
([0,3,3],3) -> [0,3,3,3];
([],0) -> [0];
([2,1,1],2) -> [2,1,1,2];
([],3) -> [3];
([1,3,0],2) -> [1,3,0,2];
([0,3,2],2) -> [0,3,2,2];
([3,3,2],3) -> [3,3,2,3];
([2],1) -> [2,1];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([],0) -> [0];
([2,3],3) -> [2,3,3];
([3,3,0],2) -> [3,3,0,2];
([],1) -> [1];
([2,3,3],0) -> [2,3,3,0];
([2],0) -> [2,0];
([3,2],0) -> [3,2,0];
([1,2,1],3) -> [1,2,1,3];
([],2) -> [2];
([1],0) -> [1,0];
([1,2,2],1) -> [1,2,2,1];
([0],3) -> [0,3];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([0,3,1],3) -> [0,3,1,3];
([2,0,3],0) -> [2,0,3,0];
([3],3) -> [3,3];
([1,1,3],2) -> [1,1,3,2];
([2,1,1],0) -> [2,1,1,0];
([2,2,1],0) -> [2,2,1,0];
([2],0) -> [2,0];
([2,0,1],1) -> [2,0,1,1];
([3,3,1],3) -> [3,3,1,3];
([0,3,1],2) -> [0,3,1,2];
([0,3,0],1) -> [0,3,0,1];
([],0) -> [0];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([0,1],0) -> [0,1,0];
([3],2) -> [3,2];
([0],1) -> [0,1];
([2,2,0],2) -> [2,2,0,2];
([1,2],0) -> [1,2,0];
([1],1) -> [1,1];
([3,0,3],3) -> [3,0,3,3];
([3,2],1) -> [3,2,1];
([],3) -> [3];
([1,3],1) -> [1,3,1];
([0],3) -> [0,3];
([],0) -> [0];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([],3) -> [3];
([1,3],0) -> [1,3,0];
([1],2) -> [1,2];
([1,3,1],1) -> [1,3,1,1];
([1,1,1],0) -> [1,1,1,0];
([],0) -> [0];
([0,3],1) -> [0,3,1];
([3,1],0) -> [3,1,0];
([],2) -> [2];
([0,0],0) -> [0,0,0];
([2,2],0) -> [2,2,0];
([1,2,0],2) -> [1,2,0,2];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([0,2,3],0) -> [0,2,3,0];
([2,0],1) -> [2,0,1];
([1],2) -> [1,2];
([0,3],0) -> [0,3,0];
([],2) -> [2];
([],1) -> [1];
([1],3) -> [1,3];
([2],3) -> [2,3];
([3,3],2) -> [3,3,2];
([2],0) -> [2,0];
([1,1,0],2) -> [1,1,0,2];
([1,2],1) -> [1,2,1];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
90.2824 true

([1,2,3],2) -> [1,2,3,2];
([],0) -> [0];
([1],1) -> [1,1];
([],1) -> [1];
([3,0],1) -> [3,0,1];
([0,0],0) -> [0,0,0];
([2,1],3) -> [2,1,3];
([0],2) -> [0,2];
([1,0,0],3) -> [1,0,0,3];
([0],0) -> [0,0];
([1,1,2],1) -> [1,1,2,1];
([1,3,3],0) -> [1,3,3,0];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([],0) -> [0];
([3,3,3],1) -> [3,3,3,1];
([2,2],0) -> [2,2,0];
([],2) -> [2];
([1],0) -> [1,0];
([],3) -> [3];
([],1) -> [1];
([3,1,3],3) -> [3,1,3,3];
([1],2) -> [1,2];
([3,1],0) -> [3,1,0];
([3,0,0],0) -> [3,0,0,0];
([1,1],3) -> [1,1,3];
([1,2],0) -> [1,2,0];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
13.1735 true

([2,2,2],2) -> [2,2,2,2];
([1,1],2) -> [1,1,2];
([1],1) -> [1,1];
([],1) -> [1];
([1],3) -> [1,3];
([3,3],3) -> [3,3,3];
([3,1],2) -> [3,1,2];
([3,3,1],3) -> [3,3,1,3];
([2],3) -> [2,3];
([],2) -> [2];
([2,2,2],3) -> [2,2,2,3];
([3,0],3) -> [3,0,3];
([0],3) -> [0,3];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([2,2,0],1) -> [2,2,0,1];
([3,3,1],0) -> [3,3,1,0];
([0],2) -> [0,2];
([],3) -> [3];
([0,3,3],0) -> [0,3,3,0];
([2,1,1],2) -> [2,1,1,2];
([2,2],2) -> [2,2,2];
([3,1],1) -> [3,1,1];
([3,3],2) -> [3,3,2];
([0,2],0) -> [0,2,0];
([],0) -> [0];
([1,1,3],1) -> [1,1,3,1];
([3,3,1],2) -> [3,3,1,2];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([0,3,0],1) -> [0,3,0,1];
([1,0,3],3) -> [1,0,3,3];
([0,2],3) -> [0,2,3];
([2,2],1) -> [2,2,1];
([2,0,1],0) -> [2,0,1,0];
([],3) -> [3];
([2,3],1) -> [2,3,1];
([],1) -> [1];
([1,2,2],0) -> [1,2,2,0];
([1,0],3) -> [1,0,3];
([0],3) -> [0,3];
([1,3,3],1) -> [1,3,3,1];
([2,0,3],1) -> [2,0,3,1];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([0],2) -> [0,2];
([],3) -> [3];
([1,0],2) -> [1,0,2];
([2,1,0],0) -> [2,1,0,0];
([],0) -> [0];
([0,0,1],1) -> [0,0,1,1];
([3,0],2) -> [3,0,2];
([2],2) -> [2,2];
([2],0) -> [2,0];
([],1) -> [1];
([3],3) -> [3,3];
([],2) -> [2];
([2],3) -> [2,3];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
62.8968 true

([2,0,2],0) -> [2,0,2,0];
([3,0],1) -> [3,0,1];
([0],3) -> [0,3];
([],1) -> [1];
([0,1],1) -> [0,1,1];
([],0) -> [0];
([3],1) -> [3,1];
([3,3],1) -> [3,3,1];
([2,3],1) -> [2,3,1];
([],3) -> [3];
([1,2],1) -> [1,2,1];
([],2) -> [2];
([3],3) -> [3,3];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
41.8117 true

([3],2) -> [3,2];
([3],3) -> [3,3];
([],0) -> [0];
([3,3,0],1) -> [3,3,0,1];
([0],0) -> [0,0];
([0,3,0],2) -> [0,3,0,2];
([3,3,1],3) -> [3,3,1,3];
([1,0],0) -> [1,0,0];
([2,3,0],1) -> [2,3,0,1];
([2,2],0) -> [2,2,0];
([2,1],1) -> [2,1,1];
([1,1],2) -> [1,1,2];
([1,0,0],2) -> [1,0,0,2];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([2,1,0],1) -> [2,1,0,1];
([2,3],2) -> [2,3,2];
([0,3,2],0) -> [0,3,2,0];
([3,0],2) -> [3,0,2];
([2,1,3],0) -> [2,1,3,0];
([],1) -> [1];
([3],1) -> [3,1];
([],3) -> [3];
([3],0) -> [3,0];
([1,2],0) -> [1,2,0];
([1,0,1],2) -> [1,0,1,2];
([],0) -> [0];
([2,0,2],1) -> [2,0,2,1];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([0,0,3],0) -> [0,0,3,0];
([2,2,3],1) -> [2,2,3,1];
([0,1],3) -> [0,1,3];
([2],2) -> [2,2];
([],3) -> [3];
([0],3) -> [0,3];
([3],1) -> [3,1];
([1,2],1) -> [1,2,1];
([],1) -> [1];
([2],3) -> [2,3];
([0,3],2) -> [0,3,2];
([1],3) -> [1,3];
([],2) -> [2];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([],3) -> [3];
([0,3],0) -> [0,3,0];
([3,0],3) -> [3,0,3];
([],2) -> [2];
([0,2,2],2) -> [0,2,2,2];
([3,1,0],0) -> [3,1,0,0];
([3,1],3) -> [3,1,3];
([1,2,1],1) -> [1,2,1,1];
([1,3],1) -> [1,3,1];
([0,0],3) -> [0,0,3];
([2,0,3],2) -> [2,0,3,2];
([],0) -> [0];
([3,1,3],3) -> [3,1,3,3];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([2,1,2],1) -> [2,1,2,1];
([2],0) -> [2,0];
([0],3) -> [0,3];
([0,3],2) -> [0,3,2];
([2,0],3) -> [2,0,3];
([],2) -> [2];
([3,2,2],2) -> [3,2,2,2];
([2,0,3],1) -> [2,0,3,1];
([2,3,0],2) -> [2,3,0,2];
([],3) -> [3];
([1,2,2],2) -> [1,2,2,2];
([3],1) -> [3,1];
([3,2],0) -> [3,2,0];
([1,1],1) -> [1,1,1];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([0],2) -> [0,2];
([0,1,3],2) -> [0,1,3,2];
([1],1) -> [1,1];
([3,3],1) -> [3,3,1];
([0,1,0],0) -> [0,1,0,0];
([],0) -> [0];
([0],1) -> [0,1];
([2],2) -> [2,2];
([2],0) -> [2,0];
([],3) -> [3];
([0,0,2],3) -> [0,0,2,3];
([2,3,3],1) -> [2,3,3,1];
([3,2],1) -> [3,2,1];
([0,3],0) -> [0,3,0];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([3,2,0],2) -> [3,2,0,2];
([],0) -> [0];
([1,0,0],2) -> [1,0,0,2];
([0,3],3) -> [0,3,3];
([3,1,2],2) -> [3,1,2,2];
([1],1) -> [1,1];
([1,0],0) -> [1,0,0];
([1,3,1],0) -> [1,3,1,0];
([3],2) -> [3,2];
([],2) -> [2];
([2,2],0) -> [2,2,0];
([2,1,3],3) -> [2,1,3,3];
([1],0) -> [1,0];
([],3) -> [3];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([0,1],2) -> [0,1,2];
([2],0) -> [2,0];
([2,2,3],2) -> [2,2,3,2];
([3,0],0) -> [3,0,0];
([2,0,3],2) -> [2,0,3,2];
([],0) -> [0];
([],1) -> [1];
([2,1,1],0) -> [2,1,1,0];
([2,1],1) -> [2,1,1];
([1,3,0],0) -> [1,3,0,0];
([1,3],0) -> [1,3,0];
([2],3) -> [2,3];
([0,3],3) -> [0,3,3];
([1,3],1) -> [1,3,1];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([1,0,0],0) -> [1,0,0,0];
([0,0],1) -> [0,0,1];
([2,3,1],3) -> [2,3,1,3];
([0,0,3],0) -> [0,0,3,0];
([],1) -> [1];
([2,3],3) -> [2,3,3];
([3,0,1],2) -> [3,0,1,2];
([3],2) -> [3,2];
([],3) -> [3];
([3,3,3],0) -> [3,3,3,0];
([3],3) -> [3,3];
([],0) -> [0];
([1,2,3],1) -> [1,2,3,1];
([],2) -> [2];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([1,2],1) -> [1,2,1];
([1],2) -> [1,2];
([0,1],2) -> [0,1,2];
([3,3],3) -> [3,3,3];
([2,1],0) -> [2,1,0];
([1],0) -> [1,0];
([2],0) -> [2,0];
([2,2],0) -> [2,2,0];
([],0) -> [0];
([2,0],2) -> [2,0,2];
([],1) -> [1];
([3],2) -> [3,2];
([3,3,1],2) -> [3,3,1,2];
([3,1],2) -> [3,1,2];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([3],1) -> [3,1];
([1,3],0) -> [1,3,0];
([],3) -> [3];
([0,3,3],1) -> [0,3,3,1];
([3,0],3) -> [3,0,3];
([0,1,1],2) -> [0,1,1,2];
([1,1,1],1) -> [1,1,1,1];
([0],3) -> [0,3];
([1,2],0) -> [1,2,0];
([],1) -> [1];
([2,1,2],2) -> [2,1,2,2];
([],0) -> [0];
([2,3,2],3) -> [2,3,2,3];
([0,3,3],2) -> [0,3,3,2];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([3,1,3],2) -> [3,1,3,2];
([0],1) -> [0,1];
([2,3,3],3) -> [2,3,3,3];
([],2) -> [2];
([1,2],3) -> [1,2,3];
([1,2],0) -> [1,2,0];
([2],0) -> [2,0];
([1,0,0],2) -> [1,0,0,2];
([2,3],3) -> [2,3,3];
([3,0,2],3) -> [3,0,2,3];
([0,2],0) -> [0,2,0];
([0,2,3],3) -> [0,2,3,3];
([2],1) -> [2,1];
([3],1) -> [3,1];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([],0) -> [0];
([2],1) -> [2,1];
([1],0) -> [1,0];
([],3) -> [3];
([2],3) -> [2,3];
([3],3) -> [3,3];
([0],0) -> [0,0];
([1,1,0],0) -> [1,1,0,0];
([],1) -> [1];
([1,1],2) -> [1,1,2];
([1],1) -> [1,1];
([2],0) -> [2,0];
([2,2,2],1) -> [2,2,2,1];
([1,1],1) -> [1,1,1];

=================================
start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)
 (totalHeight 0))
VSA done
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
1.6343 true

([0],3) -> [0,3];
([3,1],2) -> [3,1,2];
([],1) -> [1];
([],3) -> [3];
([],2) -> [2];
([3],1) -> [3,1];
([0,1],3) -> [0,1,3];
([1],3) -> [1,3];
([0,3,0],2) -> [0,3,0,2];
([3,0],3) -> [3,0,3];
([2],3) -> [2,3];
([1,0],0) -> [1,0,0];
([0,2,1],2) -> [0,2,1,2];
([3],0) -> [3,0];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([],1) -> [1];
([2,2],3) -> [2,2,3];
([1,2],2) -> [1,2,2];
([3],1) -> [3,1];
([2,0,0],3) -> [2,0,0,3];
([2],3) -> [2,3];
([3],2) -> [3,2];
([3,0,0],2) -> [3,0,0,2];
([],2) -> [2];
([2,2,3],1) -> [2,2,3,1];
([],0) -> [0];
([1],1) -> [1,1];
([0,3,1],0) -> [0,3,1,0];
([2],1) -> [2,1];
([3],0) -> [3,0];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([2,0],2) -> [2,0,2];
([2,0],3) -> [2,0,3];
([1],0) -> [1,0];
([0,1],1) -> [0,1,1];
([0,0],0) -> [0,0,0];
([0,0],1) -> [0,0,1];
([0],3) -> [0,3];
([1,2],3) -> [1,2,3];
([1,1],0) -> [1,1,0];
([3],0) -> [3,0];
([],3) -> [3];
([2,3,1],1) -> [2,3,1,1];
([2,3,1],2) -> [2,3,1,2];
([],0) -> [0];
([0,1],3) -> [0,1,3];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([1,1,2],1) -> [1,1,2,1];
([0,0,2],3) -> [0,0,2,3];
([0,0,0],1) -> [0,0,0,1];
([3,2],3) -> [3,2,3];
([0,3],3) -> [0,3,3];
([2,3,1],2) -> [2,3,1,2];
([],0) -> [0];
([0,1,1],1) -> [0,1,1,1];
([2,1],1) -> [2,1,1];
([2,0],3) -> [2,0,3];
([0],0) -> [0,0];
([3,3],1) -> [3,3,1];
([2,0,2],0) -> [2,0,2,0];
([0,2],1) -> [0,2,1];
([],2) -> [2];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([2],3) -> [2,3];
([3,1,1],2) -> [3,1,1,2];
([3],1) -> [3,1];
([0,0,3],3) -> [0,0,3,3];
([1],2) -> [1,2];
([],1) -> [1];
([2,0],3) -> [2,0,3];
([3,2,0],1) -> [3,2,0,1];
([2],0) -> [2,0];
([2,1],1) -> [2,1,1];
([1],0) -> [1,0];
([3,3,2],2) -> [3,3,2,2];
([0,0,0],0) -> [0,0,0,0];
([0],3) -> [0,3];
([3,1],3) -> [3,1,3];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([2],2) -> [2,2];
([],2) -> [2];
([1,3],3) -> [1,3,3];
([3],0) -> [3,0];
([3,2],3) -> [3,2,3];
([0,2],2) -> [0,2,2];
([1,3,2],0) -> [1,3,2,0];
([3,0],0) -> [3,0,0];
([2],1) -> [2,1];
([3,1],2) -> [3,1,2];
([1,3],0) -> [1,3,0];
([2,0],3) -> [2,0,3];
([3,2],2) -> [3,2,2];
([],0) -> [0];
([2,0,0],1) -> [2,0,0,1];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([],0) -> [0];
([3,0,3],2) -> [3,0,3,2];
([3,2,2],2) -> [3,2,2,2];
([0,0],2) -> [0,0,2];
([],3) -> [3];
([0,1],3) -> [0,1,3];
([0,0],1) -> [0,0,1];
([2],2) -> [2,2];
([],1) -> [1];
([2,0],3) -> [2,0,3];
([3,3,3],1) -> [3,3,3,1];
([0,1,3],1) -> [0,1,3,1];
([0],2) -> [0,2];
([2,3,2],0) -> [2,3,2,0];
([3,0,1],2) -> [3,0,1,2];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([],1) -> [1];
([0,1],2) -> [0,1,2];
([2],1) -> [2,1];
([1,0,0],3) -> [1,0,0,3];
([],2) -> [2];
([2,3,1],2) -> [2,3,1,2];
([2],3) -> [2,3];
([0,3],2) -> [0,3,2];
([],0) -> [0];
([2,3],1) -> [2,3,1];
([1,0,1],1) -> [1,0,1,1];
([2,2,3],3) -> [2,2,3,3];
([3],0) -> [3,0];
([0,0],0) -> [0,0,0];
([1,1,2],1) -> [1,1,2,1];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([],3) -> [3];
([],2) -> [2];
([3,1],0) -> [3,1,0];
([2,1,0],1) -> [2,1,0,1];
([2,1],2) -> [2,1,2];
([2,2,3],3) -> [2,2,3,3];
([],0) -> [0];
([2],1) -> [2,1];
([1,0],3) -> [1,0,3];
([2,1,3],1) -> [2,1,3,1];
([3],2) -> [3,2];
([0],2) -> [0,2];
([2,3],3) -> [2,3,3];
([0,1],3) -> [0,1,3];
([2,0],0) -> [2,0,0];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([0,0],1) -> [0,0,1];
([],3) -> [3];
([3],0) -> [3,0];
([1,3],2) -> [1,3,2];
([],0) -> [0];
([3,3,0],1) -> [3,3,0,1];
([1,3],1) -> [1,3,1];
([1,1],3) -> [1,1,3];
([3],1) -> [3,1];
([],1) -> [1];
([0,2,3],3) -> [0,2,3,3];
([0,3,0],1) -> [0,3,0,1];
([0],1) -> [0,1];
([0,1],2) -> [0,1,2];
([2,0],3) -> [2,0,3];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([2,2],0) -> [2,2,0];
([],2) -> [2];
([3,0,0],1) -> [3,0,0,1];
([0,3,3],0) -> [0,3,3,0];
([3,3,2],2) -> [3,3,2,2];
([0,0,0],0) -> [0,0,0,0];
([0],0) -> [0,0];
([],3) -> [3];
([1],3) -> [1,3];
([3,1],1) -> [3,1,1];
([3,3,2],3) -> [3,3,2,3];
([0,2,0],2) -> [0,2,0,2];
([1,0],2) -> [1,0,2];
([3,2],1) -> [3,2,1];
([],1) -> [1];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([2,2],0) -> [2,2,0];
([3,1],0) -> [3,1,0];
([],0) -> [0];
([0,3],3) -> [0,3,3];
([0,0],3) -> [0,0,3];
([2],0) -> [2,0];
([3,1],1) -> [3,1,1];
([1,1],2) -> [1,1,2];
([],2) -> [2];
([1,1],0) -> [1,1,0];
([],1) -> [1];
([],3) -> [3];
([0,1],1) -> [0,1,1];
([3],3) -> [3,3];
([1],3) -> [1,3];
([2],3) -> [2,3];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([3],3) -> [3,3];
([1,1],1) -> [1,1,1];
([],2) -> [2];
([2,3,3],1) -> [2,3,3,1];
([3,3,1],0) -> [3,3,1,0];
([1,0],2) -> [1,0,2];
([],3) -> [3];
([2],3) -> [2,3];
([0],0) -> [0,0];
([2,2,2],2) -> [2,2,2,2];
([],0) -> [0];
([3],0) -> [3,0];
([1,1],2) -> [1,1,2];
([2],1) -> [2,1];
([],1) -> [1];
([3,0],2) -> [3,0,2];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([],0) -> [0];
([2,1],1) -> [2,1,1];
([2],0) -> [2,0];
([2,3],1) -> [2,3,1];
([3,1],0) -> [3,1,0];
([2,1],0) -> [2,1,0];
([1,3],0) -> [1,3,0];
([],3) -> [3];
([2,0],1) -> [2,0,1];
([3,3],2) -> [3,3,2];
([3],3) -> [3,3];
([2,2],3) -> [2,2,3];
([3,1,2],3) -> [3,1,2,3];
([3,0],2) -> [3,0,2];
([1,3],1) -> [1,3,1];
([1,1,3],2) -> [1,1,3,2];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([],2) -> [2];
([0,1,0],1) -> [0,1,0,1];
([0,2,0],1) -> [0,2,0,1];
([1,0,2],0) -> [1,0,2,0];
([3],3) -> [3,3];
([1,3,0],2) -> [1,3,0,2];
([2,0],3) -> [2,0,3];
([],1) -> [1];
([2,1],2) -> [2,1,2];
([1,0],3) -> [1,0,3];
([2],1) -> [2,1];
([3],1) -> [3,1];
([],3) -> [3];
([0],1) -> [0,1];
([2,3,2],2) -> [2,3,2,2];
([0,1,1],3) -> [0,1,1,3];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([3,0],2) -> [3,0,2];
([],0) -> [0];
([2,0,1],3) -> [2,0,1,3];
([3],0) -> [3,0];
([0,1,0],1) -> [0,1,0,1];
([],1) -> [1];
([2,0],0) -> [2,0,0];
([3],1) -> [3,1];
([1,3,2],2) -> [1,3,2,2];
([2,1],2) -> [2,1,2];
([0,0],1) -> [0,0,1];
([],3) -> [3];
([1,3,3],0) -> [1,3,3,0];
([3],3) -> [3,3];
([],2) -> [2];
([2,0],3) -> [2,0,3];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([1,3],1) -> [1,3,1];
([0,0,3],1) -> [0,0,3,1];
([],1) -> [1];
([1,3],3) -> [1,3,3];
([],2) -> [2];
([0],0) -> [0,0];
([0,2,0],0) -> [0,2,0,0];
([],3) -> [3];
([1,0,0],2) -> [1,0,0,2];
([0],2) -> [0,2];
([3,3,0],0) -> [3,3,0,0];
([1],0) -> [1,0];
([3],3) -> [3,3];
([2,2],0) -> [2,2,0];
([2,3,2],0) -> [2,3,2,0];
([2,3,0],1) -> [2,3,0,1];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([],0) -> [0];
([2],0) -> [2,0];
([2,0,3],0) -> [2,0,3,0];
([1,2,2],3) -> [1,2,2,3];
([0,2,3],1) -> [0,2,3,1];
([2],1) -> [2,1];
([2,3,0],1) -> [2,3,0,1];
([2],2) -> [2,2];
([],2) -> [2];
([3],2) -> [3,2];
([0],0) -> [0,0];
([1],1) -> [1,1];
([0,1,1],2) -> [0,1,1,2];
([1,1,2],2) -> [1,1,2,2];
([2,3,0],3) -> [2,3,0,3];
([],1) -> [1];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([2],0) -> [2,0];
([3],1) -> [3,1];
([2,2],1) -> [2,2,1];
([2,0],0) -> [2,0,0];
([1,2],2) -> [1,2,2];
([3,2,3],1) -> [3,2,3,1];
([],0) -> [0];
([3,0],2) -> [3,0,2];
([3,1],0) -> [3,1,0];
([],2) -> [2];
([2],3) -> [2,3];
([3,2,2],3) -> [3,2,2,3];
([1,3,1],0) -> [1,3,1,0];
([1,2,2],0) -> [1,2,2,0];
([3,3,2],3) -> [3,3,2,3];
([2],1) -> [2,1];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([],2) -> [2];
([2,1,0],1) -> [2,1,0,1];
([3,1,3],2) -> [3,1,3,2];
([],1) -> [1];
([1],3) -> [1,3];
([1],1) -> [1,1];
([],0) -> [0];
([1],2) -> [1,2];
([1,0,2],2) -> [1,0,2,2];
([0],0) -> [0,0];
([],3) -> [3];
([0,0,2],0) -> [0,0,2,0];
([2,3],3) -> [2,3,3];
([2,1],0) -> [2,1,0];
([3],3) -> [3,3];
([2],3) -> [2,3];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([1,1],0) -> [1,1,0];
([],2) -> [2];
([2],1) -> [2,1];
([],3) -> [3];
([],1) -> [1];
([2,1],3) -> [2,1,3];
([3],3) -> [3,3];
([2,0,0],1) -> [2,0,0,1];
([0],0) -> [0,0];
([3,3,0],3) -> [3,3,0,3];
([3,0],1) -> [3,0,1];
([3,2],3) -> [3,2,3];
([1],2) -> [1,2];
([0,2],3) -> [0,2,3];
([3],2) -> [3,2];
([],0) -> [0];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([],2) -> [2];
([],1) -> [1];
([3,0],0) -> [3,0,0];
([1,3,3],2) -> [1,3,3,2];
([],0) -> [0];
([1],1) -> [1,1];
([1],3) -> [1,3];
([3,0],1) -> [3,0,1];
([1],2) -> [1,2];
([3,3,0],1) -> [3,3,0,1];
([1,1],3) -> [1,1,3];
([0],1) -> [0,1];
([0,1,3],3) -> [0,1,3,3];
([1,0,3],3) -> [1,0,3,3];
([2,3,3],1) -> [2,3,3,1];
([2,2],2) -> [2,2,2];
([3],3) -> [3,3];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([3,1,3],3) -> [3,1,3,3];
([2],2) -> [2,2];
([0,0,0],1) -> [0,0,0,1];
([1,2,0],0) -> [1,2,0,0];
([1,1],1) -> [1,1,1];
([0,2,3],3) -> [0,2,3,3];
([],1) -> [1];
([1],3) -> [1,3];
([1,1,3],3) -> [1,1,3,3];
([0,1],2) -> [0,1,2];
([0,2,3],1) -> [0,2,3,1];
([],0) -> [0];
([3,0],1) -> [3,0,1];
([2,0,1],1) -> [2,0,1,1];
([0,2,1],1) -> [0,2,1,1];
([],2) -> [2];
([0,3],1) -> [0,3,1];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([3,1],3) -> [3,1,3];
([1,3],3) -> [1,3,3];
([3],0) -> [3,0];
([2,2],3) -> [2,2,3];
([],0) -> [0];
([],1) -> [1];
([0,3],2) -> [0,3,2];
([1,2],0) -> [1,2,0];
([3,0],2) -> [3,0,2];
([1,1],1) -> [1,1,1];
([3,1],0) -> [3,1,0];
([],2) -> [2];
([3,0,3],2) -> [3,0,3,2];
([1,2],2) -> [1,2,2];
([0,2,0],1) -> [0,2,0,1];
([3,2],2) -> [3,2,2];
([3],1) -> [3,1];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([1],3) -> [1,3];
([2],1) -> [2,1];
([1,2,3],2) -> [1,2,3,2];
([],2) -> [2];
([0],3) -> [0,3];
([3,0,3],2) -> [3,0,3,2];
([2],3) -> [2,3];
([3,0],0) -> [3,0,0];
([1,0,1],3) -> [1,0,1,3];
([1,2],1) -> [1,2,1];
([3],2) -> [3,2];
([1,2,2],1) -> [1,2,2,1];
([],0) -> [0];
([],1) -> [1];
([],3) -> [3];
([1,2,1],0) -> [1,2,1,0];
([3,1,1],3) -> [3,1,1,3];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([3,3],2) -> [3,3,2];
([3],2) -> [3,2];
([0],1) -> [0,1];
([2,2],3) -> [2,2,3];
([0],0) -> [0,0];
([2],2) -> [2,2];
([],0) -> [0];
([],3) -> [3];
([3,3],3) -> [3,3,3];
([1,2],2) -> [1,2,2];
([1],1) -> [1,1];
([2,2,2],2) -> [2,2,2,2];
([2,2],2) -> [2,2,2];
([3,0,3],0) -> [3,0,3,0];
([3],3) -> [3,3];
([1,0,0],2) -> [1,0,0,2];
([1,2,2],3) -> [1,2,2,3];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([2,1,1],3) -> [2,1,1,3];
([],3) -> [3];
([],2) -> [2];
([2],1) -> [2,1];
([1,3],2) -> [1,3,2];
([1,0],1) -> [1,0,1];
([],0) -> [0];
([3,2,0],3) -> [3,2,0,3];
([0],0) -> [0,0];
([2,1,1],2) -> [2,1,1,2];
([3,3,1],2) -> [3,3,1,2];
([2,3],0) -> [2,3,0];
([1],0) -> [1,0];
([0,3,0],3) -> [0,3,0,3];
([0,2],1) -> [0,2,1];
([3,3,2],1) -> [3,3,2,1];
([2,3,1],3) -> [2,3,1,3];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([0,0,1],1) -> [0,0,1,1];
([],3) -> [3];
([0,3],1) -> [0,3,1];
([2,2,1],1) -> [2,2,1,1];
([0],1) -> [0,1];
([1,0],2) -> [1,0,2];
([3,3],2) -> [3,3,2];
([1],2) -> [1,2];
([3],2) -> [3,2];
([2,1],2) -> [2,1,2];
([],2) -> [2];
([2,0,2],1) -> [2,0,2,1];
([1],1) -> [1,1];
([],0) -> [0];
([3],0) -> [3,0];
([1,1],1) -> [1,1,1];
([0,2,3],0) -> [0,2,3,0];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([3],3) -> [3,3];
([3,2,0],3) -> [3,2,0,3];
([2,0],3) -> [2,0,3];
([0],1) -> [0,1];
([1],3) -> [1,3];
([0,3,0],3) -> [0,3,0,3];
([0],2) -> [0,2];
([3,2,1],0) -> [3,2,1,0];
([0,1,3],0) -> [0,1,3,0];
([0,1,0],0) -> [0,1,0,0];
([],3) -> [3];
([0,2],1) -> [0,2,1];
([],1) -> [1];
([2],1) -> [2,1];
([1,1,1],3) -> [1,1,1,3];
([1,3,0],2) -> [1,3,0,2];
([1],2) -> [1,2];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([0,2,2],1) -> [0,2,2,1];
([0,2,3],1) -> [0,2,3,1];
([],1) -> [1];
([3,1],1) -> [3,1,1];
([],0) -> [0];
([],3) -> [3];
([3,2],3) -> [3,2,3];
([0,3],2) -> [0,3,2];
([1,1,2],1) -> [1,1,2,1];
([2],3) -> [2,3];
([0],0) -> [0,0];
([0],1) -> [0,1];
([],2) -> [2];
([0,3],1) -> [0,3,1];
([1,0],0) -> [1,0,0];
([2,0],0) -> [2,0,0];
([1],3) -> [1,3];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([2,0],1) -> [2,0,1];
([3,1,2],3) -> [3,1,2,3];
([3],1) -> [3,1];
([0],1) -> [0,1];
([],1) -> [1];
([3],3) -> [3,3];
([2,3],2) -> [2,3,2];
([0,3],0) -> [0,3,0];
([2],3) -> [2,3];
([],3) -> [3];
([0,2,0],3) -> [0,2,0,3];
([0,3,0],1) -> [0,3,0,1];
([0,1],1) -> [0,1,1];
([1,1],3) -> [1,1,3];
([],2) -> [2];
([3,3,2],3) -> [3,3,2,3];
([1],3) -> [1,3];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([1],0) -> [1,0];
([],1) -> [1];
([3,0,0],0) -> [3,0,0,0];
([1,2,0],1) -> [1,2,0,1];
([2,0],1) -> [2,0,1];
([3,0,3],1) -> [3,0,3,1];
([],2) -> [2];
([2,3],1) -> [2,3,1];
([0],3) -> [0,3];
([2],0) -> [2,0];
([0],1) -> [0,1];
([],0) -> [0];
([2,1,0],1) -> [2,1,0,1];
([0,2],2) -> [0,2,2];
([1],1) -> [1,1];
([3,0,1],0) -> [3,0,1,0];
([],3) -> [3];
([3,2],1) -> [3,2,1];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([3,2],1) -> [3,2,1];
([0],2) -> [0,2];
([2,2],0) -> [2,2,0];
([2],2) -> [2,2];
([0],3) -> [0,3];
([1],2) -> [1,2];
([2,3,3],3) -> [2,3,3,3];
([2,2,1],3) -> [2,2,1,3];
([0,1],1) -> [0,1,1];
([2,1,1],3) -> [2,1,1,3];
([2,3],2) -> [2,3,2];
([],2) -> [2];
([],1) -> [1];
([2,1,2],1) -> [2,1,2,1];
([1,3,2],3) -> [1,3,2,3];
([1,3,2],0) -> [1,3,2,0];
([3],3) -> [3,3];
([3,3,1],3) -> [3,3,1,3];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([1,2,1],1) -> [1,2,1,1];
([3,2],2) -> [3,2,2];
([3,3,1],0) -> [3,3,1,0];
([],1) -> [1];
([0],1) -> [0,1];
([3],0) -> [3,0];
([1,0,2],2) -> [1,0,2,2];
([],3) -> [3];
([1],0) -> [1,0];
([1],3) -> [1,3];
([0],0) -> [0,0];
([],2) -> [2];
([2,1,1],1) -> [2,1,1,1];
([2,3,0],1) -> [2,3,0,1];
([0,3,1],0) -> [0,3,1,0];
([1,1,1],2) -> [1,1,1,2];
([3],2) -> [3,2];
([1,2,1],3) -> [1,2,1,3];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([2],0) -> [2,0];
([],2) -> [2];
([0,0,1],1) -> [0,0,1,1];
([],1) -> [1];
([],3) -> [3];
([1,3,3],2) -> [1,3,3,2];
([3],2) -> [3,2];
([3,0],3) -> [3,0,3];
([1,1,3],0) -> [1,1,3,0];
([],0) -> [0];
([1],2) -> [1,2];
([2],1) -> [2,1];
([0],3) -> [0,3];
([0,0],3) -> [0,0,3];
([1],0) -> [1,0];
([0,2,0],2) -> [0,2,0,2];
([0,2],0) -> [0,2,0];
([0,2,0],3) -> [0,2,0,3];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([],3) -> [3];
([],2) -> [2];
([0],1) -> [0,1];
([2,0,3],2) -> [2,0,3,2];
([1,1],0) -> [1,1,0];
([3,3,0],2) -> [3,3,0,2];
([1,3,0],3) -> [1,3,0,3];
([0,3],1) -> [0,3,1];
([1,2,2],3) -> [1,2,2,3];
([1,2],1) -> [1,2,1];
([1,2],3) -> [1,2,3];
([3,1,2],2) -> [3,1,2,2];
([1],2) -> [1,2];
([],0) -> [0];
([3,0,0],3) -> [3,0,0,3];
([1,0,3],2) -> [1,0,3,2];
([2,3],0) -> [2,3,0];
([2],2) -> [2,2];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([1,1],0) -> [1,1,0];
([3],3) -> [3,3];
([0],3) -> [0,3];
([2,0,1],1) -> [2,0,1,1];
([2,1,0],1) -> [2,1,0,1];
([1,0,0],0) -> [1,0,0,0];
([1],3) -> [1,3];
([],0) -> [0];
([1,3,2],2) -> [1,3,2,2];
([0],2) -> [0,2];
([],3) -> [3];
([0],0) -> [0,0];
([],1) -> [1];
([3,2],1) -> [3,2,1];
([0,1,3],1) -> [0,1,3,1];
([3,1,1],3) -> [3,1,1,3];
([2],3) -> [2,3];
([3,1,0],0) -> [3,1,0,0];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([1,2,0],2) -> [1,2,0,2];
([0],1) -> [0,1];
([1],3) -> [1,3];
([1,0,0],3) -> [1,0,0,3];
([3,2],0) -> [3,2,0];
([],1) -> [1];
([0,3,3],2) -> [0,3,3,2];
([1,2],1) -> [1,2,1];
([0,1],1) -> [0,1,1];
([3,1],2) -> [3,1,2];
([1],0) -> [1,0];
([],0) -> [0];
([2,0],2) -> [2,0,2];
([1,1,1],3) -> [1,1,1,3];
([],3) -> [3];
([0],3) -> [0,3];
([2],1) -> [2,1];
([0,1,0],3) -> [0,1,0,3];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([],1) -> [1];
([],0) -> [0];
([0],1) -> [0,1];
([],3) -> [3];
([3],2) -> [3,2];
([0],0) -> [0,0];
([3,2],0) -> [3,2,0];
([0,3],1) -> [0,3,1];
([1,0],3) -> [1,0,3];
([],2) -> [2];
([0],2) -> [0,2];
([0,0,3],3) -> [0,0,3,3];
([1,1,1],1) -> [1,1,1,1];
([2],1) -> [2,1];
([1,1,3],0) -> [1,1,3,0];
([0,3,0],3) -> [0,3,0,3];
([1,2,0],1) -> [1,2,0,1];
([0,2],0) -> [0,2,0];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([2,2,0],3) -> [2,2,0,3];
([3,0],0) -> [3,0,0];
([],0) -> [0];
([3],1) -> [3,1];
([1],3) -> [1,3];
([1,3],3) -> [1,3,3];
([0,2],1) -> [0,2,1];
([0,2,2],1) -> [0,2,2,1];
([0],0) -> [0,0];
([],1) -> [1];
([0,1,0],0) -> [0,1,0,0];
([3,0],1) -> [3,0,1];
([],3) -> [3];
([2,2,1],2) -> [2,2,1,2];
([2],0) -> [2,0];
([0,1,3],1) -> [0,1,3,1];
([2],1) -> [2,1];
([2,3],2) -> [2,3,2];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([2,1],2) -> [2,1,2];
([0],3) -> [0,3];
([3,2,0],3) -> [3,2,0,3];
([0,0],0) -> [0,0,0];
([],2) -> [2];
([0,0,2],1) -> [0,0,2,1];
([3],3) -> [3,3];
([0,0],2) -> [0,0,2];
([3],0) -> [3,0];
([2],3) -> [2,3];
([0,3,3],2) -> [0,3,3,2];
([],1) -> [1];
([1],2) -> [1,2];
([0,0,3],1) -> [0,0,3,1];
([1,1],3) -> [1,1,3];
([2,0],1) -> [2,0,1];
([2,2,0],2) -> [2,2,0,2];
([2,0],2) -> [2,0,2];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([],2) -> [2];
([1],1) -> [1,1];
([0,3],2) -> [0,3,2];
([0],0) -> [0,0];
([0,1],2) -> [0,1,2];
([2,1,2],0) -> [2,1,2,0];
([1,2,2],3) -> [1,2,2,3];
([1],2) -> [1,2];
([2,2],0) -> [2,2,0];
([1,2],2) -> [1,2,2];
([0],2) -> [0,2];
([2,0],1) -> [2,0,1];
([3,1],0) -> [3,1,0];
([0],1) -> [0,1];
([2,0,0],2) -> [2,0,0,2];
([2],3) -> [2,3];
([],0) -> [0];
([3],0) -> [3,0];
([0,2],2) -> [0,2,2];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([],1) -> [1];
([0],2) -> [0,2];
([2,1,3],1) -> [2,1,3,1];
([1,2,2],2) -> [1,2,2,2];
([0,1],0) -> [0,1,0];
([2],2) -> [2,2];
([],3) -> [3];
([3,3,2],3) -> [3,3,2,3];
([],2) -> [2];
([2,2],2) -> [2,2,2];
([0,0],2) -> [0,0,2];
([0,0,1],0) -> [0,0,1,0];
([1,0,0],3) -> [1,0,0,3];
([2,0,0],0) -> [2,0,0,0];
([0],0) -> [0,0];
([0,3,3],0) -> [0,3,3,0];
([],0) -> [0];
([0,0],1) -> [0,0,1];
([1,3,2],1) -> [1,3,2,1];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([1],2) -> [1,2];
([1],0) -> [1,0];
([0,2],0) -> [0,2,0];
([0,3,0],1) -> [0,3,0,1];
([2,3],3) -> [2,3,3];
([1,3],2) -> [1,3,2];
([0,1,0],2) -> [0,1,0,2];
([3],2) -> [3,2];
([1,0],1) -> [1,0,1];
([0],2) -> [0,2];
([2,2,2],0) -> [2,2,2,0];
([1],1) -> [1,1];
([2,0,0],3) -> [2,0,0,3];
([0,1],1) -> [0,1,1];
([2],1) -> [2,1];
([],2) -> [2];
([2,0],3) -> [2,0,3];
([],1) -> [1];
([2,1],0) -> [2,1,0];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([],0) -> [0];
([0,1],1) -> [0,1,1];
([0],2) -> [0,2];
([1,1,0],0) -> [1,1,0,0];
([1,0,1],1) -> [1,0,1,1];
([2,3],1) -> [2,3,1];
([3,0],0) -> [3,0,0];
([],1) -> [1];
([3,1,2],1) -> [3,1,2,1];
([1],0) -> [1,0];
([0,2,1],2) -> [0,2,1,2];
([2,1,3],1) -> [2,1,3,1];
([2],3) -> [2,3];
([1,3],3) -> [1,3,3];
([3,3],1) -> [3,3,1];
([],2) -> [2];
([1,3],1) -> [1,3,1];
([3],1) -> [3,1];
([0,3,0],2) -> [0,3,0,2];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([2,1,3],3) -> [2,1,3,3];
([2,1,1],3) -> [2,1,1,3];
([1,2,1],1) -> [1,2,1,1];
([3,1],0) -> [3,1,0];
([],3) -> [3];
([2],2) -> [2,2];
([0,3,1],1) -> [0,3,1,1];
([0,1,3],3) -> [0,1,3,3];
([1,3],2) -> [1,3,2];
([3,1,2],2) -> [3,1,2,2];
([1,2],3) -> [1,2,3];
([],2) -> [2];
([1,0],2) -> [1,0,2];
([1,2],1) -> [1,2,1];
([],0) -> [0];
([1,3],3) -> [1,3,3];
([1,1,2],1) -> [1,1,2,1];
([2,1,2],3) -> [2,1,2,3];
([1],2) -> [1,2];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([],1) -> [1];
([0],1) -> [0,1];
([0,1,0],0) -> [0,1,0,0];
([3],3) -> [3,3];
([],3) -> [3];
([1,2,3],3) -> [1,2,3,3];
([2],0) -> [2,0];
([1],2) -> [1,2];
([0,0],1) -> [0,0,1];
([1,0,1],1) -> [1,0,1,1];
([1,2,3],1) -> [1,2,3,1];
([3,3],2) -> [3,3,2];
([1,2],1) -> [1,2,1];
([1],1) -> [1,1];
([],2) -> [2];
([1,2],3) -> [1,2,3];
([3,0,2],3) -> [3,0,2,3];
([3,0],1) -> [3,0,1];
([2,3,2],3) -> [2,3,2,3];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([],3) -> [3];
([3],1) -> [3,1];
([1],0) -> [1,0];
([0],3) -> [0,3];
([3,1],1) -> [3,1,1];
([0,1,0],2) -> [0,1,0,2];
([0,2,0],2) -> [0,2,0,2];
([3,3,0],0) -> [3,3,0,0];
([3,3,1],3) -> [3,3,1,3];
([],1) -> [1];
([1,2],0) -> [1,2,0];
([0,2],3) -> [0,2,3];
([2,1,3],3) -> [2,1,3,3];
([2],1) -> [2,1];
([1,0],2) -> [1,0,2];
([],2) -> [2];
([3,2],2) -> [3,2,2];
([2],0) -> [2,0];
([3],2) -> [3,2];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([1,2,2],0) -> [1,2,2,0];
([2,0],2) -> [2,0,2];
([0,2,0],1) -> [0,2,0,1];
([3],3) -> [3,3];
([1,2,3],3) -> [1,2,3,3];
([0,2],1) -> [0,2,1];
([],3) -> [3];
([1,2,1],1) -> [1,2,1,1];
([],2) -> [2];
([1],3) -> [1,3];
([3,3,3],3) -> [3,3,3,3];
([1,0],1) -> [1,0,1];
([1,0,2],1) -> [1,0,2,1];
([1,3,2],2) -> [1,3,2,2];
([0,1,0],3) -> [0,1,0,3];
([3],0) -> [3,0];
([],0) -> [0];
([],1) -> [1];
([3,1],3) -> [3,1,3];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([1,1],3) -> [1,1,3];
([3],3) -> [3,3];
([0,3],1) -> [0,3,1];
([],1) -> [1];
([1,0],2) -> [1,0,2];
([1,0],3) -> [1,0,3];
([],0) -> [0];
([0,3,3],1) -> [0,3,3,1];
([],3) -> [3];
([1,2,0],1) -> [1,2,0,1];
([1,3,3],3) -> [1,3,3,3];
([0,3,1],1) -> [0,3,1,1];
([0],0) -> [0,0];
([],2) -> [2];
([0,0],0) -> [0,0,0];
([3],1) -> [3,1];
([1,1,1],1) -> [1,1,1,1];
([2,1],3) -> [2,1,3];
([2,2],1) -> [2,2,1];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([2,0],1) -> [2,0,1];
([0,1],3) -> [0,1,3];
([1,2],3) -> [1,2,3];
([3,1],1) -> [3,1,1];
([2],1) -> [2,1];
([],1) -> [1];
([2,2],3) -> [2,2,3];
([2],3) -> [2,3];
([1],3) -> [1,3];
([],2) -> [2];
([2],0) -> [2,0];
([1,1,1],0) -> [1,1,1,0];
([0],2) -> [0,2];
([0,3,2],3) -> [0,3,2,3];
([],3) -> [3];
([2,0,1],3) -> [2,0,1,3];
([],0) -> [0];
([2,1,0],2) -> [2,1,0,2];
([3,2,0],1) -> [3,2,0,1];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([3,2,2],2) -> [3,2,2,2];
([1],2) -> [1,2];
([2],0) -> [2,0];
([0,1,1],2) -> [0,1,1,2];
([2],2) -> [2,2];
([],1) -> [1];
([3],1) -> [3,1];
([3,0],3) -> [3,0,3];
([1,2],2) -> [1,2,2];
([2,2],2) -> [2,2,2];
([],3) -> [3];
([0],2) -> [0,2];
([2,3],0) -> [2,3,0];
([3,1,3],0) -> [3,1,3,0];
([0,1,0],1) -> [0,1,0,1];
([2],3) -> [2,3];
([0,2,3],0) -> [0,2,3,0];
([],0) -> [0];
([1,2],1) -> [1,2,1];
([1,3],0) -> [1,3,0];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([3,0],3) -> [3,0,3];
([0,1,1],3) -> [0,1,1,3];
([],3) -> [3];
([],0) -> [0];
([0,3,2],1) -> [0,3,2,1];
([3],1) -> [3,1];
([2,0,0],3) -> [2,0,0,3];
([1],2) -> [1,2];
([1,1,2],1) -> [1,1,2,1];
([2,2],0) -> [2,2,0];
([2],2) -> [2,2];
([1,0,1],3) -> [1,0,1,3];
([0,0,0],3) -> [0,0,0,3];
([1,2,2],3) -> [1,2,2,3];
([3],2) -> [3,2];
([3,0],2) -> [3,0,2];
([0,3],2) -> [0,3,2];
([],1) -> [1];
([0,1],0) -> [0,1,0];
([1,3,1],3) -> [1,3,1,3];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([0,2,0],3) -> [0,2,0,3];
([],3) -> [3];
([],1) -> [1];
([1,2,2],0) -> [1,2,2,0];
([1],1) -> [1,1];
([],0) -> [0];
([3,2,1],0) -> [3,2,1,0];
([0],0) -> [0,0];
([2,0],3) -> [2,0,3];
([3,0,3],0) -> [3,0,3,0];
([0,0],2) -> [0,0,2];
([3,3],3) -> [3,3,3];
([0,1,0],1) -> [0,1,0,1];
([1,0],0) -> [1,0,0];
([3],0) -> [3,0];
([3,0],0) -> [3,0,0];
([0,0],0) -> [0,0,0];
([3,2],1) -> [3,2,1];
([0],3) -> [0,3];
([1],0) -> [1,0];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([0],0) -> [0,0];
([0],1) -> [0,1];
([0,3,3],0) -> [0,3,3,0];
([1,3],3) -> [1,3,3];
([],2) -> [2];
([3],0) -> [3,0];
([0,2],3) -> [0,2,3];
([],1) -> [1];
([2,2,1],3) -> [2,2,1,3];
([],0) -> [0];
([2,1],3) -> [2,1,3];
([3,0,3],1) -> [3,0,3,1];
([3,3],0) -> [3,3,0];
([3,3,1],0) -> [3,3,1,0];
([1,0,2],0) -> [1,0,2,0];
([2,2,2],1) -> [2,2,2,1];
([1],3) -> [1,3];
([2,3],3) -> [2,3,3];
([1],1) -> [1,1];
([2],3) -> [2,3];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([1],3) -> [1,3];
([2],1) -> [2,1];
([2,3,3],3) -> [2,3,3,3];
([3,3],1) -> [3,3,1];
([2],3) -> [2,3];
([],0) -> [0];
([3],1) -> [3,1];
([],2) -> [2];
([2,2,3],1) -> [2,2,3,1];
([1,0],2) -> [1,0,2];
([1],2) -> [1,2];
([1,1,2],1) -> [1,1,2,1];
([1],1) -> [1,1];
([3,0],0) -> [3,0,0];
([0],0) -> [0,0];
([2,2,0],2) -> [2,2,0,2];
([3,0,0],0) -> [3,0,0,0];
([3],0) -> [3,0];
([2,1],0) -> [2,1,0];
([],1) -> [1];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([2,3,2],0) -> [2,3,2,0];
([3,3],0) -> [3,3,0];
([],0) -> [0];
([3],1) -> [3,1];
([0,3],3) -> [0,3,3];
([],3) -> [3];
([3,0],0) -> [3,0,0];
([3],2) -> [3,2];
([0,0],3) -> [0,0,3];
([3,2],3) -> [3,2,3];
([1,2],1) -> [1,2,1];
([2,1,3],1) -> [2,1,3,1];
([1,1],3) -> [1,1,3];
([2],0) -> [2,0];
([0],1) -> [0,1];
([0,1,1],1) -> [0,1,1,1];
([1,2],0) -> [1,2,0];
([],2) -> [2];
([1,3],2) -> [1,3,2];
([1],3) -> [1,3];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([],0) -> [0];
([1,1],2) -> [1,1,2];
([1],1) -> [1,1];
([0,1],3) -> [0,1,3];
([3,3],1) -> [3,3,1];
([],1) -> [1];
([1],2) -> [1,2];
([1],3) -> [1,3];
([0,1],2) -> [0,1,2];
([0,1],0) -> [0,1,0];
([],3) -> [3];
([0,3,2],3) -> [0,3,2,3];
([1,3,1],3) -> [1,3,1,3];
([],2) -> [2];
([3,1,3],2) -> [3,1,3,2];
([3,1],2) -> [3,1,2];
([2,3,2],0) -> [2,3,2,0];
([3,0],3) -> [3,0,3];
([1,3,2],3) -> [1,3,2,3];
([0],2) -> [0,2];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([],0) -> [0];
([0],3) -> [0,3];
([1,2,0],0) -> [1,2,0,0];
([3],2) -> [3,2];
([3,3],2) -> [3,3,2];
([0,2,0],3) -> [0,2,0,3];
([2,1,1],1) -> [2,1,1,1];
([3,0,0],3) -> [3,0,0,3];
([3,2],1) -> [3,2,1];
([3],1) -> [3,1];
([3,2],0) -> [3,2,0];
([1,0],1) -> [1,0,1];
([2,0,3],3) -> [2,0,3,3];
([1,3,3],3) -> [1,3,3,3];
([1],2) -> [1,2];
([],2) -> [2];
([3,2,1],0) -> [3,2,1,0];
([1,3],1) -> [1,3,1];
([],3) -> [3];
([2],0) -> [2,0];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([0,1,1],3) -> [0,1,1,3];
([2,3],2) -> [2,3,2];
([0,1,2],2) -> [0,1,2,2];
([],3) -> [3];
([2],3) -> [2,3];
([1,2,0],3) -> [1,2,0,3];
([],2) -> [2];
([2,2],2) -> [2,2,2];
([3,1],1) -> [3,1,1];
([],0) -> [0];
([3],0) -> [3,0];
([0,3],2) -> [0,3,2];
([2],0) -> [2,0];
([3],3) -> [3,3];
([1,0,0],1) -> [1,0,0,1];
([2,2,0],1) -> [2,2,0,1];
([3,2,0],0) -> [3,2,0,0];
([],1) -> [1];
([2,1],2) -> [2,1,2];
([0,0],3) -> [0,0,3];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
([3],3) -> [3,3];
([],0) -> [0];
([],3) -> [3];
([0,1,3],2) -> [0,1,3,2];
([2],0) -> [2,0];
([],1) -> [1];
([0,3,3],1) -> [0,3,3,1];
([1,2,1],3) -> [1,2,1,3];
([2,0,1],2) -> [2,0,1,2];
([0],1) -> [0,1];
([0],2) -> [0,2];
([1],3) -> [1,3];
([1],2) -> [1,2];
([],2) -> [2];
([2,1,1],0) -> [2,1,1,0];
([2,3,1],1) -> [2,3,1,1];
([1,1,1],2) -> [1,1,1,2];
([1,0],1) -> [1,0,1];
([0,0],3) -> [0,0,3];
([0],0) -> [0,0];

=================================
b'start synthesis with ((mode SyRup) (atomicSize 3) (matchDepth 1) (ctorDepth 0) (condWidth 1)\n (totalHeight 0))\n'
