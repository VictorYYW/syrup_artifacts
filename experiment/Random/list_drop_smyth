list_drop
([0],1) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> [] in list_drop) : NatList -> Nat -> NatList)
0.00381700000003 false false

([],2) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> [] in list_drop) : NatList -> Nat -> NatList)
0.00369099999989 false false

([],2) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> [] in list_drop) : NatList -> Nat -> NatList)
0.00368000000003 false false

([],1) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> [] in list_drop) : NatList -> Nat -> NatList)
0.00360500000011 false false

([],0) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> [] in list_drop) : NatList -> Nat -> NatList)
0.00380500000006 false false

([2],1) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> [] in list_drop) : NatList -> Nat -> NatList)
0.00363900000002 false false

([3,2,0],2) -> [0];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> [0] in list_drop) : NatList -> Nat -> NatList)
0.00384600000007 false false

([2,3,2],0) -> [2,3,2];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> xs in list_drop) : NatList -> Nat -> NatList)
0.00471700000003 false false

([],0) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> [] in list_drop) : NatList -> Nat -> NatList)
0.00387500000011 false false

([1,0],0) -> [1,0];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> xs in list_drop) : NatList -> Nat -> NatList)
0.00410699999998 false false

([2,2,3],2) -> [3];
([],0) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      [S n] in list_drop) : NatList -> Nat -> NatList)
0.00695700000006 false false

([],1) -> [];
([0],0) -> [0];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> xs in list_drop) : NatList -> Nat -> NatList)
0.003649 false false

([0,0,1],3) -> [];
([3,2],0) -> [3,2];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00546099999997 false false

([2,3],2) -> [];
([1],1) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> [] in list_drop) : NatList -> Nat -> NatList)
0.00363500000003 false false

([0,3,2],0) -> [0,3,2];
([],0) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> xs in list_drop) : NatList -> Nat -> NatList)
0.00371399999995 false false

([2,3],0) -> [2,3];
([2,3],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00529800000004 false false

([0,3,3],2) -> [3];
([0,2,3],3) -> [];

=================================
NOSOL

([],3) -> [];
([3,2],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> [] in list_drop) : NatList -> Nat -> NatList)
0.00379700000008 false false

([],0) -> [];
([1],2) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> [] in list_drop) : NatList -> Nat -> NatList)
0.00371300000006 false false

([],2) -> [];
([3,0],1) -> [0];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
0.00568399999997 false false

([],2) -> [];
([0,3],0) -> [0,3];
([1],2) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00650999999993 false false

([3,0],2) -> [];
([0,3],0) -> [0,3];
([],2) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.006891 false false

([3,1,3],1) -> [1,3];
([2,3,1],0) -> [2,3,1];
([1,0,1],0) -> [1,0,1];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [n, S (S n)] in list_drop) : NatList -> Nat -> NatList)
0.00744400000008 false false

([2],0) -> [2];
([1,0],1) -> [0];
([1,1,2],0) -> [1,1,2];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [0] in list_drop) : NatList -> Nat -> NatList)
0.00579700000003 false false

([3],1) -> [];
([3,1,2],0) -> [3,1,2];
([0,1],0) -> [0,1];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00485800000001 false false

([],1) -> [];
([],3) -> [];
([2],1) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> [] in list_drop) : NatList -> Nat -> NatList)
0.00359400000002 false false

([2],2) -> [];
([2],0) -> [2];
([0],0) -> [0];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00480599999992 false false

([1],1) -> [];
([],3) -> [];
([2,3],1) -> [3];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
0.00513000000001 false false

([],2) -> [];
([],1) -> [];
([2,1,0],2) -> [0];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      [0] in list_drop) : NatList -> Nat -> NatList)
0.0056219999999 false false

([0],0) -> [0];
([2,0],0) -> [2,0];
([2],0) -> [2];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> xs in list_drop) : NatList -> Nat -> NatList)
0.00381199999993 false false

([1],0) -> [1];
([3],0) -> [3];
([3,3],0) -> [3,3];
([],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> xs in list_drop) : NatList -> Nat -> NatList)
0.00370599999997 false false

([3,1,1],2) -> [1];
([3],2) -> [];
([1,0,2],3) -> [];
([0,1,0],0) -> [0,1,0];

=================================
NOSOL

([2,3,3],0) -> [2,3,3];
([3,2],1) -> [2];
([1,2,1],0) -> [1,2,1];
([],1) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0288969999999 false true

([0,2,2],1) -> [2,2];
([],0) -> [];
([0],0) -> [0];
([2],2) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          [0]

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          Cons (0, list_drop (#2.2 y1) n)

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
0.023821 false false

([2,0,2],0) -> [2,0,2];
([],2) -> [];
([0],3) -> [];
([1,1],0) -> [1,1];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00628600000005 false false

([],0) -> [];
([2,2],2) -> [];
([2],2) -> [];
([2,2],0) -> [2,2];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00601099999994 false false

([1],0) -> [1];
([3,0,2],2) -> [2];
([],0) -> [];
([1,1],1) -> [1];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [n] in list_drop) : NatList -> Nat -> NatList)
0.00693200000001 false false

([3,0],2) -> [];
([],1) -> [];
([3],0) -> [3];
([3],2) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00628699999993 false false

([],0) -> [];
([1],1) -> [];
([2,0,1],3) -> [];
([2],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> [] in list_drop) : NatList -> Nat -> NatList)
0.00357200000008 false false

([],1) -> [];
([1,1,3],2) -> [3];
([2,0,3],1) -> [0,3];
([1,2],2) -> [];

=================================
NOSOL

([3,3],3) -> [];
([],1) -> [];
([0,2],1) -> [2];
([],2) -> [];
([3,2],2) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.1 y1 of
        Z y2 -> 
          [S n]

        S y2 -> 
          [] in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.1 y1 of
        Z y2 -> 
          Cons (S n, list_drop (#2.2 y1) n)

        S y2 -> 
          [] in list_drop) : NatList -> Nat -> NatList)
0.013066 false false

([0,2,0],3) -> [];
([],3) -> [];
([0],3) -> [];
([2],0) -> [2];
([2,2],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.0063869999999 false false

([],1) -> [];
([],2) -> [];
([],3) -> [];
([1],3) -> [];
([3,1],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> [] in list_drop) : NatList -> Nat -> NatList)
0.0035620000001 false false

([0,0,3],1) -> [0,3];
([1],0) -> [1];
([],0) -> [];
([2],3) -> [];
([1,3],2) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.033752 true true

([2],3) -> [];
([2,0],1) -> [0];
([],1) -> [];
([2,1],3) -> [];
([2,1,3],0) -> [2,1,3];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.02908 true true

([0,0],0) -> [0,0];
([],0) -> [];
([0,0],1) -> [0];
([3,2,2],2) -> [2];
([0,2],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.033111 true true

([3],0) -> [3];
([2],3) -> [];
([0,2],0) -> [0,2];
([2,1,2],3) -> [];
([],2) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00642199999993 false false

([0],1) -> [];
([3,0],2) -> [];
([2],0) -> [2];
([3],1) -> [];
([3,0,0],1) -> [0,0];

=================================
NOSOL

([],3) -> [];
([0,2],1) -> [2];
([1,3],3) -> [];
([3,1,3],2) -> [3];
([0,2,0],0) -> [0,2,0];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0214249999999 true true

([0,3],2) -> [];
([3,2,3],1) -> [2,3];
([0],1) -> [];
([2,3,1],2) -> [1];
([],0) -> [];

=================================
NOSOL

([],2) -> [];
([3],0) -> [3];
([3,1],2) -> [];
([],0) -> [];
([0],0) -> [0];
([1],1) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00609699999995 false false

([],3) -> [];
([0,2],0) -> [0,2];
([1,3],2) -> [];
([2],3) -> [];
([1],3) -> [];
([3,0],0) -> [3,0];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.006349 false false

([0],2) -> [];
([],2) -> [];
([0,1,2],1) -> [1,2];
([1,0,1],2) -> [1];
([],0) -> [];
([2,0,0],1) -> [0,0];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      case xs of
        Nil y2 -> 
          []

        Cons y2 -> 
          list_drop (#2.2 y2) y1 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      case xs of
        Nil y2 -> 
          []

        Cons y2 -> 
          list_drop (#2.2 y2) y1 in list_drop) : NatList -> Nat -> NatList)
0.09898 true true

([2],0) -> [2];
([3,1],0) -> [3,1];
([1,0],2) -> [];
([1],1) -> [];
([0,2,2],0) -> [0,2,2];
([1],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00538400000005 false false

([],2) -> [];
([2,2],3) -> [];
([3,2],2) -> [];
([1,0],1) -> [0];
([1],0) -> [1];
([3,0],2) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0249260000001 true true

([1,2,1],1) -> [2,1];
([0,0,2],1) -> [0,2];
([2,1,2],3) -> [];
([1,1,0],3) -> [];
([0,2],1) -> [2];
([3,2,3],0) -> [3,2,3];

=================================
NOSOL

([3,2,0],1) -> [2,0];
([1],1) -> [];
([],3) -> [];
([0],0) -> [0];
([2],3) -> [];
([3,2],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0416680000001 true true

([2],2) -> [];
([0],0) -> [0];
([3,3],0) -> [3,3];
([0,1],2) -> [];
([],1) -> [];
([1],1) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00618699999995 false false

([],1) -> [];
([0,3,2],3) -> [];
([2],2) -> [];
([2,0],0) -> [2,0];
([],2) -> [];
([2,3,3],2) -> [3];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0289170000001 true true

([3,2],1) -> [2];
([3,1,3],1) -> [1,3];
([3,3],0) -> [3,3];
([1,1,2],1) -> [1,2];
([3,3,1],2) -> [1];
([0,3,0],3) -> [];

=================================
NOSOL

([3,2,1],2) -> [1];
([1,1,2],0) -> [1,1,2];
([1,2],3) -> [];
([3,3,0],3) -> [];
([],2) -> [];
([2],0) -> [2];
([2],1) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.040622 true true

([2,1],2) -> [];
([0,3],2) -> [];
([1],3) -> [];
([0],2) -> [];
([],0) -> [];
([2,3,1],3) -> [];
([],1) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> [] in list_drop) : NatList -> Nat -> NatList)
0.00355399999989 false false

([],1) -> [];
([3,1,1],2) -> [1];
([1],0) -> [1];
([3],2) -> [];
([0,1,0],0) -> [0,1,0];
([3,2,3],1) -> [2,3];
([3,2],0) -> [3,2];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.03423 true true

([],3) -> [];
([3,1],0) -> [3,1];
([0,1],2) -> [];
([1,0],3) -> [];
([0,3],2) -> [];
([],2) -> [];
([3,0],1) -> [0];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      case y1 of
        Z y2 -> 
          [0]

        S y2 -> 
          [] in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0230349999999 false true

([3,0,0],1) -> [0,0];
([3,0],2) -> [];
([],1) -> [];
([2,1,0],1) -> [1,0];
([3,2,1],3) -> [];
([],0) -> [];
([3,1],2) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      case xs of
        Nil y2 -> 
          []

        Cons y2 -> 
          list_drop (#2.2 y2) y1 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      case xs of
        Nil y2 -> 
          []

        Cons y2 -> 
          list_drop (#2.2 y2) y1 in list_drop) : NatList -> Nat -> NatList)
0.0189820000001 true true

([3,1],3) -> [];
([3,0],1) -> [0];
([3,1],2) -> [];
([3,0,3],1) -> [0,3];
([],2) -> [];
([1,1,1],2) -> [1];
([2,3],0) -> [2,3];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0230919999999 true true

([2,0,0],2) -> [0];
([3,3],1) -> [3];
([2,3,1],2) -> [1];
([],0) -> [];
([3,1],1) -> [1];
([1,3,3],3) -> [];
([3,0,2],1) -> [0,2];

=================================
NOSOL

([2,0,0],0) -> [2,0,0];
([1],0) -> [1];
([0],1) -> [];
([1,2],1) -> [2];
([3,3],0) -> [3,3];
([],2) -> [];
([0,1],0) -> [0,1];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.028536 false true

([2,3,1],0) -> [2,3,1];
([],1) -> [];
([1],1) -> [];
([],0) -> [];
([0],1) -> [];
([3,3,3],3) -> [];
([0,2,1],2) -> [1];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.090987 true true

([0,0],2) -> [];
([2],3) -> [];
([],2) -> [];
([1,1,2],0) -> [1,1,2];
([3,3],0) -> [3,3];
([],1) -> [];
([1,1,0],0) -> [1,1,0];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00637699999993 false false

([1,0,2],0) -> [1,0,2];
([],3) -> [];
([2],3) -> [];
([0,1],3) -> [];
([2,1,0],1) -> [1,0];
([],1) -> [];
([1],1) -> [];
([2],2) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.050913 true true

([2,2],3) -> [];
([1,2,2],0) -> [1,2,2];
([3,0,3],0) -> [3,0,3];
([3,0],0) -> [3,0];
([3],0) -> [3];
([],2) -> [];
([0],3) -> [];
([],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00644200000011 false false

([0,1,2],1) -> [1,2];
([],1) -> [];
([3,1,2],0) -> [3,1,2];
([1],1) -> [];
([3,0],0) -> [3,0];
([1,1,2],1) -> [1,2];
([2,1,1],2) -> [1];
([2,2,3],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0379310000001 true true

([3],1) -> [];
([],1) -> [];
([0,3],1) -> [3];
([],2) -> [];
([2,1],2) -> [];
([2],3) -> [];
([0],3) -> [];
([2],0) -> [2];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0277329999999 true true

([0,2,2],2) -> [2];
([1,2],0) -> [1,2];
([3],3) -> [];
([],1) -> [];
([2,1,2],1) -> [1,2];
([2],0) -> [2];
([1,2],1) -> [2];
([],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0341519999999 true true

([1,1,1],2) -> [1];
([2],2) -> [];
([2,2],3) -> [];
([3],3) -> [];
([2,1,3],2) -> [3];
([1,3],2) -> [];
([0,0,0],0) -> [0,0,0];
([2],1) -> [];

=================================
NOSOL

([1,1],3) -> [];
([2,2,1],3) -> [];
([1,3,2],1) -> [3,2];
([],3) -> [];
([3,3],3) -> [];
([0,2,1],3) -> [];
([0,1],1) -> [1];
([],1) -> [];

=================================
NOSOL

([0,3],2) -> [];
([3],1) -> [];
([0],0) -> [0];
([0],1) -> [];
([1,3],1) -> [3];
([],3) -> [];
([0,1,3],1) -> [1,3];
([],2) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.032674 true true

([3,3,1],2) -> [1];
([],0) -> [];
([1,1,2],1) -> [1,2];
([],1) -> [];
([2],0) -> [2];
([1,2,2],3) -> [];
([0,0],3) -> [];
([3,2],0) -> [3,2];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.092306 true true

([3],0) -> [3];
([0,2,2],1) -> [2,2];
([0],3) -> [];
([1,2],2) -> [];
([1],0) -> [1];
([],1) -> [];
([2,1,3],1) -> [1,3];
([2,1,1],0) -> [2,1,1];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0469579999999 true true

([2],1) -> [];
([],0) -> [];
([2,0,0],1) -> [0,0];
([0],3) -> [];
([2],2) -> [];
([1,1,2],2) -> [2];
([],3) -> [];
([3,2],3) -> [];
([1,0,3],1) -> [0,3];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      case xs of
        Nil y2 -> 
          []

        Cons y2 -> 
          list_drop (#2.2 y2) y1 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      case xs of
        Nil y2 -> 
          []

        Cons y2 -> 
          list_drop (#2.2 y2) y1 in list_drop) : NatList -> Nat -> NatList)
0.099125 true true

([],2) -> [];
([3],2) -> [];
([2,3,0],3) -> [];
([0,3],2) -> [];
([2,1,3],3) -> [];
([3,0,0],3) -> [];
([],0) -> [];
([3,1],0) -> [3,1];
([3],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00649999999996 false false

([3,3],3) -> [];
([2,0,2],0) -> [2,0,2];
([3,2,0],2) -> [0];
([2],3) -> [];
([],0) -> [];
([0,0,1],3) -> [];
([0],0) -> [0];
([],3) -> [];
([0,2],2) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.112483 true true

([0,1,0],0) -> [0,1,0];
([2],3) -> [];
([3],2) -> [];
([],1) -> [];
([3,1],3) -> [];
([2],2) -> [];
([1],2) -> [];
([1,3,0],0) -> [1,3,0];
([1,3],2) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00654600000007 false false

([3,2],2) -> [];
([],1) -> [];
([3,0,1],3) -> [];
([],0) -> [];
([2,2,1],0) -> [2,2,1];
([1],0) -> [1];
([2,0],1) -> [0];
([],3) -> [];
([1,0,2],0) -> [1,0,2];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.078919 true true

([],0) -> [];
([3,1,2],3) -> [];
([0],2) -> [];
([],3) -> [];
([3,3],3) -> [];
([0,2,0],1) -> [2,0];
([3,3,3],1) -> [3,3];
([1,0,2],0) -> [1,0,2];
([3,1,0],1) -> [1,0];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.11894 true true

([0],3) -> [];
([1,3,0],0) -> [1,3,0];
([2],3) -> [];
([2,1,1],1) -> [1,1];
([0],2) -> [];
([3,0,1],0) -> [3,0,1];
([],1) -> [];
([3,2,0],0) -> [3,2,0];
([0,2],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0854409999999 true true

([],1) -> [];
([1,2],3) -> [];
([],0) -> [];
([2],2) -> [];
([1,1],3) -> [];
([1,3,2],1) -> [3,2];
([],3) -> [];
([0,0],0) -> [0,0];
([0,3,0],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.084286 true true

([2],3) -> [];
([],3) -> [];
([0,2],3) -> [];
([0,3],0) -> [0,3];
([],1) -> [];
([0],2) -> [];
([],2) -> [];
([2,3],1) -> [3];
([0,0,1],1) -> [0,1];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0351270000001 true true

([2,3,0],1) -> [3,0];
([],0) -> [];
([1,2],2) -> [];
([1,0,2],1) -> [0,2];
([2,3],1) -> [3];
([0],3) -> [];
([2,0,3],1) -> [0,3];
([3,1,1],1) -> [1,1];
([3],2) -> [];

=================================
NOSOL

([3,1],2) -> [];
([],3) -> [];
([1,3,2],2) -> [2];
([1],0) -> [1];
([0],2) -> [];
([],2) -> [];
([3,1,3],3) -> [];
([3,2,2],1) -> [2,2];
([2],1) -> [];
([0,2,1],2) -> [1];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0499460000001 true true

([0,3,2],0) -> [0,3,2];
([3,0],2) -> [];
([2,0,1],2) -> [1];
([0],1) -> [];
([3,3],0) -> [3,3];
([3,2,1],3) -> [];
([2],1) -> [];
([0],2) -> [];
([],3) -> [];
([0],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0394799999999 true true

([0,0,2],2) -> [2];
([0,3],3) -> [];
([],3) -> [];
([0,0],0) -> [0,0];
([],2) -> [];
([0],0) -> [0];
([],0) -> [];
([1,0],2) -> [];
([2],1) -> [];
([3,1,0],2) -> [0];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0708890000001 true true

([],1) -> [];
([0,0],3) -> [];
([0,0,1],3) -> [];
([],2) -> [];
([0],1) -> [];
([],0) -> [];
([3,3],1) -> [3];
([1],0) -> [1];
([],3) -> [];
([2,0,3],0) -> [2,0,3];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0974430000001 true true

([0,1,2],1) -> [1,2];
([0,0,1],0) -> [0,0,1];
([0],2) -> [];
([2],3) -> [];
([3,3],1) -> [3];
([0,1],0) -> [0,1];
([3,2,2],2) -> [2];
([0,2,2],2) -> [2];
([3],3) -> [];
([],0) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0417179999999 true true

([3,1],1) -> [1];
([1,2],2) -> [];
([1,2,2],2) -> [2];
([3,1,3],3) -> [];
([0,0,1],2) -> [1];
([2,0,1],1) -> [0,1];
([1],3) -> [];
([3],0) -> [3];
([0,3],1) -> [3];
([2,0,3],1) -> [0,3];

=================================
NOSOL

([3],1) -> [];
([],1) -> [];
([2],2) -> [];
([0],3) -> [];
([],0) -> [];
([0],1) -> [];
([0,2,1],0) -> [0,2,1];
([0],2) -> [];
([1,1],3) -> [];
([],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00680800000009 false false

([],0) -> [];
([0,0,0],0) -> [0,0,0];
([0,1],1) -> [1];
([],2) -> [];
([0,0],2) -> [];
([2,3],3) -> [];
([0,2,2],3) -> [];
([2,1],1) -> [1];
([2],1) -> [];
([],1) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.071105 true true

([0,3,3],2) -> [3];
([1,1],2) -> [];
([1,3,3],1) -> [3,3];
([2,1,0],3) -> [];
([3,1],1) -> [1];
([3,0,1],3) -> [];
([0,3],3) -> [];
([3,3],1) -> [3];
([2],2) -> [];
([3],3) -> [];

=================================
NOSOL

([0],1) -> [];
([3],2) -> [];
([3],0) -> [3];
([1],1) -> [];
([1],2) -> [];
([2],2) -> [];
([0,1,1],2) -> [1];
([3,3],3) -> [];
([2,0,1],0) -> [2,0,1];
([],2) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.052453 true true

([1,0],2) -> [];
([1,3,3],0) -> [1,3,3];
([1],2) -> [];
([2,3],3) -> [];
([3,3],3) -> [];
([1],1) -> [];
([0],3) -> [];
([2,1],3) -> [];
([2,2],3) -> [];
([1,2],1) -> [2];
([0,3,0],0) -> [0,3,0];

=================================
NOSOL

([2,0],0) -> [2,0];
([3,1,3],1) -> [1,3];
([3,2],0) -> [3,2];
([],1) -> [];
([1,1],0) -> [1,1];
([1,1],2) -> [];
([3,2,2],2) -> [2];
([3,0,0],3) -> [];
([3,0],0) -> [3,0];
([0,3,3],3) -> [];
([],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.030303 true true

([1,1,1],1) -> [1,1];
([0,0],1) -> [0];
([2,2,0],1) -> [2,0];
([3,1,3],3) -> [];
([3],1) -> [];
([1],1) -> [];
([2,1],0) -> [2,1];
([3,1],3) -> [];
([0,3,2],2) -> [2];
([0,2],2) -> [];
([],0) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.04107 true true

([1,3],2) -> [];
([],2) -> [];
([2,1],0) -> [2,1];
([3],3) -> [];
([0,1],0) -> [0,1];
([0,0,1],1) -> [0,1];
([2,3,2],0) -> [2,3,2];
([3,0],0) -> [3,0];
([1,2,3],0) -> [1,2,3];
([3,2],0) -> [3,2];
([0,2],1) -> [2];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.048585 true true

([1,3,3],3) -> [];
([0,0],0) -> [0,0];
([3],0) -> [3];
([1],2) -> [];
([3,0,1],1) -> [0,1];
([0],2) -> [];
([2],0) -> [2];
([1,1,2],3) -> [];
([],0) -> [];
([0,3],1) -> [3];
([3,1],1) -> [1];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0440149999999 true true

([0,3],0) -> [0,3];
([],2) -> [];
([],0) -> [];
([1],2) -> [];
([2],0) -> [2];
([3,0],3) -> [];
([0,3,2],1) -> [3,2];
([],3) -> [];
([3],3) -> [];
([1],0) -> [1];
([3,2],0) -> [3,2];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.06647 true true

([1,0,3],3) -> [];
([],1) -> [];
([3,3,2],1) -> [3,2];
([2,3,2],0) -> [2,3,2];
([1,2,1],3) -> [];
([2],0) -> [2];
([0,2],2) -> [];
([1,3,1],3) -> [];
([2,0],2) -> [];
([3],2) -> [];
([1,0,1],0) -> [1,0,1];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0544709999999 true true

([1,3],0) -> [1,3];
([],2) -> [];
([0,1,3],2) -> [3];
([2],3) -> [];
([0,1],1) -> [1];
([0,0],3) -> [];
([],3) -> [];
([1],3) -> [];
([],0) -> [];
([2,3,1],0) -> [2,3,1];
([0,1,1],2) -> [1];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.112325 true true

([0],1) -> [];
([],0) -> [];
([0,1,3],1) -> [1,3];
([2],0) -> [2];
([],3) -> [];
([],1) -> [];
([3,2],1) -> [2];
([0,0,2],3) -> [];
([3,1,3],2) -> [3];
([0,2,0],1) -> [2,0];
([3,1,3],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.105914 true true

([2],0) -> [2];
([1,2,2],2) -> [2];
([1,1,1],2) -> [1];
([],3) -> [];
([],2) -> [];
([1],2) -> [];
([1],3) -> [];
([1],0) -> [1];
([1,0],3) -> [];
([0,3,2],2) -> [2];
([],1) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.046499 true true

([2],1) -> [];
([0,0,0],0) -> [0,0,0];
([1],3) -> [];
([],1) -> [];
([3],3) -> [];
([2,1,2],2) -> [2];
([],2) -> [];
([1,0],1) -> [0];
([2,0],0) -> [2,0];
([1,0,3],2) -> [3];
([0,3],2) -> [];
([2],2) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0436729999999 true true

([3],1) -> [];
([],1) -> [];
([0,0,1],2) -> [1];
([],3) -> [];
([3,1,3],1) -> [1,3];
([3,2,3],3) -> [];
([2,3,2],1) -> [3,2];
([2],0) -> [2];
([0,1],1) -> [1];
([3,1],1) -> [1];
([3,3,3],1) -> [3,3];
([0],1) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0457120000001 true true

([0,2],0) -> [0,2];
([1,2,2],1) -> [2,2];
([],3) -> [];
([2,0,3],2) -> [3];
([],2) -> [];
([0,3],0) -> [0,3];
([0,3,1],0) -> [0,3,1];
([2],2) -> [];
([2,2,1],2) -> [1];
([3],1) -> [];
([],0) -> [];
([2],0) -> [2];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.142376 true true

([0,0,2],2) -> [2];
([],2) -> [];
([2],1) -> [];
([3,1,0],0) -> [3,1,0];
([0,2,2],1) -> [2,2];
([0,1],0) -> [0,1];
([3,0,2],0) -> [3,0,2];
([1,0],1) -> [0];
([0,3],2) -> [];
([3,0,3],1) -> [0,3];
([2],0) -> [2];
([3,1,0],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0517480000001 true true

([],1) -> [];
([1,0,0],0) -> [1,0,0];
([2,1],0) -> [2,1];
([1,0,3],1) -> [0,3];
([0],3) -> [];
([],0) -> [];
([],2) -> [];
([2,0,1],1) -> [0,1];
([3,1],0) -> [3,1];
([0,3,0],3) -> [];
([1,3,3],2) -> [3];
([2,3,1],0) -> [2,3,1];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.125657 true true

([],1) -> [];
([1],3) -> [];
([0,2],2) -> [];
([0,0,3],3) -> [];
([0,2,0],3) -> [];
([2],0) -> [2];
([3,1,2],1) -> [1,2];
([2,0],0) -> [2,0];
([1],0) -> [1];
([],2) -> [];
([0,2,0],0) -> [0,2,0];
([1,3],0) -> [1,3];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.045102 true true

([2],3) -> [];
([2,2,3],1) -> [2,3];
([0,0,2],1) -> [0,2];
([],3) -> [];
([0,2,3],2) -> [3];
([2,0,1],1) -> [0,1];
([],2) -> [];
([0],0) -> [0];
([3],3) -> [];
([1,1,2],3) -> [];
([2,1,2],0) -> [2,1,2];
([0,2],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0561769999999 true true

([0,1,2],0) -> [0,1,2];
([],3) -> [];
([],2) -> [];
([0],1) -> [];
([0,0,0],3) -> [];
([0],3) -> [];
([0,0,0],0) -> [0,0,0];
([2,0],3) -> [];
([],0) -> [];
([0,1,3],3) -> [];
([0,2],3) -> [];
([],1) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00638800000002 false false

([2,3],1) -> [3];
([3,0],3) -> [];
([2,3,1],1) -> [3,1];
([1,1,3],0) -> [1,1,3];
([1,0,2],3) -> [];
([1],3) -> [];
([2,2,0],2) -> [0];
([1,0,2],2) -> [2];
([2],2) -> [];
([0,0],3) -> [];
([2,3,3],2) -> [3];
([3,0,0],2) -> [0];

=================================
NOSOL

([3,2],0) -> [3,2];
([],0) -> [];
([3,3,1],0) -> [3,3,1];
([1],0) -> [1];
([],1) -> [];
([],2) -> [];
([0,2,3],1) -> [2,3];
([3],1) -> [];
([0,3],2) -> [];
([0,0,1],3) -> [];
([3],3) -> [];
([2],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.112529 true true

([2],2) -> [];
([],3) -> [];
([1,2],1) -> [2];
([2],1) -> [];
([0],0) -> [0];
([2,2],2) -> [];
([1],1) -> [];
([3],2) -> [];
([1],3) -> [];
([1],2) -> [];
([0,1,0],2) -> [0];
([2,1,2],2) -> [2];
([3,3,2],1) -> [3,2];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0454669999999 true true

([1,0,0],0) -> [1,0,0];
([2,3],3) -> [];
([],3) -> [];
([1,2],3) -> [];
([1],3) -> [];
([3,2],1) -> [2];
([],1) -> [];
([2],2) -> [];
([1,2,1],0) -> [1,2,1];
([0],3) -> [];
([0],1) -> [];
([1],2) -> [];
([2,1],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.044584 true true

([0,2],3) -> [];
([0],0) -> [0];
([],3) -> [];
([1],1) -> [];
([0,3,1],1) -> [3,1];
([1,1,1],1) -> [1,1];
([2,3,3],1) -> [3,3];
([3,0,1],1) -> [0,1];
([],1) -> [];
([2,3],2) -> [];
([2,3,0],2) -> [0];
([3],1) -> [];
([0,0,1],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.057648 true true

([],0) -> [];
([0,3,2],1) -> [3,2];
([0,1],3) -> [];
([2],3) -> [];
([1,0],3) -> [];
([2,3,1],1) -> [3,1];
([],3) -> [];
([0,1],1) -> [1];
([3],3) -> [];
([0,3,3],0) -> [0,3,3];
([2,2],3) -> [];
([3,3],3) -> [];
([3,3],2) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.114339 true true

([3],2) -> [];
([2,0],0) -> [2,0];
([3,3],2) -> [];
([1],3) -> [];
([3],0) -> [3];
([1,0],2) -> [];
([],0) -> [];
([1,1,0],1) -> [1,0];
([2,3,3],0) -> [2,3,3];
([0,0,0],0) -> [0,0,0];
([1],0) -> [1];
([2,0],2) -> [];
([2,0,3],1) -> [0,3];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.048567 true true

([0,2],3) -> [];
([3,3,3],3) -> [];
([1,2,1],2) -> [1];
([1],0) -> [1];
([3,2],2) -> [];
([],2) -> [];
([3],1) -> [];
([1,1],3) -> [];
([3,0],0) -> [3,0];
([0,0],3) -> [];
([],0) -> [];
([2,2],1) -> [2];
([],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.111216 true true

([0],1) -> [];
([],3) -> [];
([1],2) -> [];
([1,2,2],0) -> [1,2,2];
([0,0,2],1) -> [0,2];
([3],1) -> [];
([3],2) -> [];
([2],0) -> [2];
([3,0,1],2) -> [1];
([],2) -> [];
([],1) -> [];
([3,1,3],3) -> [];
([1,2,3],2) -> [3];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.055924 true true

([1,0,3],1) -> [0,3];
([0],3) -> [];
([3,0,3],3) -> [];
([2],3) -> [];
([3],3) -> [];
([0],2) -> [];
([],2) -> [];
([3,0,1],2) -> [1];
([3],1) -> [];
([3],0) -> [3];
([3,2],0) -> [3,2];
([0,0,0],1) -> [0,0];
([0,2],2) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0478660000001 true true

([1,1,1],3) -> [];
([],3) -> [];
([1],0) -> [1];
([1,0],3) -> [];
([2],1) -> [];
([3,1,0],1) -> [1,0];
([],0) -> [];
([],1) -> [];
([0],1) -> [];
([1,0],1) -> [0];
([3,2],1) -> [2];
([1],2) -> [];
([3,3],1) -> [3];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.138128 true true

([2,1],1) -> [1];
([],3) -> [];
([],2) -> [];
([1,1,0],2) -> [0];
([0],1) -> [];
([1],3) -> [];
([0,0],3) -> [];
([3],0) -> [3];
([2,1,2],2) -> [2];
([1,0],0) -> [1,0];
([],1) -> [];
([3,0],3) -> [];
([2],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.042226 true true

([2],1) -> [];
([],3) -> [];
([3],0) -> [3];
([1,0,1],0) -> [1,0,1];
([3,3],3) -> [];
([1,1],3) -> [];
([0],3) -> [];
([2,2,0],3) -> [];
([0,0,3],1) -> [0,3];
([2],0) -> [2];
([0,0],2) -> [];
([],0) -> [];
([1],1) -> [];
([0,1],0) -> [0,1];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.127903 true true

([2,3],2) -> [];
([1,1],2) -> [];
([0],0) -> [0];
([],2) -> [];
([1,1,0],0) -> [1,1,0];
([],3) -> [];
([3,1],0) -> [3,1];
([2,0,2],0) -> [2,0,2];
([2],3) -> [];
([],1) -> [];
([0,2,3],3) -> [];
([2,2,0],3) -> [];
([0,1],1) -> [1];
([],0) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.121642 true true

([],1) -> [];
([1],0) -> [1];
([0,1],3) -> [];
([2,1],1) -> [1];
([3],2) -> [];
([],0) -> [];
([2,2,0],0) -> [2,2,0];
([3,3],3) -> [];
([],2) -> [];
([3,2,1],3) -> [];
([0],0) -> [0];
([3,1],2) -> [];
([2,2],0) -> [2,2];
([2,2],2) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.143457 true true

([3],2) -> [];
([1,1,1],2) -> [1];
([3,2],2) -> [];
([],0) -> [];
([1],2) -> [];
([3,1,1],0) -> [3,1,1];
([3],3) -> [];
([],3) -> [];
([1,1,1],3) -> [];
([0,0,0],3) -> [];
([0,3,0],0) -> [0,3,0];
([0,3,0],1) -> [3,0];
([2,0],3) -> [];
([2,0,0],0) -> [2,0,0];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.148311 true true

([1,1],2) -> [];
([3],3) -> [];
([0],2) -> [];
([],2) -> [];
([2,3,2],0) -> [2,3,2];
([],0) -> [];
([1],1) -> [];
([3,2,1],1) -> [2,1];
([],3) -> [];
([1],0) -> [1];
([1,2,1],2) -> [1];
([],1) -> [];
([2,1],1) -> [1];
([0,0,0],1) -> [0,0];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.14156 true true

([],2) -> [];
([0,2,1],3) -> [];
([],3) -> [];
([1,3,2],0) -> [1,3,2];
([0,1],0) -> [0,1];
([3,0],3) -> [];
([1],3) -> [];
([3],3) -> [];
([0],0) -> [0];
([2,3],3) -> [];
([1,0],1) -> [0];
([1],2) -> [];
([],1) -> [];
([1,1,0],2) -> [0];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0452809999999 true true

([1,1],2) -> [];
([],2) -> [];
([2,3],3) -> [];
([],3) -> [];
([3,0],1) -> [0];
([2,1,1],1) -> [1,1];
([0,3,2],1) -> [3,2];
([0],3) -> [];
([0,1],1) -> [1];
([3,2,1],0) -> [3,2,1];
([0,2],3) -> [];
([0,1,3],3) -> [];
([],0) -> [];
([3,2],2) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.124167 true true

([],2) -> [];
([0],2) -> [];
([3,3,0],0) -> [3,3,0];
([1,1,0],0) -> [1,1,0];
([3],3) -> [];
([3,1],3) -> [];
([],1) -> [];
([3,3,2],2) -> [2];
([2],0) -> [2];
([2,2,1],2) -> [1];
([2,2],3) -> [];
([2],2) -> [];
([0],1) -> [];
([3],1) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0592529999999 true true

([],2) -> [];
([0,3],1) -> [3];
([0],1) -> [];
([2,2,1],1) -> [2,1];
([],1) -> [];
([2,2,2],2) -> [2];
([],0) -> [];
([3,0],0) -> [3,0];
([3,0],1) -> [0];
([1,2,0],1) -> [2,0];
([0],2) -> [];
([1],1) -> [];
([1,2],1) -> [2];
([2,0],2) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.118141 true true

([0,2],0) -> [0,2];
([],0) -> [];
([1,2],0) -> [1,2];
([],1) -> [];
([],3) -> [];
([0],2) -> [];
([2,3],0) -> [2,3];
([0,2],2) -> [];
([3],1) -> [];
([0,3,3],0) -> [0,3,3];
([],2) -> [];
([3],3) -> [];
([3,0,1],2) -> [1];
([1,2,2],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.126063 true true

([3,0,1],2) -> [1];
([2,2,0],3) -> [];
([0,3,3],0) -> [0,3,3];
([0],2) -> [];
([3],3) -> [];
([],3) -> [];
([2,2,3],1) -> [2,3];
([1,2],2) -> [];
([3,2],0) -> [3,2];
([3],2) -> [];
([],1) -> [];
([2,2,0],2) -> [0];
([1,2],0) -> [1,2];
([2,1,1],2) -> [1];
([2,3],2) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0530429999999 true true

([2],3) -> [];
([3,1],2) -> [];
([1,0,0],0) -> [1,0,0];
([0,0],1) -> [0];
([3,2,3],2) -> [3];
([],3) -> [];
([1,1],0) -> [1,1];
([2,1],3) -> [];
([2,2],0) -> [2,2];
([1,2,1],2) -> [1];
([2],2) -> [];
([1,3,2],1) -> [3,2];
([0,2],2) -> [];
([],1) -> [];
([3],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0540470000001 true true

([3],3) -> [];
([],0) -> [];
([1],3) -> [];
([],1) -> [];
([1,2],1) -> [2];
([],2) -> [];
([0,2,0],0) -> [0,2,0];
([0,0],0) -> [0,0];
([2,2,2],2) -> [2];
([2],3) -> [];
([1,1,0],0) -> [1,1,0];
([0,3],0) -> [0,3];
([0],2) -> [];
([2,0,2],0) -> [2,0,2];
([1,3],2) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.161592 true true

([],3) -> [];
([],1) -> [];
([],2) -> [];
([2,3],2) -> [];
([2,1],2) -> [];
([2,2,1],1) -> [2,1];
([1,0,0],2) -> [0];
([1,2,0],2) -> [0];
([2],3) -> [];
([1],1) -> [];
([1,0],0) -> [1,0];
([3],1) -> [];
([1],2) -> [];
([3,2],1) -> [2];
([3,2],2) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.045003 true true

([1],2) -> [];
([2],1) -> [];
([3,2],2) -> [];
([],0) -> [];
([3,3],2) -> [];
([3],1) -> [];
([],2) -> [];
([0,3],3) -> [];
([2,2,2],0) -> [2,2,2];
([3,3],0) -> [3,3];
([0,1],1) -> [1];
([1,0,1],3) -> [];
([1,0,1],2) -> [1];
([1,1,0],3) -> [];
([0,0],0) -> [0,0];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.128939 true true

([],0) -> [];
([0],1) -> [];
([2,1],3) -> [];
([],2) -> [];
([2],0) -> [2];
([2],3) -> [];
([2,2,1],2) -> [1];
([],1) -> [];
([0,3,2],3) -> [];
([3,0],2) -> [];
([1,2,0],1) -> [2,0];
([0],2) -> [];
([3,1],1) -> [1];
([1],1) -> [];
([0],0) -> [0];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.115524 true true

([0,2,1],2) -> [1];
([3,2],3) -> [];
([1,3,2],2) -> [2];
([2,3],3) -> [];
([1,3,1],2) -> [1];
([1,0,0],2) -> [0];
([],0) -> [];
([],3) -> [];
([],2) -> [];
([1,1],2) -> [];
([3,2,0],2) -> [0];
([2,1],3) -> [];
([3,3,2],0) -> [3,3,2];
([],1) -> [];
([0],1) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.127699 true true

([0,0],0) -> [0,0];
([],0) -> [];
([0,0],1) -> [0];
([3,0],1) -> [0];
([2,0,0],3) -> [];
([],1) -> [];
([],3) -> [];
([2],1) -> [];
([2],0) -> [2];
([0,2,2],3) -> [];
([1,0],2) -> [];
([0,2],0) -> [0,2];
([3,0],3) -> [];
([0,2],2) -> [];
([0,0,2],2) -> [2];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0887150000001 true true

([2,2],3) -> [];
([2,0,3],3) -> [];
([],3) -> [];
([],2) -> [];
([2],3) -> [];
([],1) -> [];
([1,0,0],1) -> [0,0];
([3],2) -> [];
([3,1,3],0) -> [3,1,3];
([0],3) -> [];
([3,1,3],3) -> [];
([1],3) -> [];
([1,2,3],2) -> [3];
([1],0) -> [1];
([1],2) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0584490000001 true true

([2,0,0],2) -> [0];
([0,3],0) -> [0,3];
([0],1) -> [];
([2],0) -> [2];
([],2) -> [];
([0,1,1],3) -> [];
([0,2],1) -> [2];
([1,3,1],3) -> [];
([1],2) -> [];
([1,2,1],3) -> [];
([0,2],0) -> [0,2];
([0,1,1],0) -> [0,1,1];
([0,2,3],3) -> [];
([3,2,2],3) -> [];
([1,0],2) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.052027 true true

([0,2],0) -> [0,2];
([3,2,0],0) -> [3,2,0];
([],2) -> [];
([2,2],0) -> [2,2];
([2],1) -> [];
([0],1) -> [];
([0,3,2],1) -> [3,2];
([3],1) -> [];
([3,0,3],3) -> [];
([],0) -> [];
([],1) -> [];
([1,0,3],1) -> [0,3];
([2,1,1],1) -> [1,1];
([2,0,3],1) -> [0,3];
([2,3,3],0) -> [2,3,3];
([3],2) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.156771 true true

([0],0) -> [0];
([],1) -> [];
([3,3],1) -> [3];
([],0) -> [];
([0,3,1],0) -> [0,3,1];
([2],1) -> [];
([2,1],3) -> [];
([3,1],0) -> [3,1];
([2,1],1) -> [1];
([1,0,1],2) -> [1];
([3,0,1],0) -> [3,0,1];
([2,2],3) -> [];
([0,1],0) -> [0,1];
([2],3) -> [];
([1,3],2) -> [];
([3,2],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.146691 true true

([0,1],0) -> [0,1];
([0],0) -> [0];
([2,2,0],2) -> [0];
([1,2,0],0) -> [1,2,0];
([0,0],1) -> [0];
([3,3],3) -> [];
([2,3,1],0) -> [2,3,1];
([],3) -> [];
([],0) -> [];
([2],3) -> [];
([1,1],3) -> [];
([0,3,0],1) -> [3,0];
([2,1],0) -> [2,1];
([1,3,2],3) -> [];
([1,1,1],1) -> [1,1];
([3,2,2],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.151808 true true

([1,1],0) -> [1,1];
([0,3,3],3) -> [];
([],1) -> [];
([0,0],1) -> [0];
([3,2,0],1) -> [2,0];
([3,1],1) -> [1];
([0,1],3) -> [];
([2,2,0],2) -> [0];
([1],1) -> [];
([1,2],2) -> [];
([1,0,2],3) -> [];
([3,3],2) -> [];
([0],1) -> [];
([0,2],0) -> [0,2];
([2,1,0],3) -> [];
([1,0],1) -> [0];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.05432 true true

([2,1],0) -> [2,1];
([3,0,2],1) -> [0,2];
([],3) -> [];
([2,1],2) -> [];
([0,0,0],1) -> [0,0];
([3],1) -> [];
([3],2) -> [];
([1,0,1],2) -> [1];
([3,2,3],0) -> [3,2,3];
([2,2],3) -> [];
([3,0,2],0) -> [3,0,2];
([],0) -> [];
([2,3,3],1) -> [3,3];
([2],0) -> [2];
([3,0],3) -> [];
([0],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.157724 true true

([],3) -> [];
([0,2,2],3) -> [];
([],1) -> [];
([],2) -> [];
([3],0) -> [3];
([3],2) -> [];
([0,1],1) -> [1];
([1,1,2],1) -> [1,2];
([3,3,2],3) -> [];
([0],2) -> [];
([0,2,1],0) -> [0,2,1];
([2],2) -> [];
([1],2) -> [];
([3,2],2) -> [];
([1,2,2],0) -> [1,2,2];
([1,1],0) -> [1,1];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0526339999999 true true

([1,3,2],3) -> [];
([],2) -> [];
([0,0],1) -> [0];
([2,2,3],2) -> [3];
([3],0) -> [3];
([],3) -> [];
([1,2],0) -> [1,2];
([3,1,2],2) -> [2];
([],0) -> [];
([1],0) -> [1];
([3,2,1],0) -> [3,2,1];
([3],3) -> [];
([0,2,3],1) -> [2,3];
([0,2,1],1) -> [2,1];
([2,2,1],3) -> [];
([2,0,2],0) -> [2,0,2];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.159563 true true

([0,2,2],2) -> [2];
([],3) -> [];
([1,2,2],1) -> [2,2];
([2,0,2],2) -> [2];
([1],0) -> [1];
([],1) -> [];
([2],1) -> [];
([1,0],3) -> [];
([2,1,3],1) -> [1,3];
([1],2) -> [];
([3,1],3) -> [];
([2,2],3) -> [];
([0,3],1) -> [3];
([3,0],1) -> [0];
([0],1) -> [];
([2],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0520939999999 true true

([1,2,2],2) -> [2];
([],0) -> [];
([0,1],0) -> [0,1];
([0],1) -> [];
([],1) -> [];
([2,3],1) -> [3];
([2,3],3) -> [];
([2,1,2],1) -> [1,2];
([2,3],2) -> [];
([1,2],3) -> [];
([3,0],1) -> [0];
([],2) -> [];
([2,2],0) -> [2,2];
([0,0],2) -> [];
([3],3) -> [];
([2,0,1],0) -> [2,0,1];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.130812 true true

([],3) -> [];
([3,1,0],0) -> [3,1,0];
([],2) -> [];
([1,3],0) -> [1,3];
([0,1],1) -> [1];
([],0) -> [];
([1,0,3],2) -> [3];
([3,2],3) -> [];
([3],2) -> [];
([2],3) -> [];
([0],1) -> [];
([2,3,3],3) -> [];
([],1) -> [];
([2,1],1) -> [1];
([3,1],3) -> [];
([2,1],2) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.121855 true true

([0,2,2],3) -> [];
([0],2) -> [];
([0,0,2],3) -> [];
([2,1,2],1) -> [1,2];
([3],3) -> [];
([3],0) -> [3];
([1,1,0],3) -> [];
([1,0,1],0) -> [1,0,1];
([3,0],3) -> [];
([],1) -> [];
([3],2) -> [];
([3,1,0],1) -> [1,0];
([2,0],1) -> [0];
([1,2,3],0) -> [1,2,3];
([],2) -> [];
([0],3) -> [];
([2,3],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0559840000001 true true

([0],1) -> [];
([0,2],0) -> [0,2];
([],0) -> [];
([],1) -> [];
([1,1,3],3) -> [];
([3,0,2],2) -> [2];
([3],2) -> [];
([0],2) -> [];
([1],2) -> [];
([3,0],0) -> [3,0];
([1,2],3) -> [];
([3],0) -> [3];
([0,0],0) -> [0,0];
([],2) -> [];
([0,3,3],1) -> [3,3];
([2,2,3],0) -> [2,2,3];
([3,3],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0970380000001 true true

([],3) -> [];
([2,1,2],3) -> [];
([2],3) -> [];
([2,3],1) -> [3];
([],0) -> [];
([1,1,1],0) -> [1,1,1];
([1,3,3],2) -> [3];
([0,0,2],1) -> [0,2];
([],2) -> [];
([0],3) -> [];
([0,0,0],2) -> [0];
([2,1],0) -> [2,1];
([0,3],1) -> [3];
([0,3,1],1) -> [3,1];
([1,1,2],3) -> [];
([],1) -> [];
([2,0],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.139553 true true

([1],2) -> [];
([2,3,2],3) -> [];
([3],1) -> [];
([],0) -> [];
([],3) -> [];
([3],3) -> [];
([],1) -> [];
([3,1,1],3) -> [];
([1,3,0],2) -> [0];
([1,3],2) -> [];
([1,2,3],0) -> [1,2,3];
([0,1,0],3) -> [];
([2,0,0],1) -> [0,0];
([1,1,2],3) -> [];
([0,0],0) -> [0,0];
([1,2],3) -> [];
([1,0],0) -> [1,0];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.148811 true true

([],3) -> [];
([3,0],1) -> [0];
([1],3) -> [];
([1,2,2],3) -> [];
([3,0,1],3) -> [];
([2,1],0) -> [2,1];
([0,1],2) -> [];
([0,2],0) -> [0,2];
([],1) -> [];
([0,1],1) -> [1];
([3,1,0],0) -> [3,1,0];
([2],1) -> [];
([],2) -> [];
([1,1,1],0) -> [1,1,1];
([2,0,1],0) -> [2,0,1];
([2,1],3) -> [];
([0,0,1],0) -> [0,0,1];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0548799999999 true true

([],2) -> [];
([],1) -> [];
([0,0],2) -> [];
([0,3,1],3) -> [];
([2,0,1],0) -> [2,0,1];
([0,2],3) -> [];
([],0) -> [];
([3,0],3) -> [];
([3,1],3) -> [];
([0,2,0],3) -> [];
([3,1],2) -> [];
([3,3,0],3) -> [];
([1],1) -> [];
([1],3) -> [];
([0,1,2],2) -> [2];
([1,0,3],2) -> [3];
([3],2) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.161777 true true

([0],3) -> [];
([1],2) -> [];
([1],0) -> [1];
([1,0],3) -> [];
([],3) -> [];
([],0) -> [];
([0,3,3],0) -> [0,3,3];
([],1) -> [];
([2],3) -> [];
([1,3,3],1) -> [3,3];
([2,2],1) -> [2];
([1,2,2],2) -> [2];
([0],1) -> [];
([3,2],2) -> [];
([1,3,2],1) -> [3,2];
([0],0) -> [0];
([2],0) -> [2];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.139802 true true

([1,1],1) -> [1];
([3,0,1],2) -> [1];
([],1) -> [];
([3],2) -> [];
([1],2) -> [];
([3,2],1) -> [2];
([2,3],3) -> [];
([],2) -> [];
([2],1) -> [];
([],0) -> [];
([0],3) -> [];
([1],0) -> [1];
([0,3],2) -> [];
([0,1],1) -> [1];
([0],0) -> [0];
([],3) -> [];
([2,3,3],0) -> [2,3,3];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.140734 true true

([],2) -> [];
([2],3) -> [];
([3],3) -> [];
([2],1) -> [];
([3],1) -> [];
([2,2],1) -> [2];
([3,2],2) -> [];
([2,3],0) -> [2,3];
([2,3,1],0) -> [2,3,1];
([0,1],3) -> [];
([1,1,0],3) -> [];
([1],0) -> [1];
([3,1],3) -> [];
([0,2],0) -> [0,2];
([2,2,2],3) -> [];
([0],1) -> [];
([0,0],2) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.053398 true true

([],1) -> [];
([3,3,3],3) -> [];
([2],3) -> [];
([0,2],2) -> [];
([1,1,0],2) -> [0];
([1],1) -> [];
([],3) -> [];
([3,3],1) -> [3];
([1],3) -> [];
([3,0,3],0) -> [3,0,3];
([],0) -> [];
([3,0],0) -> [3,0];
([1],2) -> [];
([2,1,3],1) -> [1,3];
([0],3) -> [];
([0,1],3) -> [];
([0,2],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.134648 true true

([3,3,3],3) -> [];
([],1) -> [];
([],2) -> [];
([3],2) -> [];
([1,0,2],1) -> [0,2];
([2,1,1],3) -> [];
([0,3,2],3) -> [];
([1,1,2],3) -> [];
([1,2],1) -> [2];
([1],2) -> [];
([1],3) -> [];
([2,2,1],2) -> [1];
([3,3,0],2) -> [0];
([2,2,2],1) -> [2,2];
([],3) -> [];
([0],2) -> [];
([2,2],2) -> [];
([2,3,2],0) -> [2,3,2];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0608589999999 true true

([0],0) -> [0];
([2,2],2) -> [];
([],2) -> [];
([1,1,0],2) -> [0];
([3,0],3) -> [];
([1,3,3],1) -> [3,3];
([1],1) -> [];
([],1) -> [];
([1,3,1],0) -> [1,3,1];
([0],1) -> [];
([1,0,0],2) -> [0];
([2],2) -> [];
([2,1,1],2) -> [1];
([0,1,3],1) -> [1,3];
([],0) -> [];
([0,2],3) -> [];
([2],0) -> [2];
([0,2,0],2) -> [0];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.166661 true true

([1,0,2],1) -> [0,2];
([3],2) -> [];
([2],2) -> [];
([2],3) -> [];
([2,0,2],1) -> [0,2];
([3],1) -> [];
([0],3) -> [];
([],1) -> [];
([],0) -> [];
([0,1],1) -> [1];
([1],1) -> [];
([2,0],2) -> [];
([3,1],0) -> [3,1];
([3],3) -> [];
([0],1) -> [];
([0,0,3],0) -> [0,0,3];
([2,1,2],2) -> [2];
([1,3],2) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.141079 true true

([3,1],0) -> [3,1];
([3,0,1],2) -> [1];
([1,1,1],1) -> [1,1];
([3],2) -> [];
([],3) -> [];
([],2) -> [];
([0,3,3],2) -> [3];
([3],1) -> [];
([3,3,0],2) -> [0];
([2],3) -> [];
([0,1,1],2) -> [1];
([3,2],1) -> [2];
([1,2,2],3) -> [];
([],0) -> [];
([3,0,2],2) -> [2];
([1,3],0) -> [1,3];
([3,0,3],0) -> [3,0,3];
([2,3,3],2) -> [3];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.168449 true true

([1,3],2) -> [];
([1,2,2],2) -> [2];
([0,2,1],1) -> [2,1];
([3,2,1],1) -> [2,1];
([3,1,0],1) -> [1,0];
([3],0) -> [3];
([1,0],2) -> [];
([3],1) -> [];
([3,0,2],2) -> [2];
([0,0],1) -> [0];
([],3) -> [];
([1,0],0) -> [1,0];
([3],2) -> [];
([0,2],2) -> [];
([],0) -> [];
([2,3,0],2) -> [0];
([1,0],3) -> [];
([1,0,0],0) -> [1,0,0];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.14853 true true

([],3) -> [];
([3],2) -> [];
([0,3],2) -> [];
([1],2) -> [];
([],0) -> [];
([0,0],3) -> [];
([3,0,0],0) -> [3,0,0];
([],2) -> [];
([0,3,3],3) -> [];
([],1) -> [];
([0,3,3],1) -> [3,3];
([3],1) -> [];
([2],2) -> [];
([1,0],1) -> [0];
([3,0,3],0) -> [3,0,3];
([2,3],2) -> [];
([1,1,1],3) -> [];
([2,1,1],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.150399 true true

([0],3) -> [];
([3],3) -> [];
([2,1,3],1) -> [1,3];
([2,1],0) -> [2,1];
([1,0,1],2) -> [1];
([2,3,2],0) -> [2,3,2];
([3,1],2) -> [];
([],3) -> [];
([],1) -> [];
([0,1],3) -> [];
([3,0],2) -> [];
([0,1,1],1) -> [1,1];
([1],1) -> [];
([3,3],3) -> [];
([0,1,0],1) -> [1,0];
([1,2],1) -> [2];
([3,3,1],2) -> [1];
([2],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0625540000001 true true

([0,2],3) -> [];
([2],1) -> [];
([],1) -> [];
([2],3) -> [];
([3,2,1],3) -> [];
([3,0],2) -> [];
([],2) -> [];
([1,1],3) -> [];
([3,0],1) -> [0];
([],3) -> [];
([0,1],3) -> [];
([1,0],0) -> [1,0];
([],0) -> [];
([1,2,2],1) -> [2,2];
([2,0,2],0) -> [2,0,2];
([3],3) -> [];
([2,1],0) -> [2,1];
([0,1,2],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.1337 true true

([1],0) -> [1];
([1],1) -> [];
([2,1],0) -> [2,1];
([3],3) -> [];
([2,2],3) -> [];
([1,1],1) -> [1];
([2],1) -> [];
([3,2,3],2) -> [3];
([3,3,3],3) -> [];
([0,0,0],3) -> [];
([1,0],0) -> [1,0];
([1,2],0) -> [1,2];
([],0) -> [];
([2,1,0],3) -> [];
([2],3) -> [];
([3,0,1],3) -> [];
([0,2,0],2) -> [0];
([2],0) -> [2];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0540699999999 true true

([],3) -> [];
([2,3,0],0) -> [2,3,0];
([3,1],0) -> [3,1];
([1,3,2],1) -> [3,2];
([2],1) -> [];
([1],0) -> [1];
([],0) -> [];
([1],3) -> [];
([3,3,1],0) -> [3,3,1];
([2,0],1) -> [0];
([2,0],2) -> [];
([],2) -> [];
([],1) -> [];
([3],1) -> [];
([3],2) -> [];
([1,2,1],3) -> [];
([2,1],2) -> [];
([2],0) -> [2];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.131511 true true

([],2) -> [];
([2,3],2) -> [];
([3,0],2) -> [];
([],3) -> [];
([2,3,2],0) -> [2,3,2];
([0,3,1],1) -> [3,1];
([3,0],1) -> [0];
([],0) -> [];
([1,0,2],3) -> [];
([2,3,0],3) -> [];
([3],2) -> [];
([1,3],3) -> [];
([0],3) -> [];
([1,2],3) -> [];
([3],1) -> [];
([0,3],0) -> [0,3];
([3,3],2) -> [];
([3,0],0) -> [3,0];
([],1) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.131468 true true

([],3) -> [];
([1],0) -> [1];
([0,3],1) -> [3];
([],0) -> [];
([2],1) -> [];
([0],3) -> [];
([],2) -> [];
([],1) -> [];
([2],2) -> [];
([1,3,2],0) -> [1,3,2];
([1,1],0) -> [1,1];
([3],2) -> [];
([1],3) -> [];
([3],0) -> [3];
([3,2,1],1) -> [2,1];
([1],1) -> [];
([0,0,0],1) -> [0,0];
([1,2],3) -> [];
([2,3,2],1) -> [3,2];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.158101 true true

([1],3) -> [];
([3],0) -> [3];
([0,3],0) -> [0,3];
([2,1,2],1) -> [1,2];
([],1) -> [];
([2,1],3) -> [];
([2],1) -> [];
([],0) -> [];
([2],0) -> [2];
([],3) -> [];
([3,2,1],1) -> [2,1];
([3,0,0],0) -> [3,0,0];
([0,2,1],2) -> [1];
([1,3],1) -> [3];
([0,0,0],3) -> [];
([3],3) -> [];
([],2) -> [];
([1,1,3],3) -> [];
([2,0],0) -> [2,0];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.165269 true true

([2],2) -> [];
([2,1,0],3) -> [];
([2],3) -> [];
([1,1,2],0) -> [1,1,2];
([2,0],2) -> [];
([],1) -> [];
([1,0],3) -> [];
([1,0,0],3) -> [];
([1],1) -> [];
([0,0,3],0) -> [0,0,3];
([3,2,2],3) -> [];
([],2) -> [];
([1,1],2) -> [];
([1],2) -> [];
([3,0],1) -> [0];
([1],0) -> [1];
([3],2) -> [];
([0,2,2],1) -> [2,2];
([1,0],0) -> [1,0];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0576820000001 true true

([3,0,1],1) -> [0,1];
([],1) -> [];
([1],2) -> [];
([2],1) -> [];
([],2) -> [];
([1,0,1],0) -> [1,0,1];
([],0) -> [];
([3,2],2) -> [];
([3,1,1],1) -> [1,1];
([1,3],0) -> [1,3];
([],3) -> [];
([3],2) -> [];
([2,0],3) -> [];
([2,3],3) -> [];
([3],3) -> [];
([0,3,2],1) -> [3,2];
([2],3) -> [];
([0,2],2) -> [];
([3,2],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.135164 true true

([],3) -> [];
([2],2) -> [];
([0],2) -> [];
([1,2],1) -> [2];
([0,2,1],1) -> [2,1];
([2,3],1) -> [3];
([0,2],0) -> [0,2];
([1,0,3],0) -> [1,0,3];
([3],2) -> [];
([0,2],2) -> [];
([],0) -> [];
([1,1],2) -> [];
([0,3],2) -> [];
([0,0],1) -> [0];
([3],3) -> [];
([0,0,3],0) -> [0,0,3];
([],2) -> [];
([3,3],2) -> [];
([2,1],2) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.153819 true true

([1,2],3) -> [];
([2,2],1) -> [2];
([3,3,0],0) -> [3,3,0];
([1],2) -> [];
([],1) -> [];
([2,3,0],1) -> [3,0];
([],2) -> [];
([2,2],2) -> [];
([3,0,1],0) -> [3,0,1];
([3],2) -> [];
([2,2,0],3) -> [];
([3,3,0],2) -> [0];
([1,2],1) -> [2];
([1,3],3) -> [];
([],3) -> [];
([2,3,2],0) -> [2,3,2];
([0,0,3],3) -> [];
([1,1,3],2) -> [3];
([0,1],1) -> [1];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0620120000001 true true

([],3) -> [];
([],1) -> [];
([2],0) -> [2];
([3],0) -> [3];
([0],3) -> [];
([0,0,0],3) -> [];
([2,3,1],3) -> [];
([2],3) -> [];
([2,2,1],2) -> [1];
([3],1) -> [];
([2],2) -> [];
([2,3,1],2) -> [1];
([0],2) -> [];
([],0) -> [];
([0],0) -> [0];
([1],1) -> [];
([1,2],1) -> [2];
([1,3],2) -> [];
([1],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          [#2.1 y1]

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          [#2.1 y1]

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0951070000001 false false

([0,0,2],1) -> [0,2];
([],3) -> [];
([3,1],0) -> [3,1];
([],2) -> [];
([2,1],3) -> [];
([3,3],2) -> [];
([0],3) -> [];
([0,2],1) -> [2];
([3,0],2) -> [];
([1,2,2],1) -> [2,2];
([0,2],2) -> [];
([1],0) -> [1];
([2],1) -> [];
([3],3) -> [];
([],0) -> [];
([2,3],0) -> [2,3];
([3,2],3) -> [];
([0,2,2],3) -> [];
([1,0],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.147425 true true

([3,1],0) -> [3,1];
([1],3) -> [];
([0,0],3) -> [];
([],2) -> [];
([3],0) -> [3];
([2],3) -> [];
([3,1],3) -> [];
([3,1,3],2) -> [3];
([1],0) -> [1];
([0,3],0) -> [0,3];
([3],2) -> [];
([2],1) -> [];
([],3) -> [];
([0,3,1],2) -> [1];
([],1) -> [];
([1,0,0],1) -> [0,0];
([],0) -> [];
([0,2],2) -> [];
([1,3,3],0) -> [1,3,3];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.152604 true true

([1],0) -> [1];
([3,0],0) -> [3,0];
([],2) -> [];
([2,1],3) -> [];
([2,0],0) -> [2,0];
([2,2,1],2) -> [1];
([0],3) -> [];
([],1) -> [];
([3,3],1) -> [3];
([3,2,0],3) -> [];
([0,0,0],0) -> [0,0,0];
([1,0],3) -> [];
([0],2) -> [];
([1,1,3],2) -> [3];
([3],1) -> [];
([1,0,2],0) -> [1,0,2];
([1,1],2) -> [];
([0,1],0) -> [0,1];
([3],3) -> [];
([],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0587250000001 true true

([],1) -> [];
([0],0) -> [0];
([3],2) -> [];
([],2) -> [];
([1,1,1],2) -> [1];
([1,2],2) -> [];
([0],3) -> [];
([2,3,2],3) -> [];
([3,2],1) -> [2];
([3],3) -> [];
([2,2],2) -> [];
([0,0,0],2) -> [0];
([3,1,1],3) -> [];
([],3) -> [];
([3,2],2) -> [];
([1],2) -> [];
([0,0],2) -> [];
([],0) -> [];
([2],0) -> [2];
([1,3,3],2) -> [3];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          [#2.1 y1]

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          [#2.1 y1]

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.095689 false false

([2],0) -> [2];
([0,0,1],1) -> [0,1];
([3,3],3) -> [];
([],1) -> [];
([],0) -> [];
([0,1],1) -> [1];
([0],2) -> [];
([],3) -> [];
([2,1],3) -> [];
([3,1],3) -> [];
([1],0) -> [1];
([],2) -> [];
([1,2,1],1) -> [2,1];
([0,1,0],1) -> [1,0];
([0,2,2],1) -> [2,2];
([2,2,1],2) -> [1];
([0],0) -> [0];
([3],3) -> [];
([2,2,3],3) -> [];
([3],1) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.154269 true true

([3],2) -> [];
([],1) -> [];
([2],2) -> [];
([3],3) -> [];
([],3) -> [];
([2,2],1) -> [2];
([2,0,3],3) -> [];
([3],1) -> [];
([0,2],2) -> [];
([1,1,0],0) -> [1,1,0];
([0,0],2) -> [];
([0,2,1],0) -> [0,2,1];
([1,0,3],0) -> [1,0,3];
([1],0) -> [1];
([1,2,3],2) -> [3];
([0,3,0],3) -> [];
([],2) -> [];
([3,2,2],0) -> [3,2,2];
([2,3,0],3) -> [];
([2,0],3) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.061524 true true

([1,2,1],1) -> [2,1];
([],2) -> [];
([0],2) -> [];
([0,3,0],2) -> [0];
([3,1,1],2) -> [1];
([3,3,3],1) -> [3,3];
([3,0,3],2) -> [3];
([3,2,0],3) -> [];
([1,1,0],2) -> [0];
([],0) -> [];
([2,0],1) -> [0];
([2],2) -> [];
([],3) -> [];
([0,3,2],2) -> [2];
([1,2],3) -> [];
([2,2,1],3) -> [];
([0,0,2],0) -> [0,0,2];
([3],3) -> [];
([0,1,0],0) -> [0,1,0];
([],1) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.178617 true true

([],2) -> [];
([0,0],3) -> [];
([1,3],3) -> [];
([3],0) -> [3];
([3,0,1],2) -> [1];
([3,0],2) -> [];
([2],3) -> [];
([0,1,0],3) -> [];
([1,2,1],2) -> [1];
([0,2,3],1) -> [2,3];
([2,1,3],3) -> [];
([],3) -> [];
([],0) -> [];
([2,2,2],1) -> [2,2];
([0,3,1],1) -> [3,1];
([3,3],2) -> [];
([0,3],2) -> [];
([2],0) -> [2];
([3,2],0) -> [3,2];
([],1) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.168846 true true

([],0) -> [];
([1,2,1],3) -> [];
([2,3,3],2) -> [3];
([1,2,1],0) -> [1,2,1];
([2,1,0],1) -> [1,0];
([],1) -> [];
([0,1,3],3) -> [];
([3,1],1) -> [1];
([3,3],3) -> [];
([1,3],1) -> [3];
([0],1) -> [];
([],3) -> [];
([3],1) -> [];
([2,1],1) -> [1];
([2,3],3) -> [];
([3,0,0],0) -> [3,0,0];
([0,3,1],0) -> [0,3,1];
([2,0,1],0) -> [2,0,1];
([2,2,3],2) -> [3];
([1,1,0],0) -> [1,1,0];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.178518 true true

([3,0],0) -> [3,0];
([2,0],1) -> [0];
([2,2],3) -> [];
([2],0) -> [2];
([1,0],1) -> [0];
([],3) -> [];
([1,0],3) -> [];
([0],3) -> [];
([],2) -> [];
([1,3],2) -> [];
([2],1) -> [];
([3,3],2) -> [];
([2,3,2],2) -> [2];
([1,1],3) -> [];
([3],1) -> [];
([3],3) -> [];
([0],0) -> [0];
([2,2],0) -> [2,2];
([0,1,3],0) -> [0,1,3];
([],0) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.142293 true true

([3,3],1) -> [3];
([3,1,1],2) -> [1];
([1],1) -> [];
([],0) -> [];
([3,0],3) -> [];
([],2) -> [];
([2,3,1],3) -> [];
([],3) -> [];
([2,1],2) -> [];
([0,3],0) -> [0,3];
([2,0,2],0) -> [2,0,2];
([3,1,1],1) -> [1,1];
([2],1) -> [];
([1,1],1) -> [1];
([2],2) -> [];
([1,1],0) -> [1,1];
([1,3],2) -> [];
([3,0,1],3) -> [];
([0,2,0],0) -> [0,2,0];
([0],1) -> [];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.149937 true true

([],0) -> [];
([1,1,2],1) -> [1,2];
([3,2,1],0) -> [3,2,1];
([1,2],0) -> [1,2];
([2,0],2) -> [];
([1,3,0],0) -> [1,3,0];
([3,0,0],2) -> [0];
([1,1],1) -> [1];
([0,1,0],1) -> [1,0];
([2],2) -> [];
([],2) -> [];
([1],3) -> [];
([2,1],2) -> [];
([1,3,2],3) -> [];
([],3) -> [];
([1,2,2],2) -> [2];
([1,1],3) -> [];
([],1) -> [];
([1,3,1],2) -> [1];
([1,2,2],0) -> [1,2,2];

=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.163824 true true

