list_rev_fold
[1,3,2] -> [2,3,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

1.2722 true

[2,0,2] -> [2,0,2];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.3985 false

[0] -> [0];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0038 false

[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> Nil

0.0000 false

[0,0] -> [0,0];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0167 false

[0,3] -> [3,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0511 true

[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> Nil

0.0000 false

[0,3,2] -> [2,3,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

1.2742 true

[0] -> [0];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0038 false

[3,1,0] -> [0,1,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.2534 true

[3,2] -> [2,3];
[3] -> [3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0478 true

[3] -> [3];
[1,2,0] -> [0,2,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.4489 true

[0,1,0] -> [0,1,0];
[1,2,1] -> [1,2,1];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.1528 false

[] -> [];
[0,2,3] -> [3,2,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

1.5092 true

[2,1,2] -> [2,1,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.7360 false

[1] -> [1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0052 false

[] -> [];
[0,2] -> [2,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0444 true

[3,0,3] -> [3,0,3];
[0,2] -> [2,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

5.1393 true

[2,1,1] -> [1,1,2];
[1,2] -> [2,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.3493 true

[2,1] -> [1,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0349 true

[] -> [];
[3] -> [3];
[2,3] -> [3,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0351 true

[1] -> [1];
[2] -> [2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0049 false

[3,1,2] -> [2,1,3];
[2,1,3] -> [3,1,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.7136 true

[0] -> [0];
[] -> [];
[1,0,1] -> [1,0,1];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0038 false

[] -> [];
[2] -> [2];
[3] -> [3];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0053 false

[0,1] -> [1,0];
[0] -> [0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0255 true

[3,1,2] -> [2,1,3];
[] -> [];
[1,3,3] -> [3,3,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.7414 true

[1] -> [1];
[2] -> [2];
[1,1] -> [1,1];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0048 false

[0] -> [0];
[0,0] -> [0,0];
[1] -> [1];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0038 false

[] -> [];
[2] -> [2];
[3] -> [3];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0053 false

[2,1] -> [1,2];
[] -> [];
[3,2,1] -> [1,2,3];
[0] -> [0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0354 true

[] -> [];
[0,2] -> [2,0];
[1] -> [1];
[3,1,0] -> [0,1,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0433 true

[] -> [];
[0,1,2] -> [2,1,0];
[0] -> [0];
[3] -> [3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.6510 true

[1] -> [1];
[0,2,2] -> [2,2,0];
[1,3] -> [3,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

1.0732 true

[] -> [];
[0,0,3] -> [3,0,0];
[2] -> [2];
[0,0,0] -> [0,0,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.5354 true

[1,1,1] -> [1,1,1];
[] -> [];
[1] -> [1];
[3] -> [3];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.2421 false

[0,0,0] -> [0,0,0];
[] -> [];
[0] -> [0];
[0,0,1] -> [1,0,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

2.7210 true

[3,3] -> [3,3];
[0] -> [0];
[2,0] -> [0,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.2216 true

[0,3,0] -> [0,3,0];
[] -> [];
[1] -> [1];
[0,3,2] -> [2,3,0];

=================================
None
[] -> [];
[0,3,1] -> [1,3,0];
[2,1] -> [1,2];
[1] -> [1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.5955 true

[0,0] -> [0,0];
[2] -> [2];
[0,2] -> [2,0];
[] -> [];
[2,2,3] -> [3,2,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0576 true

[2,1,3] -> [3,1,2];
[2,1,2] -> [2,1,2];
[0] -> [0];
[1,1] -> [1,1];
[1,3] -> [3,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1206 true

[1] -> [1];
[0,3,2] -> [2,3,0];
[] -> [];
[0,1,2] -> [2,1,0];
[0] -> [0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

1.5477 true

[] -> [];
[3,3] -> [3,3];
[3,1,0] -> [0,1,3];
[2] -> [2];
[1,3] -> [3,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

2.5363 true

[1,1] -> [1,1];
[3] -> [3];
[] -> [];
[3,0] -> [0,3];
[2] -> [2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1878 true

[2,0,1] -> [1,0,2];
[2] -> [2];
[3] -> [3];
[] -> [];
[3,2,2] -> [2,2,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.2705 true

[] -> [];
[2] -> [2];
[1,2] -> [2,1];
[0,1] -> [1,0];
[0,1,3] -> [3,1,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0331 true

[1] -> [1];
[] -> [];
[3,3,3] -> [3,3,3];
[0,3,0] -> [0,3,0];
[3,3] -> [3,3];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0055 false

[] -> [];
[0] -> [0];
[0,2] -> [2,0];
[3] -> [3];
[3,1] -> [1,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0580 true

[1,2,1] -> [1,2,1];
[0] -> [0];
[2,1] -> [1,2];
[2,2] -> [2,2];
[3] -> [3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1598 true

[2,3,3] -> [3,3,2];
[2] -> [2];
[3,0] -> [0,3];
[] -> [];
[1,2,2] -> [2,2,1];
[2,1,0] -> [0,1,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

1.8808 true

[1] -> [1];
[0,1] -> [1,0];
[1,1] -> [1,1];
[2] -> [2];
[3,1,3] -> [3,1,3];
[3,1] -> [1,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0200 true

[2] -> [2];
[0,2,2] -> [2,2,0];
[1,2,3] -> [3,2,1];
[3,0,2] -> [2,0,3];
[3,2,0] -> [0,2,3];
[1,3,3] -> [3,3,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.4586 true

[] -> [];
[2] -> [2];
[0] -> [0];
[3] -> [3];
[3,2,3] -> [3,2,3];
[0,1,3] -> [3,1,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.3956 true

[3,1,0] -> [0,1,3];
[2] -> [2];
[] -> [];
[0] -> [0];
[1,1,3] -> [3,1,1];
[2,2] -> [2,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.2400 true

[] -> [];
[0,1] -> [1,0];
[1,1] -> [1,1];
[3,3] -> [3,3];
[2] -> [2];
[3,3,1] -> [1,3,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0268 true

[2] -> [2];
[2,3] -> [3,2];
[3,2] -> [2,3];
[] -> [];
[1,1,1] -> [1,1,1];
[0,0] -> [0,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0901 true

[2,3] -> [3,2];
[] -> [];
[2,1,3] -> [3,1,2];
[2] -> [2];
[1,2] -> [2,1];
[2,1,0] -> [0,1,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0591 true

[0,3,0] -> [0,3,0];
[] -> [];
[2,3,3] -> [3,3,2];
[0,1] -> [1,0];
[2] -> [2];
[0,0] -> [0,0];

=================================
None
[1] -> [1];
[2] -> [2];
[2,2] -> [2,2];
[3,3,0] -> [0,3,3];
[] -> [];
[0] -> [0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.7987 true

[3,0,0] -> [0,0,3];
[3,1,1] -> [1,1,3];
[0,2,0] -> [0,2,0];
[0,3,3] -> [3,3,0];
[1,1,0] -> [0,1,1];
[0] -> [0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1594 true

[1,0,3] -> [3,0,1];
[3] -> [3];
[2,2,1] -> [1,2,2];
[3,1,0] -> [0,1,3];
[1,1,3] -> [3,1,1];
[0,0] -> [0,0];
[0,2,2] -> [2,2,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.2375 true

[1,3,0] -> [0,3,1];
[1,0] -> [0,1];
[] -> [];
[1,1,3] -> [3,1,1];
[1,1] -> [1,1];
[2,2,0] -> [0,2,2];
[2,0,1] -> [1,0,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.6024 true

[3,1] -> [1,3];
[3] -> [3];
[] -> [];
[0] -> [0];
[2] -> [2];
[2,1,3] -> [3,1,2];
[3,0] -> [0,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0489 true

[3] -> [3];
[2] -> [2];
[2,2,0] -> [0,2,2];
[0,3,0] -> [0,3,0];
[1] -> [1];
[] -> [];
[0,3,1] -> [1,3,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.5153 true

[] -> [];
[2,1] -> [1,2];
[1,0,1] -> [1,0,1];
[3,2,2] -> [2,2,3];
[1,2,1] -> [1,2,1];
[1,2] -> [2,1];
[3] -> [3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0372 true

[0,0,0] -> [0,0,0];
[0,3,1] -> [1,3,0];
[0,2,0] -> [0,2,0];
[2,2] -> [2,2];
[0,2] -> [2,0];
[1] -> [1];
[2] -> [2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

10.9093 true

[2] -> [2];
[0,0] -> [0,0];
[2,2,0] -> [0,2,2];
[0,0,2] -> [2,0,0];
[3,3,0] -> [0,3,3];
[1] -> [1];
[0,1,3] -> [3,1,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.5287 true

[3] -> [3];
[2,2] -> [2,2];
[3,3,0] -> [0,3,3];
[0,0,2] -> [2,0,0];
[2] -> [2];
[0,1,2] -> [2,1,0];
[2,3] -> [3,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.9145 true

[0] -> [0];
[3,1] -> [1,3];
[2,2,1] -> [1,2,2];
[1,1,1] -> [1,1,1];
[1] -> [1];
[1,2] -> [2,1];
[3,2,2] -> [2,2,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0505 true

[0,3,0] -> [0,3,0];
[2,0,3] -> [3,0,2];
[] -> [];
[1,1] -> [1,1];
[1] -> [1];
[3,0] -> [0,3];
[3,3] -> [3,3];
[0,1] -> [1,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

2.1087 true

[1] -> [1];
[0,1,3] -> [3,1,0];
[3,2] -> [2,3];
[0,1] -> [1,0];
[2] -> [2];
[] -> [];
[0] -> [0];
[2,2,3] -> [3,2,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

1.1211 true

[] -> [];
[3] -> [3];
[1,0,1] -> [1,0,1];
[2] -> [2];
[3,0,3] -> [3,0,3];
[0] -> [0];
[3,2,2] -> [2,2,3];
[3,2] -> [2,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.6146 true

[2,0] -> [0,2];
[] -> [];
[3,1] -> [1,3];
[0,2,3] -> [3,2,0];
[1,1] -> [1,1];
[0,3] -> [3,0];
[1,0] -> [0,1];
[0] -> [0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0337 true

[3,3,0] -> [0,3,3];
[] -> [];
[2] -> [2];
[3] -> [3];
[0] -> [0];
[0,0,0] -> [0,0,0];
[0,1] -> [1,0];
[1] -> [1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.5759 true

[1,3] -> [3,1];
[1,2] -> [2,1];
[3,3] -> [3,3];
[1,0] -> [0,1];
[2,2] -> [2,2];
[] -> [];
[0,3] -> [3,0];
[3] -> [3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0379 true

[1,3,0] -> [0,3,1];
[] -> [];
[3,2,2] -> [2,2,3];
[3,1,2] -> [2,1,3];
[0,3] -> [3,0];
[3,3] -> [3,3];
[1] -> [1];
[1,2] -> [2,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.6064 true

[2,2] -> [2,2];
[2,0,3] -> [3,0,2];
[0] -> [0];
[1] -> [1];
[0,0] -> [0,0];
[0,2,2] -> [2,2,0];
[] -> [];
[3,3,2] -> [2,3,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

5.3312 true

[3,0] -> [0,3];
[3] -> [3];
[0,3] -> [3,0];
[0,3,1] -> [1,3,0];
[1,3,0] -> [0,3,1];
[0,1] -> [1,0];
[3,2] -> [2,3];
[1,0,3] -> [3,0,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0410 true

[1] -> [1];
[0,1] -> [1,0];
[] -> [];
[1,0,1] -> [1,0,1];
[2,0,3] -> [3,0,2];
[3,0,1] -> [1,0,3];
[0,2,0] -> [0,2,0];
[0,2] -> [2,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0213 true

[] -> [];
[2] -> [2];
[1] -> [1];
[0] -> [0];
[2,1] -> [1,2];
[3,0] -> [0,3];
[1,1,2] -> [2,1,1];
[1,1] -> [1,1];
[3,2] -> [2,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0381 true

[2,1,0] -> [0,1,2];
[2,3,1] -> [1,3,2];
[1,3] -> [3,1];
[2,0] -> [0,2];
[0,2] -> [2,0];
[0] -> [0];
[2,3,0] -> [0,3,2];
[2] -> [2];
[1,2,0] -> [0,2,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.2356 true

[0,1] -> [1,0];
[] -> [];
[0,0] -> [0,0];
[0] -> [0];
[1,3] -> [3,1];
[1,2,1] -> [1,2,1];
[2,0] -> [0,2];
[2,2,1] -> [1,2,2];
[0,3] -> [3,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0273 true

[2,3] -> [3,2];
[] -> [];
[1] -> [1];
[1,2,3] -> [3,2,1];
[0,1,1] -> [1,1,0];
[3] -> [3];
[0] -> [0];
[0,2] -> [2,0];
[2] -> [2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0259 true

[3,2,0] -> [0,2,3];
[] -> [];
[1,0] -> [0,1];
[2,3,2] -> [2,3,2];
[0,1] -> [1,0];
[2,3] -> [3,2];
[0,3] -> [3,0];
[1,0,2] -> [2,0,1];
[2,2] -> [2,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.4479 true

[3,2,2] -> [2,2,3];
[2,1,3] -> [3,1,2];
[1,0] -> [0,1];
[0,1,1] -> [1,1,0];
[2] -> [2];
[] -> [];
[1,2,3] -> [3,2,1];
[1,1] -> [1,1];
[1,1,3] -> [3,1,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.4276 true

[] -> [];
[3,3,0] -> [0,3,3];
[1,3] -> [3,1];
[3,2] -> [2,3];
[0,1,0] -> [0,1,0];
[2,1,3] -> [3,1,2];
[3] -> [3];
[1,3,1] -> [1,3,1];
[0,0] -> [0,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.6549 true

[] -> [];
[0] -> [0];
[1] -> [1];
[3,0] -> [0,3];
[2,3,2] -> [2,3,2];
[0,1,2] -> [2,1,0];
[3,3,0] -> [0,3,3];
[0,0,3] -> [3,0,0];
[2,3] -> [3,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0464 true

[2,3,2] -> [2,3,2];
[0] -> [0];
[1] -> [1];
[1,0] -> [0,1];
[] -> [];
[0,0,2] -> [2,0,0];
[1,0,3] -> [3,0,1];
[0,3,2] -> [2,3,0];
[2,0] -> [0,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

3.1163 true

[0,3,3] -> [3,3,0];
[1] -> [1];
[3] -> [3];
[0] -> [0];
[] -> [];
[3,0,1] -> [1,0,3];
[2,2,2] -> [2,2,2];
[1,3,1] -> [1,3,1];
[3,1,3] -> [3,1,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.5860 true

[3,0] -> [0,3];
[] -> [];
[3] -> [3];
[1,2] -> [2,1];
[0,0] -> [0,0];
[2] -> [2];
[0,2,0] -> [0,2,0];
[1,0] -> [0,1];
[2,2,3] -> [3,2,2];
[0,0,2] -> [2,0,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0418 true

[3,2] -> [2,3];
[1,1,2] -> [2,1,1];
[2] -> [2];
[1,0,2] -> [2,0,1];
[0,2] -> [2,0];
[] -> [];
[3] -> [3];
[2,3] -> [3,2];
[2,2,0] -> [0,2,2];
[3,2,1] -> [1,2,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0271 true

[0] -> [0];
[] -> [];
[0,1,3] -> [3,1,0];
[2,3,0] -> [0,3,2];
[3] -> [3];
[2,1] -> [1,2];
[2] -> [2];
[2,0] -> [0,2];
[1,0] -> [0,1];
[0,1,0] -> [0,1,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.3769 true

[3,0,3] -> [3,0,3];
[1,2,0] -> [0,2,1];
[1] -> [1];
[3,1,0] -> [0,1,3];
[0,1,1] -> [1,1,0];
[] -> [];
[2,2] -> [2,2];
[0,3,0] -> [0,3,0];
[0,0,0] -> [0,0,0];
[3] -> [3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

20.6671 true

[3,1,1] -> [1,1,3];
[1] -> [1];
[3,3] -> [3,3];
[1,1] -> [1,1];
[3,1,2] -> [2,1,3];
[3,3,2] -> [2,3,3];
[1,3] -> [3,1];
[] -> [];
[0,3,2] -> [2,3,0];
[3] -> [3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0920 true

[1,0,0] -> [0,0,1];
[2,1] -> [1,2];
[1,0,3] -> [3,0,1];
[0,3,1] -> [1,3,0];
[0] -> [0];
[3,0,2] -> [2,0,3];
[1,1,2] -> [2,1,1];
[3,1,3] -> [3,1,3];
[3,2,2] -> [2,2,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1032 true

[0,3,1] -> [1,3,0];
[2,1] -> [1,2];
[] -> [];
[3] -> [3];
[2,2,0] -> [0,2,2];
[1] -> [1];
[2,1,3] -> [3,1,2];
[0,3] -> [3,0];
[3,2,3] -> [3,2,3];
[0,0,2] -> [2,0,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.5746 true

[] -> [];
[3,3] -> [3,3];
[3,2,2] -> [2,2,3];
[2,3,0] -> [0,3,2];
[0,2] -> [2,0];
[1,2,0] -> [0,2,1];
[2] -> [2];
[3,0] -> [0,3];
[2,0,2] -> [2,0,2];
[3] -> [3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

1.1468 true

[] -> [];
[1] -> [1];
[3] -> [3];
[2,0] -> [0,2];
[0,3,2] -> [2,3,0];
[1,3] -> [3,1];
[1,1,1] -> [1,1,1];
[2,2] -> [2,2];
[1,2] -> [2,1];
[0,2,2] -> [2,2,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0494 true

[1,1] -> [1,1];
[2,1] -> [1,2];
[0,0] -> [0,0];
[] -> [];
[2,3] -> [3,2];
[0,0,3] -> [3,0,0];
[3,0] -> [0,3];
[1] -> [1];
[2,2] -> [2,2];
[0] -> [0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0501 true

[] -> [];
[3,2] -> [2,3];
[2,3,3] -> [3,3,2];
[2,1,2] -> [2,1,2];
[0] -> [0];
[3] -> [3];
[2,1] -> [1,2];
[1] -> [1];
[2,3,1] -> [1,3,2];
[1,0,1] -> [1,0,1];
[1,3,3] -> [3,3,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0502 true

[1,0,2] -> [2,0,1];
[3,0] -> [0,3];
[1,3] -> [3,1];
[3,3,3] -> [3,3,3];
[] -> [];
[2,3,0] -> [0,3,2];
[1] -> [1];
[3,2,1] -> [1,2,3];
[0] -> [0];
[3] -> [3];
[2] -> [2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1492 true

[] -> [];
[2,0] -> [0,2];
[0,0] -> [0,0];
[0,0,2] -> [2,0,0];
[3,1] -> [1,3];
[3,2,0] -> [0,2,3];
[2] -> [2];
[1,3] -> [3,1];
[1] -> [1];
[1,3,2] -> [2,3,1];
[0,0,0] -> [0,0,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0328 true

[1,3,0] -> [0,3,1];
[2,1] -> [1,2];
[0,1,3] -> [3,1,0];
[] -> [];
[3] -> [3];
[1,2,1] -> [1,2,1];
[1] -> [1];
[0,1,1] -> [1,1,0];
[3,3] -> [3,3];
[1,1,1] -> [1,1,1];
[0] -> [0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.5016 true

[0,3,3] -> [3,3,0];
[3,3,0] -> [0,3,3];
[1] -> [1];
[0,2] -> [2,0];
[3,0] -> [0,3];
[0] -> [0];
[0,1] -> [1,0];
[] -> [];
[3,2] -> [2,3];
[2,0] -> [0,2];
[1,1] -> [1,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

1.7289 true

[] -> [];
[3] -> [3];
[2,2] -> [2,2];
[3,2,0] -> [0,2,3];
[0,1] -> [1,0];
[1,1] -> [1,1];
[3,0,3] -> [3,0,3];
[2] -> [2];
[2,3] -> [3,2];
[1,1,2] -> [2,1,1];
[3,3] -> [3,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.5726 true

[0,1,0] -> [0,1,0];
[2] -> [2];
[] -> [];
[2,3] -> [3,2];
[2,0,0] -> [0,0,2];
[3] -> [3];
[1,3] -> [3,1];
[0,2,3] -> [3,2,0];
[2,2,0] -> [0,2,2];
[1,3,3] -> [3,3,1];
[1,1,2] -> [2,1,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.3767 true

[2,0] -> [0,2];
[3,1,1] -> [1,1,3];
[2] -> [2];
[0] -> [0];
[1,2] -> [2,1];
[2,1,0] -> [0,1,2];
[3,0] -> [0,3];
[3] -> [3];
[1,3,1] -> [1,3,1];
[3,2,3] -> [3,2,3];
[1,1,3] -> [3,1,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0317 true

[] -> [];
[3,0,2] -> [2,0,3];
[1,3,1] -> [1,3,1];
[0] -> [0];
[3] -> [3];
[1] -> [1];
[0,1,3] -> [3,1,0];
[3,1,0] -> [0,1,3];
[1,2] -> [2,1];
[0,3] -> [3,0];
[2,2,3] -> [3,2,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.5156 true

[2,2,1] -> [1,2,2];
[3,1,2] -> [2,1,3];
[] -> [];
[0] -> [0];
[1] -> [1];
[1,2] -> [2,1];
[0,3,3] -> [3,3,0];
[2] -> [2];
[3,0] -> [0,3];
[3,1] -> [1,3];
[3,3,0] -> [0,3,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.3199 true

[1,1] -> [1,1];
[3,1,3] -> [3,1,3];
[2,3,1] -> [1,3,2];
[] -> [];
[3,0] -> [0,3];
[1,2] -> [2,1];
[2,1,3] -> [3,1,2];
[2,0,2] -> [2,0,2];
[3,1,2] -> [2,1,3];
[3] -> [3];
[3,1,0] -> [0,1,3];
[2,1,2] -> [2,1,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

5.0526 true

[0] -> [0];
[3,2,3] -> [3,2,3];
[] -> [];
[2,1] -> [1,2];
[1,0,0] -> [0,0,1];
[3,2,2] -> [2,2,3];
[0,1] -> [1,0];
[1] -> [1];
[2] -> [2];
[3,0] -> [0,3];
[3,2] -> [2,3];
[3] -> [3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0326 true

[2,3] -> [3,2];
[2,0,1] -> [1,0,2];
[0,1] -> [1,0];
[1,1,0] -> [0,1,1];
[2,2] -> [2,2];
[0,3] -> [3,0];
[] -> [];
[3] -> [3];
[0,2,0] -> [0,2,0];
[0] -> [0];
[2] -> [2];
[2,0] -> [0,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0258 true

[] -> [];
[3,0,2] -> [2,0,3];
[1] -> [1];
[0] -> [0];
[2,3,0] -> [0,3,2];
[2,0,3] -> [3,0,2];
[2,2] -> [2,2];
[2,0,0] -> [0,0,2];
[2,1] -> [1,2];
[3,2] -> [2,3];
[2] -> [2];
[3,1] -> [1,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.2213 true

[] -> [];
[0] -> [0];
[3,1] -> [1,3];
[1] -> [1];
[3] -> [3];
[0,3] -> [3,0];
[2] -> [2];
[2,1,2] -> [2,1,2];
[2,3] -> [3,2];
[3,2] -> [2,3];
[2,0,1] -> [1,0,2];
[2,2] -> [2,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0462 true

[0] -> [0];
[2,3,0] -> [0,3,2];
[0,2,1] -> [1,2,0];
[1,0] -> [0,1];
[] -> [];
[1,3,2] -> [2,3,1];
[3,2,0] -> [0,2,3];
[3,3] -> [3,3];
[2] -> [2];
[1,1] -> [1,1];
[2,2,2] -> [2,2,2];
[3,0,1] -> [1,0,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.6662 true

[3,1] -> [1,3];
[] -> [];
[3,3,0] -> [0,3,3];
[3,2] -> [2,3];
[1,1,2] -> [2,1,1];
[1,0,0] -> [0,0,1];
[0,1] -> [1,0];
[1,3] -> [3,1];
[2,0] -> [0,2];
[3,0,1] -> [1,0,3];
[3,2,1] -> [1,2,3];
[2] -> [2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0479 true

[2] -> [2];
[0,1] -> [1,0];
[1,0,1] -> [1,0,1];
[3,2,3] -> [3,2,3];
[0] -> [0];
[0,3] -> [3,0];
[] -> [];
[2,0,1] -> [1,0,2];
[0,0] -> [0,0];
[2,3] -> [3,2];
[2,0] -> [0,2];
[3] -> [3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0398 true

[1,0,3] -> [3,0,1];
[0] -> [0];
[] -> [];
[1,1,1] -> [1,1,1];
[1,0] -> [0,1];
[3,2] -> [2,3];
[1,3] -> [3,1];
[3,1] -> [1,3];
[1,0,2] -> [2,0,1];
[3,3] -> [3,3];
[1] -> [1];
[3] -> [3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.2293 true

[3,2] -> [2,3];
[3,2,0] -> [0,2,3];
[] -> [];
[3,2,3] -> [3,2,3];
[0,2] -> [2,0];
[1] -> [1];
[0,2,2] -> [2,2,0];
[3] -> [3];
[2] -> [2];
[0,3] -> [3,0];
[1,1] -> [1,1];
[3,3] -> [3,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0246 true

[] -> [];
[2] -> [2];
[2,0,0] -> [0,0,2];
[0] -> [0];
[1,0,3] -> [3,0,1];
[0,1] -> [1,0];
[2,1,3] -> [3,1,2];
[1] -> [1];
[0,2,0] -> [0,2,0];
[2,0] -> [0,2];
[3] -> [3];
[0,2,3] -> [3,2,0];
[3,0] -> [0,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1635 true

[] -> [];
[1] -> [1];
[0,0] -> [0,0];
[1,1] -> [1,1];
[0] -> [0];
[1,2,3] -> [3,2,1];
[1,2,1] -> [1,2,1];
[0,1,1] -> [1,1,0];
[3,2] -> [2,3];
[3,0,2] -> [2,0,3];
[3,1] -> [1,3];
[2,1,1] -> [1,1,2];
[0,2] -> [2,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

1.7932 true

[0,2] -> [2,0];
[1] -> [1];
[2,2] -> [2,2];
[] -> [];
[2,1] -> [1,2];
[1,3] -> [3,1];
[2,1,0] -> [0,1,2];
[1,3,3] -> [3,3,1];
[0,0,0] -> [0,0,0];
[3] -> [3];
[2,1,2] -> [2,1,2];
[1,1] -> [1,1];
[0] -> [0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0444 true

[3,2,1] -> [1,2,3];
[2] -> [2];
[0] -> [0];
[1,3,0] -> [0,3,1];
[1,3] -> [3,1];
[0,2] -> [2,0];
[] -> [];
[1,0,0] -> [0,0,1];
[1,0] -> [0,1];
[2,2,0] -> [0,2,2];
[0,1] -> [1,0];
[2,1,1] -> [1,1,2];
[0,0,1] -> [1,0,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.5483 true

[2,3,1] -> [1,3,2];
[1,0,2] -> [2,0,1];
[3] -> [3];
[2,0,1] -> [1,0,2];
[] -> [];
[0] -> [0];
[1] -> [1];
[2,1] -> [1,2];
[3,0,3] -> [3,0,3];
[1,0] -> [0,1];
[2,3] -> [3,2];
[0,2,1] -> [1,2,0];
[0,1,3] -> [3,1,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.6302 true

[3] -> [3];
[2,3] -> [3,2];
[1] -> [1];
[2,0,1] -> [1,0,2];
[1,3] -> [3,1];
[] -> [];
[1,3,0] -> [0,3,1];
[1,1] -> [1,1];
[3,2] -> [2,3];
[1,3,3] -> [3,3,1];
[0,3] -> [3,0];
[2,1,0] -> [0,1,2];
[1,0,3] -> [3,0,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0357 true

[2,0,1] -> [1,0,2];
[] -> [];
[0,3,2] -> [2,3,0];
[2] -> [2];
[1,3] -> [3,1];
[2,1] -> [1,2];
[3,2] -> [2,3];
[3,0] -> [0,3];
[3] -> [3];
[2,3,1] -> [1,3,2];
[2,2,2] -> [2,2,2];
[0,1,1] -> [1,1,0];
[1] -> [1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1470 true

[0] -> [0];
[1] -> [1];
[] -> [];
[3,1] -> [1,3];
[1,1,0] -> [0,1,1];
[1,1,1] -> [1,1,1];
[1,2] -> [2,1];
[3,0] -> [0,3];
[2,0] -> [0,2];
[2,3] -> [3,2];
[0,1] -> [1,0];
[3] -> [3];
[3,2] -> [2,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0474 true

[2,1] -> [1,2];
[0,3] -> [3,0];
[2,0] -> [0,2];
[3] -> [3];
[] -> [];
[0,1] -> [1,0];
[0,0,3] -> [3,0,0];
[2] -> [2];
[2,1,2] -> [2,1,2];
[3,2] -> [2,3];
[2,2,0] -> [0,2,2];
[2,2,2] -> [2,2,2];
[0,0] -> [0,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0359 true

[3,2,1] -> [1,2,3];
[] -> [];
[0] -> [0];
[2,3,2] -> [2,3,2];
[3,0] -> [0,3];
[1,2,0] -> [0,2,1];
[3,1] -> [1,3];
[3] -> [3];
[0,2,2] -> [2,2,0];
[1,3,0] -> [0,3,1];
[1] -> [1];
[3,3] -> [3,3];
[0,0] -> [0,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.3261 true

[2,1] -> [1,2];
[] -> [];
[1,1,3] -> [3,1,1];
[0,3,1] -> [1,3,0];
[2] -> [2];
[0,0,0] -> [0,0,0];
[0,2] -> [2,0];
[3] -> [3];
[2,3,3] -> [3,3,2];
[3,1,3] -> [3,1,3];
[3,0,0] -> [0,0,3];
[0,1,1] -> [1,1,0];
[0,3] -> [3,0];
[3,2] -> [2,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0369 true

[1,1] -> [1,1];
[1,2] -> [2,1];
[1,1,1] -> [1,1,1];
[] -> [];
[3,1,2] -> [2,1,3];
[0,0,1] -> [1,0,0];
[3,1] -> [1,3];
[0,0,0] -> [0,0,0];
[2] -> [2];
[3,3] -> [3,3];
[3,0,1] -> [1,0,3];
[1] -> [1];
[3] -> [3];
[2,0] -> [0,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0516 true

[1,1,0] -> [0,1,1];
[] -> [];
[1,1,1] -> [1,1,1];
[1] -> [1];
[0] -> [0];
[0,0] -> [0,0];
[1,0,3] -> [3,0,1];
[2] -> [2];
[0,3,0] -> [0,3,0];
[3,3,1] -> [1,3,3];
[3,2] -> [2,3];
[0,0,0] -> [0,0,0];
[3] -> [3];
[0,3] -> [3,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1998 true

[0] -> [0];
[3,2] -> [2,3];
[1] -> [1];
[3] -> [3];
[] -> [];
[1,3] -> [3,1];
[0,1,0] -> [0,1,0];
[1,0] -> [0,1];
[2,0,0] -> [0,0,2];
[1,2] -> [2,1];
[2,1,3] -> [3,1,2];
[1,1,0] -> [0,1,1];
[1,1] -> [1,1];
[1,1,2] -> [2,1,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0725 true

[0] -> [0];
[2] -> [2];
[3] -> [3];
[0,1] -> [1,0];
[1,1] -> [1,1];
[] -> [];
[1,2,3] -> [3,2,1];
[3,1,1] -> [1,1,3];
[2,2] -> [2,2];
[2,3] -> [3,2];
[2,0,1] -> [1,0,2];
[3,1,3] -> [3,1,3];
[3,1,0] -> [0,1,3];
[1,3] -> [3,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0369 true

[2,0,2] -> [2,0,2];
[3,3] -> [3,3];
[0,2] -> [2,0];
[0,1] -> [1,0];
[0,0,1] -> [1,0,0];
[3,0] -> [0,3];
[1,1,0] -> [0,1,1];
[1,2,3] -> [3,2,1];
[1,3,0] -> [0,3,1];
[0] -> [0];
[3,0,3] -> [3,0,3];
[3,2,2] -> [2,2,3];
[] -> [];
[2,2] -> [2,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.2105 true

[] -> [];
[2,0] -> [0,2];
[3,0] -> [0,3];
[0,0,3] -> [3,0,0];
[0,0] -> [0,0];
[2] -> [2];
[2,3,3] -> [3,3,2];
[2,2,2] -> [2,2,2];
[3,3,0] -> [0,3,3];
[3] -> [3];
[1,1,1] -> [1,1,1];
[3,3] -> [3,3];
[0,0,0] -> [0,0,0];
[0,3,2] -> [2,3,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0356 true

[] -> [];
[3] -> [3];
[0] -> [0];
[3,1] -> [1,3];
[1] -> [1];
[2,1] -> [1,2];
[2] -> [2];
[1,3,2] -> [2,3,1];
[0,2,2] -> [2,2,0];
[2,0] -> [0,2];
[1,1] -> [1,1];
[3,2] -> [2,3];
[0,1] -> [1,0];
[1,3,1] -> [1,3,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0571 true

[0,2,3] -> [3,2,0];
[0] -> [0];
[0,2] -> [2,0];
[1,2] -> [2,1];
[1,1] -> [1,1];
[] -> [];
[1,1,2] -> [2,1,1];
[3,1] -> [1,3];
[1,3] -> [3,1];
[2] -> [2];
[1,0,0] -> [0,0,1];
[3,3,1] -> [1,3,3];
[2,3] -> [3,2];
[0,2,2] -> [2,2,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0967 true

[2,0] -> [0,2];
[1] -> [1];
[2] -> [2];
[2,2,2] -> [2,2,2];
[0,3,1] -> [1,3,0];
[] -> [];
[0] -> [0];
[0,0] -> [0,0];
[3,3] -> [3,3];
[1,2] -> [2,1];
[1,0,2] -> [2,0,1];
[3,0,1] -> [1,0,3];
[0,1,0] -> [0,1,0];
[2,0,3] -> [3,0,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0336 true

[1,0,0] -> [0,0,1];
[0,0,0] -> [0,0,0];
[3,3,2] -> [2,3,3];
[] -> [];
[0,1] -> [1,0];
[2,3,2] -> [2,3,2];
[0] -> [0];
[2,3,1] -> [1,3,2];
[1] -> [1];
[2] -> [2];
[3,0,1] -> [1,0,3];
[3,3] -> [3,3];
[1,0,3] -> [3,0,1];
[2,1] -> [1,2];
[2,0,1] -> [1,0,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1082 true

[0] -> [0];
[] -> [];
[1] -> [1];
[3,3] -> [3,3];
[1,2,1] -> [1,2,1];
[3,3,1] -> [1,3,3];
[2] -> [2];
[3] -> [3];
[1,1,0] -> [0,1,1];
[1,0] -> [0,1];
[1,1] -> [1,1];
[1,3] -> [3,1];
[2,1] -> [1,2];
[2,0,1] -> [1,0,2];
[1,1,3] -> [3,1,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.8905 true

[] -> [];
[3,2] -> [2,3];
[1] -> [1];
[0,1] -> [1,0];
[2] -> [2];
[1,2] -> [2,1];
[1,3,2] -> [2,3,1];
[0,2,3] -> [3,2,0];
[3,3] -> [3,3];
[0,2] -> [2,0];
[0,0] -> [0,0];
[1,2,2] -> [2,2,1];
[0] -> [0];
[1,1,2] -> [2,1,1];
[1,2,3] -> [3,2,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0275 true

[2,0,1] -> [1,0,2];
[] -> [];
[1,2] -> [2,1];
[2] -> [2];
[0] -> [0];
[2,0] -> [0,2];
[1,0] -> [0,1];
[3] -> [3];
[2,2] -> [2,2];
[3,1] -> [1,3];
[2,0,0] -> [0,0,2];
[2,2,3] -> [3,2,2];
[3,0] -> [0,3];
[1,0,0] -> [0,0,1];
[0,3,2] -> [2,3,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.2857 true

[] -> [];
[2] -> [2];
[1,0] -> [0,1];
[3,2] -> [2,3];
[2,0,1] -> [1,0,2];
[0,0,0] -> [0,0,0];
[0] -> [0];
[1,2,2] -> [2,2,1];
[1,1] -> [1,1];
[3] -> [3];
[3,3] -> [3,3];
[2,0,0] -> [0,0,2];
[2,3] -> [3,2];
[2,0,3] -> [3,0,2];
[2,1,3] -> [3,1,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0341 true

[3,2,3] -> [3,2,3];
[0] -> [0];
[2,3,1] -> [1,3,2];
[2,1] -> [1,2];
[] -> [];
[2,2] -> [2,2];
[2,3,3] -> [3,3,2];
[0,2] -> [2,0];
[0,1,1] -> [1,1,0];
[2] -> [2];
[2,0] -> [0,2];
[1] -> [1];
[3] -> [3];
[1,2] -> [2,1];
[0,3] -> [3,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

85.5208 true

[1,2,1] -> [1,2,1];
[2,3] -> [3,2];
[] -> [];
[3,2] -> [2,3];
[0,3] -> [3,0];
[2] -> [2];
[2,2,2] -> [2,2,2];
[3] -> [3];
[1,2] -> [2,1];
[0,2] -> [2,0];
[3,2,0] -> [0,2,3];
[1,0] -> [0,1];
[1] -> [1];
[0] -> [0];
[0,1] -> [1,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.8338 true

[1,1,1] -> [1,1,1];
[] -> [];
[2] -> [2];
[1,1,3] -> [3,1,1];
[2,0] -> [0,2];
[0,0] -> [0,0];
[1,0,3] -> [3,0,1];
[2,2,3] -> [3,2,2];
[2,1,3] -> [3,1,2];
[1,1,0] -> [0,1,1];
[0,3] -> [3,0];
[1,2,1] -> [1,2,1];
[0] -> [0];
[3] -> [3];
[1] -> [1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

18.9152 true

[2] -> [2];
[3,0,2] -> [2,0,3];
[1,0,2] -> [2,0,1];
[3,2,0] -> [0,2,3];
[] -> [];
[3,1,0] -> [0,1,3];
[3,0] -> [0,3];
[0,1,3] -> [3,1,0];
[0] -> [0];
[3,3] -> [3,3];
[0,1,1] -> [1,1,0];
[0,2,1] -> [1,2,0];
[3,2] -> [2,3];
[1] -> [1];
[2,1] -> [1,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.2857 true

[3] -> [3];
[] -> [];
[1,1,0] -> [0,1,1];
[0] -> [0];
[2] -> [2];
[1,3,1] -> [1,3,1];
[0,0,2] -> [2,0,0];
[2,1,1] -> [1,1,2];
[3,2] -> [2,3];
[1,0] -> [0,1];
[2,3] -> [3,2];
[0,2] -> [2,0];
[1] -> [1];
[0,0,0] -> [0,0,0];
[1,2,2] -> [2,2,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0829 true

