list_rev_fold
[0] -> [0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0044 false

[1] -> [1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0057 false

[1,2] -> [2,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0477 true

[3,2,1] -> [1,2,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.5980 true

[0,0,2] -> [2,0,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.3710 true

[1,3,2] -> [2,3,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

1.3578 true

[0,1,0] -> [0,1,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.1723 false

[0,0,3] -> [3,0,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.5502 true

[1,1,3] -> [3,1,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

1.1947 true

[1,3,0] -> [0,3,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.6324 true

[3] -> [3];
[3,2,1] -> [1,2,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.8078 true

[0,3] -> [3,0];
[1] -> [1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0541 true

[0] -> [0];
[3,1] -> [1,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0672 true

[0,1] -> [1,0];
[0,2,1] -> [1,2,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0273 true

[1,3,2] -> [2,3,1];
[0] -> [0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

1.4560 true

[0,1,0] -> [0,1,0];
[3] -> [3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.1659 false

[1,2] -> [2,1];
[0] -> [0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0474 true

[1,0,3] -> [3,0,1];
[2] -> [2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.6376 true

[2,2] -> [2,2];
[3,3] -> [3,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0475 false

[1,3,1] -> [1,3,1];
[3] -> [3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

1.0921 false

[2,3] -> [3,2];
[3,2] -> [2,3];
[1,2] -> [2,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0600 true

[1,1,0] -> [0,1,1];
[0,0,0] -> [0,0,0];
[3,2,1] -> [1,2,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.2244 true

[0,2,0] -> [0,2,0];
[0] -> [0];
[0,1,3] -> [3,1,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

57.2241 true

[3,1] -> [1,3];
[3,0,1] -> [1,0,3];
[1] -> [1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0390 true

[0] -> [0];
[3] -> [3];
[0,2,2] -> [2,2,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

1.0698 true

[3] -> [3];
[3,2,1] -> [1,2,3];
[2,2,2] -> [2,2,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.8659 true

[3,3] -> [3,3];
[0,2,3] -> [3,2,0];
[0,3] -> [3,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

12.2633 true

[2,0] -> [0,2];
[3,2] -> [2,3];
[0,3] -> [3,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0352 true

[3,1] -> [1,3];
[3] -> [3];
[0,3] -> [3,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0503 true

[1] -> [1];
[0] -> [0];
[3] -> [3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0055 false

[1,0,1] -> [1,0,1];
[0,1,2] -> [2,1,0];
[0] -> [0];
[3,1,1] -> [1,1,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

24.9990 true

[2,1,2] -> [2,1,2];
[3,3] -> [3,3];
[1] -> [1];
[1,3,3] -> [3,3,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

2.3894 true

[3] -> [3];
[1,2,1] -> [1,2,1];
[3,3,3] -> [3,3,3];
[2] -> [2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0060 false

[1] -> [1];
[3,2] -> [2,3];
[3] -> [3];
[0,1] -> [1,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0821 true

[2,0] -> [0,2];
[0,2] -> [2,0];
[3] -> [3];
[3,2,1] -> [1,2,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0347 true

[1] -> [1];
[1,3] -> [3,1];
[1,0,1] -> [1,0,1];
[0,0] -> [0,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1168 true

[3,1] -> [1,3];
[1] -> [1];
[0,2,3] -> [3,2,0];
[2,1] -> [1,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0386 true

[1,2] -> [2,1];
[0,3] -> [3,0];
[0] -> [0];
[1,0,1] -> [1,0,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0482 true

[1,3,1] -> [1,3,1];
[0,1,1] -> [1,1,0];
[2] -> [2];
[0,0,1] -> [1,0,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

12.4230 true

[2,0,3] -> [3,0,2];
[3,0,3] -> [3,0,3];
[2,3] -> [3,2];
[2,3,2] -> [2,3,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.6364 true

[1,2,0] -> [0,2,1];
[0,0] -> [0,0];
[2,0] -> [0,2];
[1] -> [1];
[0] -> [0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0833 true

[3,2] -> [2,3];
[3] -> [3];
[1,3,0] -> [0,3,1];
[1,1,3] -> [3,1,1];
[0,0,0] -> [0,0,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0503 true

[1] -> [1];
[1,0,0] -> [0,0,1];
[0,2] -> [2,0];
[3,0] -> [0,3];
[1,1,3] -> [3,1,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1707 true

[0,2,3] -> [3,2,0];
[1,0,2] -> [2,0,1];
[0] -> [0];
[1,2] -> [2,1];
[3,2,3] -> [3,2,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

1.3913 true

[2,3] -> [3,2];
[3,2,1] -> [1,2,3];
[2,0,3] -> [3,0,2];
[2] -> [2];
[0,0] -> [0,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0575 true

[0] -> [0];
[3,3] -> [3,3];
[3,1] -> [1,3];
[0,0] -> [0,0];
[0,3,3] -> [3,3,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0656 true

[2] -> [2];
[3,3,1] -> [1,3,3];
[3,3,2] -> [2,3,3];
[3] -> [3];
[1] -> [1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.9883 true

[3,3] -> [3,3];
[0,2] -> [2,0];
[2,1] -> [1,2];
[1,3] -> [3,1];
[2] -> [2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1607 true

[0,1,1] -> [1,1,0];
[2,0,1] -> [1,0,2];
[0] -> [0];
[0,2] -> [2,0];
[3] -> [3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.3044 true

[3,1] -> [1,3];
[2,0,2] -> [2,0,2];
[2,1,2] -> [2,1,2];
[3,2,1] -> [1,2,3];
[2] -> [2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0494 true

[1,3,0] -> [0,3,1];
[3] -> [3];
[0,0] -> [0,0];
[0,3] -> [3,0];
[3,1,0] -> [0,1,3];
[1] -> [1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.6106 true

[1,0] -> [0,1];
[1] -> [1];
[1,0,3] -> [3,0,1];
[3,1] -> [1,3];
[0] -> [0];
[2,0] -> [0,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0216 true

[3] -> [3];
[0,1] -> [1,0];
[1,2,3] -> [3,2,1];
[2,3] -> [3,2];
[2,0] -> [0,2];
[2,1,2] -> [2,1,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0429 true

[1,1] -> [1,1];
[2,2] -> [2,2];
[3] -> [3];
[0,1,3] -> [3,1,0];
[3,3,0] -> [0,3,3];
[0,1,0] -> [0,1,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

1.0503 true

[3,1,1] -> [1,1,3];
[3] -> [3];
[0] -> [0];
[1,3] -> [3,1];
[2,0,3] -> [3,0,2];
[2,0,0] -> [0,0,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.4883 true

[2] -> [2];
[1] -> [1];
[3] -> [3];
[0,0,3] -> [3,0,0];
[1,3] -> [3,1];
[0,0] -> [0,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.2641 true

[0,2,2] -> [2,2,0];
[3,1] -> [1,3];
[3,2,2] -> [2,2,3];
[1,1,0] -> [0,1,1];
[1,2,1] -> [1,2,1];
[1,0] -> [0,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.9392 true

[0] -> [0];
[2,0,0] -> [0,0,2];
[1] -> [1];
[2] -> [2];
[1,1,1] -> [1,1,1];
[2,1] -> [1,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1626 true

[3,0,2] -> [2,0,3];
[1,3,1] -> [1,3,1];
[3,2] -> [2,3];
[3,3] -> [3,3];
[1] -> [1];
[1,0,1] -> [1,0,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.5197 true

[3,2] -> [2,3];
[0] -> [0];
[2,3,3] -> [3,3,2];
[0,3,0] -> [0,3,0];
[2] -> [2];
[1,1] -> [1,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0262 true

[2] -> [2];
[0,0] -> [0,0];
[2,2,2] -> [2,2,2];
[1,1] -> [1,1];
[1,3] -> [3,1];
[1] -> [1];
[3,3,3] -> [3,3,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1008 true

[3,2] -> [2,3];
[1,1,1] -> [1,1,1];
[3,0,0] -> [0,0,3];
[0,2] -> [2,0];
[1] -> [1];
[2,2] -> [2,2];
[2] -> [2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0264 true

[3] -> [3];
[1,1] -> [1,1];
[2] -> [2];
[1,1,0] -> [0,1,1];
[0,0] -> [0,0];
[2,3,1] -> [1,3,2];
[1,2] -> [2,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.2616 true

[0] -> [0];
[2,3,1] -> [1,3,2];
[3,1,2] -> [2,1,3];
[3] -> [3];
[2,1,1] -> [1,1,2];
[2,3] -> [3,2];
[0,2,1] -> [1,2,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

1.3092 true

[0,0,1] -> [1,0,0];
[1] -> [1];
[0,2] -> [2,0];
[0] -> [0];
[3,1] -> [1,3];
[1,1] -> [1,1];
[1,3,0] -> [0,3,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0976 true

[3,0] -> [0,3];
[1,3,0] -> [0,3,1];
[1] -> [1];
[1,1] -> [1,1];
[1,3,1] -> [1,3,1];
[0] -> [0];
[2,0] -> [0,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0360 true

[1,1] -> [1,1];
[0] -> [0];
[0,2,0] -> [0,2,0];
[1] -> [1];
[1,0,0] -> [0,0,1];
[1,0,2] -> [2,0,1];
[2] -> [2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.2683 true

[2,2] -> [2,2];
[3] -> [3];
[3,2] -> [2,3];
[1,3] -> [3,1];
[2,1,2] -> [2,1,2];
[1,3,2] -> [2,3,1];
[1,1] -> [1,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.3605 true

[3] -> [3];
[1] -> [1];
[2] -> [2];
[0,2] -> [2,0];
[0,3,0] -> [0,3,0];
[1,3,2] -> [2,3,1];
[0,3] -> [3,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0370 true

[2] -> [2];
[3,2,0] -> [0,2,3];
[1,3] -> [3,1];
[3] -> [3];
[1] -> [1];
[0] -> [0];
[0,2,2] -> [2,2,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.5969 true

[2,0,0] -> [0,0,2];
[0,1] -> [1,0];
[0,3,0] -> [0,3,0];
[2,3] -> [3,2];
[3,3] -> [3,3];
[2,2] -> [2,2];
[0] -> [0];
[1,2] -> [2,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1356 true

[1,1,2] -> [2,1,1];
[1] -> [1];
[2,2] -> [2,2];
[2] -> [2];
[2,3,1] -> [1,3,2];
[3,3,2] -> [2,3,3];
[3,1] -> [1,3];
[2,0,2] -> [2,0,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.2928 true

[3] -> [3];
[3,1,2] -> [2,1,3];
[2,2] -> [2,2];
[2] -> [2];
[1,2,2] -> [2,2,1];
[3,1,1] -> [1,1,3];
[0] -> [0];
[2,1] -> [1,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.4469 true

[1,0] -> [0,1];
[2,3,0] -> [0,3,2];
[3,1,3] -> [3,1,3];
[1] -> [1];
[0,3,2] -> [2,3,0];
[1,1,1] -> [1,1,1];
[2,0] -> [0,2];
[2,1,2] -> [2,1,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0255 true

[0] -> [0];
[2,0,0] -> [0,0,2];
[3] -> [3];
[1,0] -> [0,1];
[3,0] -> [0,3];
[3,0,1] -> [1,0,3];
[0,2] -> [2,0];
[1] -> [1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1588 true

[1,3] -> [3,1];
[3,2,2] -> [2,2,3];
[0,1] -> [1,0];
[3,1] -> [1,3];
[2,0] -> [0,2];
[0,3,2] -> [2,3,0];
[3] -> [3];
[0,2] -> [2,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0388 true

[1,3,3] -> [3,3,1];
[0,2,0] -> [0,2,0];
[1,1,3] -> [3,1,1];
[3,0,2] -> [2,0,3];
[3,1,2] -> [2,1,3];
[1,2] -> [2,1];
[1,1] -> [1,1];
[1] -> [1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

1.9845 true

[0,3] -> [3,0];
[3,1] -> [1,3];
[3,1,3] -> [3,1,3];
[1] -> [1];
[2,0,3] -> [3,0,2];
[0,2] -> [2,0];
[3,1,0] -> [0,1,3];
[2,0,0] -> [0,0,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0547 true

[1,0,1] -> [1,0,1];
[2,0] -> [0,2];
[2,2] -> [2,2];
[3,1,2] -> [2,1,3];
[0,0,2] -> [2,0,0];
[2] -> [2];
[1,3] -> [3,1];
[0,3,2] -> [2,3,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.9369 true

[1] -> [1];
[3,1] -> [1,3];
[0,2] -> [2,0];
[2,3] -> [3,2];
[0,3,1] -> [1,3,0];
[2,2] -> [2,2];
[3] -> [3];
[1,2,1] -> [1,2,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0533 true

[1,0] -> [0,1];
[2] -> [2];
[1,0,2] -> [2,0,1];
[2,1] -> [1,2];
[2,3,0] -> [0,3,2];
[0] -> [0];
[3,2,1] -> [1,2,3];
[1,1,3] -> [3,1,1];
[0,0,0] -> [0,0,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0220 true

[3,1] -> [1,3];
[2,3] -> [3,2];
[0,1,1] -> [1,1,0];
[0,2,3] -> [3,2,0];
[2,2,1] -> [1,2,2];
[1] -> [1];
[0,0,2] -> [2,0,0];
[3,0,0] -> [0,0,3];
[1,0] -> [0,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0379 true

[0,3,0] -> [0,3,0];
[0] -> [0];
[2,2] -> [2,2];
[3,3] -> [3,3];
[1,1] -> [1,1];
[3] -> [3];
[2,0,2] -> [2,0,2];
[3,3,3] -> [3,3,3];
[2,3] -> [3,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

1.0287 true

[0] -> [0];
[3] -> [3];
[2,0] -> [0,2];
[1,1,3] -> [3,1,1];
[3,3,0] -> [0,3,3];
[0,3,0] -> [0,3,0];
[1,1] -> [1,1];
[2] -> [2];
[3,1] -> [1,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0443 true

[1,0,0] -> [0,0,1];
[0] -> [0];
[2,0] -> [0,2];
[3,1] -> [1,3];
[1,3] -> [3,1];
[2,0,3] -> [3,0,2];
[0,0,1] -> [1,0,0];
[1,1] -> [1,1];
[2] -> [2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1101 true

[0,2,3] -> [3,2,0];
[3,0,0] -> [0,0,3];
[3] -> [3];
[0,0,2] -> [2,0,0];
[0] -> [0];
[1] -> [1];
[3,1] -> [1,3];
[2,0,2] -> [2,0,2];
[0,0] -> [0,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.4032 true

[2] -> [2];
[2,3] -> [3,2];
[1] -> [1];
[2,0] -> [0,2];
[0,2] -> [2,0];
[3,1,3] -> [3,1,3];
[1,2,0] -> [0,2,1];
[1,1,0] -> [0,1,1];
[0,3] -> [3,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0862 true

[3,1,3] -> [3,1,3];
[1,3,0] -> [0,3,1];
[2,0,2] -> [2,0,2];
[3,3,1] -> [1,3,3];
[0,1] -> [1,0];
[2,3] -> [3,2];
[3,2,0] -> [0,2,3];
[0,0] -> [0,0];
[2] -> [2];
[] -> [];

=================================
None
[0] -> [0];
[2,2] -> [2,2];
[2,1,2] -> [2,1,2];
[3] -> [3];
[3,3,2] -> [2,3,3];
[1,1] -> [1,1];
[3,1] -> [1,3];
[1,2,3] -> [3,2,1];
[0,1,1] -> [1,1,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

1.8004 true

[2] -> [2];
[3,1] -> [1,3];
[3,1,0] -> [0,1,3];
[0,0] -> [0,0];
[0,0,2] -> [2,0,0];
[3,2] -> [2,3];
[1] -> [1];
[2,3,0] -> [0,3,2];
[3,2,1] -> [1,2,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0560 true

[3,0] -> [0,3];
[1,1,0] -> [0,1,1];
[3,1] -> [1,3];
[0,0,1] -> [1,0,0];
[2,2,0] -> [0,2,2];
[2,2] -> [2,2];
[3,3,3] -> [3,3,3];
[3,0,0] -> [0,0,3];
[0,2] -> [2,0];
[0] -> [0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0372 true

[2,3] -> [3,2];
[2,1] -> [1,2];
[3,2] -> [2,3];
[0] -> [0];
[0,1] -> [1,0];
[3,1,1] -> [1,1,3];
[2,0] -> [0,2];
[1] -> [1];
[0,3] -> [3,0];
[3,1,2] -> [2,1,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0581 true

[0,2] -> [2,0];
[3,3] -> [3,3];
[0,1] -> [1,0];
[1,3,3] -> [3,3,1];
[3] -> [3];
[3,0] -> [0,3];
[2] -> [2];
[3,1] -> [1,3];
[1,1,1] -> [1,1,1];
[1,0,2] -> [2,0,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0244 true

[2] -> [2];
[3] -> [3];
[0] -> [0];
[1] -> [1];
[3,2,0] -> [0,2,3];
[3,3] -> [3,3];
[0,2,3] -> [3,2,0];
[0,3] -> [3,0];
[0,0,2] -> [2,0,0];
[1,1,0] -> [0,1,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.6268 true

[1,2] -> [2,1];
[2,3] -> [3,2];
[0] -> [0];
[3,1] -> [1,3];
[3,1,3] -> [3,1,3];
[0,2] -> [2,0];
[2] -> [2];
[1,3] -> [3,1];
[1,1] -> [1,1];
[1] -> [1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0244 true

[0] -> [0];
[1] -> [1];
[0,0] -> [0,0];
[0,0,0] -> [0,0,0];
[1,3] -> [3,1];
[3,0,0] -> [0,0,3];
[3] -> [3];
[1,1] -> [1,1];
[1,3,1] -> [1,3,1];
[3,0] -> [0,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0486 true

[1] -> [1];
[1,1,1] -> [1,1,1];
[2] -> [2];
[0,2] -> [2,0];
[0] -> [0];
[0,3,1] -> [1,3,0];
[2,3] -> [3,2];
[1,0] -> [0,1];
[0,3] -> [3,0];
[3,0] -> [0,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0364 true

[3,3,3] -> [3,3,3];
[3,0,2] -> [2,0,3];
[2] -> [2];
[3,1] -> [1,3];
[0] -> [0];
[0,3] -> [3,0];
[1] -> [1];
[0,0] -> [0,0];
[2,3] -> [3,2];
[2,2,0] -> [0,2,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

91.4221 true

[3,2] -> [2,3];
[3,2,3] -> [3,2,3];
[0,0,1] -> [1,0,0];
[2] -> [2];
[2,3] -> [3,2];
[0] -> [0];
[2,3,3] -> [3,3,2];
[1] -> [1];
[1,1,3] -> [3,1,1];
[3,0] -> [0,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0267 true

[2,3] -> [3,2];
[1,1] -> [1,1];
[2,2] -> [2,2];
[1] -> [1];
[0,1,0] -> [0,1,0];
[2,1] -> [1,2];
[3,0,3] -> [3,0,3];
[0,2,1] -> [1,2,0];
[1,1,2] -> [2,1,1];
[3,0] -> [0,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0566 true

