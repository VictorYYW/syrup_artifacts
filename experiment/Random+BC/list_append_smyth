list_append
([2,0,3],[1,1]) -> [2,0,3,1,1];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.0202240000001 true true

([3,1],[0]) -> [3,1,0];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons (#2.1 y1, Cons (1, ys)) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.01133 false true

([3],[2,1]) -> [3,2,1];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons (#2.1 y1, ys) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons
            ( 2
            , Cons (1, list_append (#2.2 y1) xs)
            )
        ) in list_append) : NatList -> NatList -> NatList)
0.0082010000001 false false

([3,3],[3,1,3]) -> [3,3,3,1,3];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons (#2.1 y1, Cons (#2.1 y1, ys)) in list_append) : NatList -> NatList -> NatList)
0.022279 false false

([2],[1]) -> [2,1];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons (#2.1 y1, ys) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (1, list_append (#2.2 y1) xs)
        ) in list_append) : NatList -> NatList -> NatList)
0.007249 false false

([3,0,3],[2]) -> [3,0,3,2];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.0171339999999 true true

([3,2,3],[3]) -> [3,2,3,3];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) xs
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) xs
        ) in list_append) : NatList -> NatList -> NatList)
0.0186799999999 false false

([2],[2,2,1]) -> [2,2,2,1];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      [2, #2.1 y1, #2.1 y1, 1] in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( 2
        , Cons
            ( #2.1 y1
            , Cons
                ( #2.1 y1
                , Cons (1, list_append (#2.2 y1) xs)
                )
            )
        ) in list_append) : NatList -> NatList -> NatList)
0.00767300000007 false false

([0,1],[3,1,2]) -> [0,1,3,1,2];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons (0, Cons (1, ys)) in list_append) : NatList -> NatList -> NatList)
0.0131759999999 false false

([2,1],[2,2,0]) -> [2,1,2,2,0];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons (#2.1 y1, Cons (1, ys)) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.020667 false true

([1],[3,2]) -> [1,3,2];
([2,1],[0]) -> [2,1,0];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.008644 true true

([1,1,0],[1,3,2]) -> [1,1,0,1,3,2];
([1],[3,3,3]) -> [1,3,3,3];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.010419 true true

([0,0,0],[3,3]) -> [0,0,0,3,3];
([3],[0,3]) -> [3,0,3];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00853000000006 true true

([3],[1]) -> [3,1];
([0],[0,0]) -> [0,0,0];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons (#2.1 y1, ys) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00709899999993 false true

([0,0],[2,3]) -> [0,0,2,3];
([2],[0]) -> [2,0];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.008196 true true

([3],[1,1]) -> [3,1,1];
([0,3],[3]) -> [0,3,3];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00807099999997 true true

([3,1],[0,0,0]) -> [3,1,0,0,0];
([3,1,0],[0]) -> [3,1,0,0];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.0195510000001 true true

([1,0],[0,1]) -> [1,0,0,1];
([2],[1,2,2]) -> [2,1,2,2];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00827099999992 true true

([1,0],[0]) -> [1,0,0];
([1],[2,0,0]) -> [1,2,0,0];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00864499999989 true true

([1,3,0],[1,2]) -> [1,3,0,1,2];
([0,2,3],[2,3,0]) -> [0,2,3,2,3,0];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00883900000008 true true

([2,3,0],[1]) -> [2,3,0,1];
([0,3,1],[3,3,0]) -> [0,3,1,3,3,0];
([3,1],[3,1,1]) -> [3,1,3,1,1];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00930500000004 true true

([2,2,1],[3,0,1]) -> [2,2,1,3,0,1];
([1],[3,3]) -> [1,3,3];
([3,2],[3,0]) -> [3,2,3,0];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.009951 true true

([2],[1,1,1]) -> [2,1,1,1];
([0],[2]) -> [0,2];
([1,1,0],[1,2]) -> [1,1,0,1,2];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00844099999995 true true

([0,0],[2,2,3]) -> [0,0,2,2,3];
([1,2],[0]) -> [1,2,0];
([1],[0]) -> [1,0];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00766799999997 true true

([2,2,3],[0,0]) -> [2,2,3,0,0];
([0,2],[0,3]) -> [0,2,0,3];
([2,3],[0,0]) -> [2,3,0,0];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00900799999999 true true

([0,2],[1,2,2]) -> [0,2,1,2,2];
([3],[2,2]) -> [3,2,2];
([3],[1,3,0]) -> [3,1,3,0];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.0081009999999 true true

([3,2],[3]) -> [3,2,3];
([0,2,0],[0]) -> [0,2,0,0];
([1,2,3],[1,3]) -> [1,2,3,1,3];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.010284 true true

([0,2,0],[1,0,1]) -> [0,2,0,1,0,1];
([3,1,3],[1,1]) -> [3,1,3,1,1];
([2,3,2],[3]) -> [2,3,2,3];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.0173239999999 true true

([0],[3,3,1]) -> [0,3,3,1];
([1],[3,3,0]) -> [1,3,3,0];
([2],[3,1]) -> [2,3,1];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons (#2.1 y1, ys) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00878400000011 false true

([1,3,3],[0,0]) -> [1,3,3,0,0];
([0,2],[2]) -> [0,2,2];
([3,1,2],[0]) -> [3,1,2,0];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00921999999991 true true

([3,1,2],[2]) -> [3,1,2,2];
([3,0,1],[3,0]) -> [3,0,1,3,0];
([3],[2,2,2]) -> [3,2,2,2];
([3,1],[3,1,2]) -> [3,1,3,1,2];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.010497 true true

([3,1],[2,3]) -> [3,1,2,3];
([0],[0]) -> [0,0];
([1],[3,3]) -> [1,3,3];
([2,2,2],[1]) -> [2,2,2,1];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00808499999994 true true

([1,2,1],[0,1]) -> [1,2,1,0,1];
([0],[2,3]) -> [0,2,3];
([0,3],[3]) -> [0,3,3];
([0,2,2],[2]) -> [0,2,2,2];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00951200000009 true true

([1,3],[2,1]) -> [1,3,2,1];
([2,3],[0]) -> [2,3,0];
([0],[0,3,3]) -> [0,0,3,3];
([2,2],[0,0,3]) -> [2,2,0,0,3];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00805799999989 true true

([2],[1,3,2]) -> [2,1,3,2];
([2],[1,0,2]) -> [2,1,0,2];
([1,2],[3,2,1]) -> [1,2,3,2,1];
([0,3,1],[0,1,3]) -> [0,3,1,0,1,3];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00908699999991 true true

([2,3,0],[1,3,0]) -> [2,3,0,1,3,0];
([2,2,0],[2]) -> [2,2,0,2];
([2,3],[2]) -> [2,3,2];
([0,2],[2,0,1]) -> [0,2,2,0,1];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00994900000001 true true

([2,0],[1,3,2]) -> [2,0,1,3,2];
([3,2],[3,0,0]) -> [3,2,3,0,0];
([1,1],[2]) -> [1,1,2];
([1],[0]) -> [1,0];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00922700000001 true true

([1,2],[3,0]) -> [1,2,3,0];
([2,0,2],[0]) -> [2,0,2,0];
([0],[0]) -> [0,0];
([1],[2,0,3]) -> [1,2,0,3];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00784500000009 true true

([3],[1,0]) -> [3,1,0];
([3,2,1],[1]) -> [3,2,1,1];
([0],[3]) -> [0,3];
([2,0,0],[1,2,1]) -> [2,0,0,1,2,1];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00793799999997 true true

([2,0],[2,2,1]) -> [2,0,2,2,1];
([3,3],[1,3]) -> [3,3,1,3];
([1,2,2],[1,0,3]) -> [1,2,2,1,0,3];
([3,1],[0,3,3]) -> [3,1,0,3,3];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00957500000004 true true

([0,0,0],[3,0]) -> [0,0,0,3,0];
([1],[1]) -> [1,1];
([3,2,3],[0,1]) -> [3,2,3,0,1];
([2,0],[3,1,3]) -> [2,0,3,1,3];
([3],[2,3,1]) -> [3,2,3,1];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00864000000001 true true

([0],[2]) -> [0,2];
([0,0,1],[1,3,2]) -> [0,0,1,1,3,2];
([3,2,0],[3]) -> [3,2,0,3];
([1],[2,0]) -> [1,2,0];
([3,0,3],[0,1,1]) -> [3,0,3,0,1,1];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00852499999996 true true

([0,3,1],[0,2]) -> [0,3,1,0,2];
([0],[0,2,3]) -> [0,0,2,3];
([0],[3,0]) -> [0,3,0];
([3,0],[0]) -> [3,0,0];
([0,0],[1]) -> [0,0,1];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00856300000009 true true

([0],[3,0]) -> [0,3,0];
([0],[0,0,0]) -> [0,0,0,0];
([0,2],[0]) -> [0,2,0];
([2,2,3],[0,3,2]) -> [2,2,3,0,3,2];
([0,3],[3,0]) -> [0,3,3,0];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00854600000002 true true

([2,2],[1]) -> [2,2,1];
([1,2,0],[3,1,0]) -> [1,2,0,3,1,0];
([1,1],[3]) -> [1,1,3];
([2,1,1],[3]) -> [2,1,1,3];
([3,2,2],[0,2,1]) -> [3,2,2,0,2,1];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.0121670000001 true true

([1,2,2],[0,2]) -> [1,2,2,0,2];
([2,3,0],[3,0,1]) -> [2,3,0,3,0,1];
([3,3,1],[2]) -> [3,3,1,2];
([1],[0]) -> [1,0];
([3,3,0],[3,2,1]) -> [3,3,0,3,2,1];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.0105140000001 true true

([0,3],[0]) -> [0,3,0];
([0],[1,1]) -> [0,1,1];
([3,0],[3,3]) -> [3,0,3,3];
([2,3],[1,3,1]) -> [2,3,1,3,1];
([3],[2,0]) -> [3,2,0];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00823300000002 true true

([0],[0,0]) -> [0,0,0];
([3,2,1],[0,0]) -> [3,2,1,0,0];
([3],[2,3,2]) -> [3,2,3,2];
([1,2,0],[0,0]) -> [1,2,0,0,0];
([3,1,2],[2]) -> [3,1,2,2];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00860800000009 true true

([0,0,1],[0,1,3]) -> [0,0,1,0,1,3];
([1,1],[2]) -> [1,1,2];
([3,1,2],[2,3]) -> [3,1,2,2,3];
([2,1,3],[1]) -> [2,1,3,1];
([1,1],[0,1]) -> [1,1,0,1];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00871600000005 true true

([3],[2,2,2]) -> [3,2,2,2];
([0],[0]) -> [0,0];
([1,2],[2,3,1]) -> [1,2,2,3,1];
([0],[1]) -> [0,1];
([0],[3]) -> [0,3];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00772000000006 true true

([0,1],[0]) -> [0,1,0];
([3,0,0],[0]) -> [3,0,0,0];
([3,2,3],[0]) -> [3,2,3,0];
([0],[3]) -> [0,3];
([0,0],[2]) -> [0,0,2];
([1],[1,0]) -> [1,1,0];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00858599999992 true true

([1,3,0],[3,0,2]) -> [1,3,0,3,0,2];
([2,0,0],[3]) -> [2,0,0,3];
([3,2],[3,3]) -> [3,2,3,3];
([2,1],[2,3,0]) -> [2,1,2,3,0];
([1,3,0],[3,2]) -> [1,3,0,3,2];
([3,1,2],[1]) -> [3,1,2,1];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.011164 true true

([0],[3]) -> [0,3];
([1],[2,0]) -> [1,2,0];
([1,2],[3,2,0]) -> [1,2,3,2,0];
([0],[0,3]) -> [0,0,3];
([2],[1,3]) -> [2,1,3];
([1],[3,2]) -> [1,3,2];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00825800000007 true true

([3,3],[2,2,1]) -> [3,3,2,2,1];
([0,1],[0]) -> [0,1,0];
([0,1],[2,3,3]) -> [0,1,2,3,3];
([2],[1,0]) -> [2,1,0];
([1,3,2],[3]) -> [1,3,2,3];
([1,0,0],[2,0]) -> [1,0,0,2,0];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00862499999994 true true

([0,3],[1]) -> [0,3,1];
([3,3],[0,0,0]) -> [3,3,0,0,0];
([3,3,3],[0,0,2]) -> [3,3,3,0,0,2];
([2,3,1],[1]) -> [2,3,1,1];
([0,1],[3]) -> [0,1,3];
([0],[0]) -> [0,0];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00892399999998 true true

([2,3,3],[0]) -> [2,3,3,0];
([1,1,1],[3,2,3]) -> [1,1,1,3,2,3];
([2],[0,0]) -> [2,0,0];
([2,1],[1,2]) -> [2,1,1,2];
([0],[0,1,1]) -> [0,0,1,1];
([3,2],[1]) -> [3,2,1];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00989000000004 true true

([1,0,1],[3,0]) -> [1,0,1,3,0];
([1],[2]) -> [1,2];
([0],[3,0,1]) -> [0,3,0,1];
([1,3,3],[2]) -> [1,3,3,2];
([0],[3,2]) -> [0,3,2];
([1],[3]) -> [1,3];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.014042 true true

([3,3,0],[0,2,0]) -> [3,3,0,0,2,0];
([0,3,0],[2,0,0]) -> [0,3,0,2,0,0];
([3],[1]) -> [3,1];
([0],[0]) -> [0,0];
([3,1,1],[3]) -> [3,1,1,3];
([0,3,3],[0,3,1]) -> [0,3,3,0,3,1];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00951400000008 true true

([1,3],[2,2]) -> [1,3,2,2];
([0,0],[2,3]) -> [0,0,2,3];
([1],[3,3]) -> [1,3,3];
([0,3],[3,2,2]) -> [0,3,3,2,2];
([2],[3]) -> [2,3];
([0],[0]) -> [0,0];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00863600000002 true true

([0],[0,1,0]) -> [0,0,1,0];
([3,1,0],[1]) -> [3,1,0,1];
([0,3],[3,2,0]) -> [0,3,3,2,0];
([0],[2]) -> [0,2];
([2,2,0],[3,2]) -> [2,2,0,3,2];
([3,2,1],[3,0]) -> [3,2,1,3,0];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00849399999993 true true

([3,2],[0,2,1]) -> [3,2,0,2,1];
([1],[0]) -> [1,0];
([0,3,2],[0,0,3]) -> [0,3,2,0,0,3];
([2,3,1],[3]) -> [2,3,1,3];
([0],[2,1,1]) -> [0,2,1,1];
([0,0],[1,1,0]) -> [0,0,1,1,0];
([2,0],[1,1,2]) -> [2,0,1,1,2];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00902500000007 true true

([2,2,2],[1,2]) -> [2,2,2,1,2];
([2,0,1],[3,3]) -> [2,0,1,3,3];
([3,1,0],[3,2,2]) -> [3,1,0,3,2,2];
([1],[1,3]) -> [1,1,3];
([0],[3]) -> [0,3];
([0,1],[3,0]) -> [0,1,3,0];
([0,3],[1,0]) -> [0,3,1,0];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00920399999995 true true

([3,0],[3,3,0]) -> [3,0,3,3,0];
([2,1],[2,1,0]) -> [2,1,2,1,0];
([3,2],[3]) -> [3,2,3];
([1,0,3],[1,2]) -> [1,0,3,1,2];
([1,1,0],[1,2]) -> [1,1,0,1,2];
([0,3],[1,0,2]) -> [0,3,1,0,2];
([0,0,0],[1,0]) -> [0,0,0,1,0];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00926600000003 true true

([1,3],[1]) -> [1,3,1];
([0,1],[1,0,3]) -> [0,1,1,0,3];
([1],[1]) -> [1,1];
([3,3,0],[2]) -> [3,3,0,2];
([3],[2]) -> [3,2];
([3,1],[1]) -> [3,1,1];
([3,0],[1,2,3]) -> [3,0,1,2,3];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00925000000007 true true

([3],[2]) -> [3,2];
([3,2,3],[0,0,2]) -> [3,2,3,0,0,2];
([2],[2,1,1]) -> [2,2,1,1];
([1,0],[2,1]) -> [1,0,2,1];
([3],[2,0,3]) -> [3,2,0,3];
([2],[3,3]) -> [2,3,3];
([0,0,2],[2,2]) -> [0,0,2,2,2];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00894399999993 true true

([1,1],[0]) -> [1,1,0];
([1],[2,3,0]) -> [1,2,3,0];
([2,2],[1,3]) -> [2,2,1,3];
([2,3,2],[0,3]) -> [2,3,2,0,3];
([0],[0,3,2]) -> [0,0,3,2];
([0,1,0],[2,3]) -> [0,1,0,2,3];
([0,3,2],[1,2,2]) -> [0,3,2,1,2,2];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00931300000002 true true

([0,3,0],[3,3]) -> [0,3,0,3,3];
([2],[2,1]) -> [2,2,1];
([1,3,0],[1]) -> [1,3,0,1];
([1,0,2],[3]) -> [1,0,2,3];
([2,3,3],[0]) -> [2,3,3,0];
([3],[1,0,3]) -> [3,1,0,3];
([0,3],[2,1]) -> [0,3,2,1];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00920199999996 true true

([1],[3,3]) -> [1,3,3];
([1],[1,2]) -> [1,1,2];
([2,2,2],[0,3]) -> [2,2,2,0,3];
([1],[2,3]) -> [1,2,3];
([0,1],[2]) -> [0,1,2];
([1,3],[2,2]) -> [1,3,2,2];
([3,0],[2,2]) -> [3,0,2,2];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.0165 true true

([1,0],[0,0]) -> [1,0,0,0];
([0],[2,3,3]) -> [0,2,3,3];
([2,2,2],[1]) -> [2,2,2,1];
([1,1,2],[3]) -> [1,1,2,3];
([2,3,3],[3,3]) -> [2,3,3,3,3];
([3,1,2],[1,0]) -> [3,1,2,1,0];
([1],[2]) -> [1,2];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00924299999997 true true

([0,1,0],[0]) -> [0,1,0,0];
([3,1],[3,2,2]) -> [3,1,3,2,2];
([1],[0,0]) -> [1,0,0];
([1],[0,0,0]) -> [1,0,0,0];
([1,2,3],[1]) -> [1,2,3,1];
([1,2,0],[1,1,2]) -> [1,2,0,1,1,2];
([3,2],[1,3]) -> [3,2,1,3];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00948999999991 true true

([1,2,2],[1,3,3]) -> [1,2,2,1,3,3];
([1,0,3],[2,2,3]) -> [1,0,3,2,2,3];
([0,3,0],[3,2,2]) -> [0,3,0,3,2,2];
([3,0,1],[1,2,3]) -> [3,0,1,1,2,3];
([3,1],[2,2]) -> [3,1,2,2];
([2],[2,0,0]) -> [2,2,0,0];
([2,2],[3]) -> [2,2,3];
([1,1,1],[0,1,2]) -> [1,1,1,0,1,2];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.0105229999999 true true

([1,0],[2,0]) -> [1,0,2,0];
([1],[0,1,3]) -> [1,0,1,3];
([3,1],[1,0,0]) -> [3,1,1,0,0];
([3],[0,0,2]) -> [3,0,0,2];
([3],[3]) -> [3,3];
([0,1,2],[1,2,2]) -> [0,1,2,1,2,2];
([2,2,1],[2,0,2]) -> [2,2,1,2,0,2];
([0],[2,1]) -> [0,2,1];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00930199999993 true true

([1],[1,2,2]) -> [1,1,2,2];
([0],[2,0,2]) -> [0,2,0,2];
([2],[1,0,3]) -> [2,1,0,3];
([0,0,3],[0,0]) -> [0,0,3,0,0];
([1,3,0],[2,0,2]) -> [1,3,0,2,0,2];
([3,1],[3,2,1]) -> [3,1,3,2,1];
([1,0,2],[2,2]) -> [1,0,2,2,2];
([3,2,2],[1]) -> [3,2,2,1];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00965500000007 true true

([0,2,1],[3,1]) -> [0,2,1,3,1];
([0,0],[2]) -> [0,0,2];
([1,2],[3]) -> [1,2,3];
([1,2,3],[1,2]) -> [1,2,3,1,2];
([0],[0,0,3]) -> [0,0,0,3];
([1,2,2],[2]) -> [1,2,2,2];
([1],[3]) -> [1,3];
([2],[0,2]) -> [2,0,2];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00920700000006 true true

([3,3],[3]) -> [3,3,3];
([3,0,2],[3,0,2]) -> [3,0,2,3,0,2];
([0],[2]) -> [0,2];
([0],[1]) -> [0,1];
([3,2],[1,2]) -> [3,2,1,2];
([0,2,0],[0,2,2]) -> [0,2,0,0,2,2];
([3],[3]) -> [3,3];
([0],[3,0,2]) -> [0,3,0,2];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00985799999989 true true

([2,3],[3,0]) -> [2,3,3,0];
([3],[0]) -> [3,0];
([1],[2,0]) -> [1,2,0];
([3,3],[0,2]) -> [3,3,0,2];
([2],[2]) -> [2,2];
([3,2,0],[3]) -> [3,2,0,3];
([2,2,0],[1,1,3]) -> [2,2,0,1,1,3];
([0],[3]) -> [0,3];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00983599999995 true true

([1],[2,1]) -> [1,2,1];
([1],[1]) -> [1,1];
([2,0],[1,0,0]) -> [2,0,1,0,0];
([2],[3,0]) -> [2,3,0];
([0],[1]) -> [0,1];
([1,1],[1]) -> [1,1,1];
([2,2,3],[0,1,1]) -> [2,2,3,0,1,1];
([3,2],[0,0]) -> [3,2,0,0];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00956999999994 true true

([0],[1,2]) -> [0,1,2];
([3],[3,3,2]) -> [3,3,3,2];
([1,2,3],[3]) -> [1,2,3,3];
([2],[1,1,3]) -> [2,1,1,3];
([0,0,2],[3]) -> [0,0,2,3];
([3],[0]) -> [3,0];
([2],[1,2]) -> [2,1,2];
([3,2],[1,1]) -> [3,2,1,1];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00966300000005 true true

([1],[2,2]) -> [1,2,2];
([0,0],[1]) -> [0,0,1];
([2,0],[2]) -> [2,0,2];
([3,3,3],[2,1,0]) -> [3,3,3,2,1,0];
([0,2,3],[3,0,2]) -> [0,2,3,3,0,2];
([0,3],[3]) -> [0,3,3];
([3,3,0],[2,2,1]) -> [3,3,0,2,2,1];
([2,2,0],[3]) -> [2,2,0,3];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.017879 true true

([0],[2,2,3]) -> [0,2,2,3];
([2,2],[1]) -> [2,2,1];
([0],[2,3]) -> [0,2,3];
([0],[2]) -> [0,2];
([3,3,1],[1]) -> [3,3,1,1];
([2],[3,3]) -> [2,3,3];
([2,2,1],[1]) -> [2,2,1,1];
([1,2,1],[0,3]) -> [1,2,1,0,3];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.020068 true true

([1,1,0],[2,2]) -> [1,1,0,2,2];
([3],[0,3]) -> [3,0,3];
([3],[0,2]) -> [3,0,2];
([3,1,1],[3,3]) -> [3,1,1,3,3];
([0],[3,2,3]) -> [0,3,2,3];
([2,3,0],[0,1,1]) -> [2,3,0,0,1,1];
([2,3,3],[0,3,1]) -> [2,3,3,0,3,1];
([0],[1,1]) -> [0,1,1];
([1],[3,0]) -> [1,3,0];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.0103120000001 true true

([2,1,2],[0]) -> [2,1,2,0];
([1],[0]) -> [1,0];
([3,2,0],[1]) -> [3,2,0,1];
([3,1],[3,0]) -> [3,1,3,0];
([2],[2,2]) -> [2,2,2];
([0],[1,0]) -> [0,1,0];
([1,1,3],[2,3,3]) -> [1,1,3,2,3,3];
([1,0],[3,2,3]) -> [1,0,3,2,3];
([0,1,3],[3]) -> [0,1,3,3];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.0188370000001 true true

([0],[2,1,3]) -> [0,2,1,3];
([1],[1,1]) -> [1,1,1];
([3,0],[3,3]) -> [3,0,3,3];
([1],[1]) -> [1,1];
([3,3],[3,0]) -> [3,3,3,0];
([0,1,3],[2]) -> [0,1,3,2];
([1,2],[0,2]) -> [1,2,0,2];
([0],[0,0]) -> [0,0,0];
([1,1,3],[1,2,2]) -> [1,1,3,1,2,2];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.010438 true true

([2,2,0],[2]) -> [2,2,0,2];
([1,1,2],[3,0]) -> [1,1,2,3,0];
([1,3,0],[2,2]) -> [1,3,0,2,2];
([3,0],[1]) -> [3,0,1];
([3,3],[0,3,0]) -> [3,3,0,3,0];
([0,0],[1,1]) -> [0,0,1,1];
([0,1,0],[2]) -> [0,1,0,2];
([0,2,1],[2]) -> [0,2,1,2];
([1,2],[0,0,1]) -> [1,2,0,0,1];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.010096 true true

([2],[0,3,2]) -> [2,0,3,2];
([2],[2]) -> [2,2];
([3,1],[0]) -> [3,1,0];
([3],[1,0]) -> [3,1,0];
([0,3],[1]) -> [0,3,1];
([2],[1,2]) -> [2,1,2];
([3],[3,2]) -> [3,3,2];
([1,3],[3,3]) -> [1,3,3,3];
([1,0],[2,0,1]) -> [1,0,2,0,1];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00930100000005 true true

([2,0,3],[3]) -> [2,0,3,3];
([1,3],[3,1,3]) -> [1,3,3,1,3];
([2],[2,0]) -> [2,2,0];
([1,1,1],[2,1]) -> [1,1,1,2,1];
([1,2],[1,0,3]) -> [1,2,1,0,3];
([3,0,0],[0]) -> [3,0,0,0];
([2,2],[0,3,3]) -> [2,2,0,3,3];
([3,2],[1,1]) -> [3,2,1,1];
([1,1],[0,2]) -> [1,1,0,2];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.012528 true true

([0,1],[2,3]) -> [0,1,2,3];
([2,1,3],[3,2]) -> [2,1,3,3,2];
([1,0,3],[1,2,3]) -> [1,0,3,1,2,3];
([0,1],[0,0,0]) -> [0,1,0,0,0];
([2,3],[0,1]) -> [2,3,0,1];
([0,3],[2,3,2]) -> [0,3,2,3,2];
([1,1],[0]) -> [1,1,0];
([3,2],[1,2]) -> [3,2,1,2];
([2,1],[2,3]) -> [2,1,2,3];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00990299999989 true true

([1],[1]) -> [1,1];
([1,1],[3,0]) -> [1,1,3,0];
([1,2],[0]) -> [1,2,0];
([3,1,1],[1,1,0]) -> [3,1,1,1,1,0];
([1],[0,2,1]) -> [1,0,2,1];
([2,2,2],[2,0,1]) -> [2,2,2,2,0,1];
([2,3,2],[3,1]) -> [2,3,2,3,1];
([3,3],[1,3]) -> [3,3,1,3];
([1,1,2],[2,0]) -> [1,1,2,2,0];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.0126279999999 true true

([1],[2,3,2]) -> [1,2,3,2];
([3],[3]) -> [3,3];
([0,3],[2,2,0]) -> [0,3,2,2,0];
([0,3,3],[0,3,3]) -> [0,3,3,0,3,3];
([0,0],[0,1]) -> [0,0,0,1];
([1],[3,2]) -> [1,3,2];
([1,3,0],[0]) -> [1,3,0,0];
([2,2],[1,2]) -> [2,2,1,2];
([3],[0,0]) -> [3,0,0];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00971000000004 true true

([0,1],[3,1,2]) -> [0,1,3,1,2];
([1,2,3],[2,0,1]) -> [1,2,3,2,0,1];
([3,2],[0]) -> [3,2,0];
([2,2],[0,2,0]) -> [2,2,0,2,0];
([1],[0,0,3]) -> [1,0,0,3];
([1],[2]) -> [1,2];
([3,3],[3]) -> [3,3,3];
([2,2],[2,3]) -> [2,2,2,3];
([3,3],[1]) -> [3,3,1];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00955700000009 true true

([3,2],[1]) -> [3,2,1];
([1],[1,1]) -> [1,1,1];
([0,3,3],[0,3]) -> [0,3,3,0,3];
([1,1],[2]) -> [1,1,2];
([2,1,2],[2,2]) -> [2,1,2,2,2];
([3,0,0],[1,0,2]) -> [3,0,0,1,0,2];
([2,0,3],[1,0,1]) -> [2,0,3,1,0,1];
([2,3,2],[0,1,3]) -> [2,3,2,0,1,3];
([3,0],[0,2,3]) -> [3,0,0,2,3];
([0,3,2],[2]) -> [0,3,2,2];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.0111199999999 true true

([3,1,0],[1,3]) -> [3,1,0,1,3];
([3,3,0],[1,1]) -> [3,3,0,1,1];
([1,0,0],[1]) -> [1,0,0,1];
([2],[3,2,1]) -> [2,3,2,1];
([0,3,1],[0,2,0]) -> [0,3,1,0,2,0];
([2],[3,3]) -> [2,3,3];
([2],[0,1,0]) -> [2,0,1,0];
([3],[2,3,2]) -> [3,2,3,2];
([1,3,1],[0,2,0]) -> [1,3,1,0,2,0];
([3,0,1],[0,1]) -> [3,0,1,0,1];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.0167859999999 true true

([2,0,3],[3,0]) -> [2,0,3,3,0];
([0],[3]) -> [0,3];
([3,0],[3]) -> [3,0,3];
([2],[2,1]) -> [2,2,1];
([2,0,1],[0,0]) -> [2,0,1,0,0];
([1,0,3],[1,3]) -> [1,0,3,1,3];
([0,0,0],[2]) -> [0,0,0,2];
([2],[1,3,0]) -> [2,1,3,0];
([2],[0,2]) -> [2,0,2];
([1],[3]) -> [1,3];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.00996200000009 true true

([2,2],[1]) -> [2,2,1];
([3,3,3],[0,0,1]) -> [3,3,3,0,0,1];
([1,3],[0,3,3]) -> [1,3,0,3,3];
([1,1],[2,3]) -> [1,1,2,3];
([1,3],[0,2]) -> [1,3,0,2];
([1,2],[1]) -> [1,2,1];
([0],[1,2]) -> [0,1,2];
([1,0],[3]) -> [1,0,3];
([0],[2,1,0]) -> [0,2,1,0];
([0,3],[1,3,2]) -> [0,3,1,3,2];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.0164400000001 true true

([3],[3,1,0]) -> [3,3,1,0];
([1,0],[1,3]) -> [1,0,1,3];
([0,3],[1]) -> [0,3,1];
([0],[1]) -> [0,1];
([2,1,2],[2,1,0]) -> [2,1,2,2,1,0];
([2,1,3],[2]) -> [2,1,3,2];
([2,0,0],[2]) -> [2,0,0,2];
([3,0,1],[1,1]) -> [3,0,1,1,1];
([0],[3]) -> [0,3];
([3,1,0],[2]) -> [3,1,0,2];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.010362 true true

([3,3,0],[2]) -> [3,3,0,2];
([3],[2,2,2]) -> [3,2,2,2];
([0,0],[3,3]) -> [0,0,3,3];
([1,0],[0,0]) -> [1,0,0,0];
([0],[3,1,0]) -> [0,3,1,0];
([0],[3]) -> [0,3];
([1,3],[1,1]) -> [1,3,1,1];
([1,1,1],[0,0]) -> [1,1,1,0,0];
([2,1],[3,2,0]) -> [2,1,3,2,0];
([0,0],[2,2,0]) -> [0,0,2,2,0];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.0163540000001 true true

([1,2,1],[0,1,0]) -> [1,2,1,0,1,0];
([3,2],[0,3,0]) -> [3,2,0,3,0];
([2],[0,2]) -> [2,0,2];
([0,1],[0,1,1]) -> [0,1,0,1,1];
([2,0],[0,0,0]) -> [2,0,0,0,0];
([3,3],[3]) -> [3,3,3];
([0,1,2],[1]) -> [0,1,2,1];
([2],[0,3,1]) -> [2,0,3,1];
([1,2,3],[0]) -> [1,2,3,0];
([3,2,3],[2,3,0]) -> [3,2,3,2,3,0];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.010661 true true

([1,1,0],[1,0]) -> [1,1,0,1,0];
([0,0,3],[3,3]) -> [0,0,3,3,3];
([1],[1,2]) -> [1,1,2];
([0],[2,2,2]) -> [0,2,2,2];
([2],[3]) -> [2,3];
([1,2],[3,3,2]) -> [1,2,3,3,2];
([3,1,0],[2,3]) -> [3,1,0,2,3];
([3,3,3],[3,2,0]) -> [3,3,3,3,2,0];
([1,3],[2]) -> [1,3,2];
([0,0,0],[1,3]) -> [0,0,0,1,3];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.010843 true true

([2,1],[1,0]) -> [2,1,1,0];
([1,3,0],[2,2]) -> [1,3,0,2,2];
([1],[0,0]) -> [1,0,0];
([1],[1]) -> [1,1];
([3,2],[2,0]) -> [3,2,2,0];
([1,2],[1]) -> [1,2,1];
([1,0,0],[2,3,1]) -> [1,0,0,2,3,1];
([0,1,2],[2,0,3]) -> [0,1,2,2,0,3];
([0],[3,1]) -> [0,3,1];
([0,0],[0,1,1]) -> [0,0,0,1,1];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.010113 true true

([2,0,2],[0,0,2]) -> [2,0,2,0,0,2];
([1,1,2],[2,2]) -> [1,1,2,2,2];
([0,0],[3,3]) -> [0,0,3,3];
([2,1],[1,0,2]) -> [2,1,1,0,2];
([0],[2,0]) -> [0,2,0];
([3],[3,2]) -> [3,3,2];
([2,3],[3,3,0]) -> [2,3,3,3,0];
([0],[2,2,1]) -> [0,2,2,1];
([2,2],[3,2]) -> [2,2,3,2];
([0],[0,0]) -> [0,0,0];
([], []) -> [];

=================================
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
(\list_append -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_append = \xs -> \ys -> case xs of
    Nil y1 -> 
      ys

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , list_append (#2.2 y1) ys
        ) in list_append) : NatList -> NatList -> NatList)
0.010104 true true

