list_nth
([0,0,1],1) -> 0;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0000 false

([0,1,2],1) -> 1;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> x . 1

0.0445 false

([3],3) -> 0;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0000 false

([1],3) -> 0;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0000 false

([3,2],3) -> 0;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([2],2) -> 0;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0000 false

([3,1],2) -> 0;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0000 false

([1,2,2],2) -> 2;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> x . 1

0.1184 false

([2,1],3) -> 0;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([2,0],0) -> 2;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Un_Cons (x . 0) . 0

0.0148 false

([3,2,2],1) -> 2;
([1,2],2) -> 0;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Un_S (Un_Cons (x . 0) . 0)

0.3130 false

([2,0,3],0) -> 2;
([2,3],2) -> 0;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> (match x . 0 with
                  | Nil _ -> x . 1
                  | Cons _ -> Un_Cons (x . 0) . 0)
      | S _ -> Un_S (Un_S (x . 1))

2.6622 false

([0,3,0],0) -> 0;
([1,1],2) -> 0;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([1,0,2],3) -> 0;
([3,3,1],0) -> 3;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Un_Cons (Un_Cons (x . 0) . 1) . 0

0.4513 false

([2,2],2) -> 0;
([0,0],1) -> 0;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([3,2],0) -> 3;
([0,0,1],1) -> 0;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Un_Cons (x . 0) . 0

0.0199 false

([0],3) -> 0;
([3,1],3) -> 0;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([3,3],3) -> 0;
([1,0],1) -> 0;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([0,0,2],2) -> 2;
([3,1],3) -> 0;
([], 0) -> 0;

=================================
None
([3,0,1],0) -> 3;
([0,2,0],1) -> 2;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> S (S (Un_Cons (Un_Cons (Un_Cons (x . 0) . 1) . 1) . 0))

34.7683 false

([0,2],1) -> 2;
([3,3,1],1) -> 3;
([0],1) -> 0;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Un_S (x . 1)
                     | Cons _ -> Un_Cons (Un_Cons (x . 0) . 1) . 0)

7.3343 false

([0,0],2) -> 0;
([0],3) -> 0;
([1,0,3],1) -> 0;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([1,2],2) -> 0;
([2],1) -> 0;
([3,1],0) -> 3;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> 0)

0.6747 false

([1],0) -> 1;
([2],1) -> 0;
([3,1],0) -> 3;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> (match x . 0 with
                  | Nil _ -> x . 1
                  | Cons _ -> Un_Cons (x . 0) . 0)
      | S _ -> Un_S (x . 1)

0.0207 false

([2,3,1],2) -> 1;
([3,0],1) -> 0;
([3,3],3) -> 0;
([], 0) -> 0;

=================================
None
([0,3],0) -> 0;
([3,0,0],0) -> 3;
([2,3],3) -> 0;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> 0)

4.2403 false

([2,3,1],2) -> 1;
([3,3,1],3) -> 0;
([0],0) -> 0;
([], 0) -> 0;

=================================
None
([1,3],2) -> 0;
([2,2,3],2) -> 3;
([1,0,3],1) -> 0;
([], 0) -> 0;

=================================
None
([1],3) -> 0;
([3,2],3) -> 0;
([0,2,1],2) -> 1;
([], 0) -> 0;

=================================
None
([0,2],0) -> 0;
([2,3],3) -> 0;
([3,0,3],1) -> 0;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([2,1,2],1) -> 1;
([0,2,1],3) -> 0;
([1,1],3) -> 0;
([2,0,3],2) -> 3;
([], 0) -> 0;

=================================
None
([2],2) -> 0;
([2],0) -> 2;
([3,3],0) -> 3;
([1,2,1],1) -> 2;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, 0))

115.2916 false

([1,0,0],1) -> 0;
([1,2,0],3) -> 0;
([2,2],2) -> 0;
([1],3) -> 0;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([0,2],0) -> 0;
([2,3],2) -> 0;
([0],2) -> 0;
([2,3,3],3) -> 0;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([1,2],3) -> 0;
([3,3,2],0) -> 3;
([0,2],1) -> 2;
([2],2) -> 0;
([], 0) -> 0;

=================================
None
([3,1,0],1) -> 1;
([1],2) -> 0;
([3,2,0],0) -> 3;
([2,1,0],2) -> 0;
([], 0) -> 0;

=================================
None
([1],3) -> 0;
([1,1,3],3) -> 0;
([3,3],3) -> 0;
([0,0,3],3) -> 0;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([3,0,1],1) -> 0;
([0],2) -> 0;
([2],0) -> 2;
([3,1,2],2) -> 2;
([], 0) -> 0;

=================================
None
([1,3,1],0) -> 1;
([1,2,2],3) -> 0;
([1,3,2],2) -> 2;
([2,3],1) -> 3;
([], 0) -> 0;

=================================
None
([3,0],1) -> 0;
([0,1,3],3) -> 0;
([3],1) -> 0;
([1,2,0],2) -> 0;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([3],2) -> 0;
([2,0,2],2) -> 2;
([1],1) -> 0;
([0],1) -> 0;
([0,2],0) -> 0;
([], 0) -> 0;

=================================
None
([0,2],1) -> 2;
([0,1,2],3) -> 0;
([2,1,3],2) -> 3;
([1],3) -> 0;
([2],3) -> 0;
([], 0) -> 0;

=================================
None
([3],1) -> 0;
([3,0],3) -> 0;
([0,0,1],3) -> 0;
([2,1],3) -> 0;
([3,0],1) -> 0;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([3,2],0) -> 3;
([1,3],3) -> 0;
([3,0,1],2) -> 1;
([2],1) -> 0;
([0,2],1) -> 2;
([], 0) -> 0;

=================================
None
([3,0,2],1) -> 0;
([0,3,1],3) -> 0;
([1],0) -> 1;
([3,2,0],0) -> 3;
([0],3) -> 0;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> (match x . 0 with
                  | Nil _ -> x . 1
                  | Cons _ -> Un_Cons (x . 0) . 0)
      | S _ -> 0

0.7681 false

([0,0,0],2) -> 0;
([0,2],0) -> 0;
([3,1,1],2) -> 1;
([2],3) -> 0;
([3],0) -> 3;
([], 0) -> 0;

=================================
None
([1,3,2],3) -> 0;
([2,0],0) -> 2;
([2,1,0],2) -> 0;
([1,2,2],2) -> 2;
([1,3,3],1) -> 3;
([], 0) -> 0;

=================================
None
([3],2) -> 0;
([1,3],1) -> 3;
([1,2],3) -> 0;
([3,1,1],0) -> 3;
([2],2) -> 0;
([], 0) -> 0;

=================================
None
([3,2,1],3) -> 0;
([1],1) -> 0;
([1],2) -> 0;
([2,1],0) -> 2;
([3],3) -> 0;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> 0)

2.1455 false

([1,1,1],2) -> 1;
([3],0) -> 3;
([3,1,2],0) -> 3;
([0,1,1],3) -> 0;
([2,0,0],0) -> 2;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Un_Cons (x . 0) . 0

0.2258 false

([0],1) -> 0;
([1,1,3],3) -> 0;
([0,3,0],0) -> 0;
([3,1,2],2) -> 2;
([2,2],2) -> 0;
([3,2,0],0) -> 3;
([], 0) -> 0;

=================================
None
([1],2) -> 0;
([0,2],3) -> 0;
([2,3,0],3) -> 0;
([3],0) -> 3;
([1,0,1],0) -> 1;
([3,3],2) -> 0;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> (match x . 0 with
                  | Nil _ -> x . 1
                  | Cons _ -> Un_Cons (x . 0) . 0)
      | S _ -> 0

0.2948 false

([1,1,3],1) -> 1;
([3,1],2) -> 0;
([0],3) -> 0;
([1],1) -> 0;
([0,2,0],2) -> 0;
([1],2) -> 0;
([], 0) -> 0;

=================================
None
([2],3) -> 0;
([1,2],3) -> 0;
([3,1,3],0) -> 3;
([3,2],3) -> 0;
([3,0,0],2) -> 0;
([1,3,2],0) -> 1;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> (match x . 0 with
                  | Nil _ -> x . 1
                  | Cons _ -> Un_Cons (x . 0) . 0)
      | S _ -> 0

1.1570 false

([2,0],3) -> 0;
([0],3) -> 0;
([2,3],3) -> 0;
([3],2) -> 0;
([1,1,3],0) -> 1;
([1],0) -> 1;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> (match x . 0 with
                  | Nil _ -> x . 1
                  | Cons _ -> S (x . 1))
      | S _ -> 0

4.0949 false

([3],1) -> 0;
([3,2],0) -> 3;
([3,3,3],2) -> 3;
([3,0],2) -> 0;
([1,1],3) -> 0;
([0,2,3],0) -> 0;
([], 0) -> 0;

=================================
None
([0],3) -> 0;
([2,0],1) -> 0;
([2,3],1) -> 3;
([0],0) -> 0;
([0,3,3],2) -> 3;
([3,2],1) -> 2;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Un_Cons (x . 0) . 0
                     | Cons _ -> Un_Cons (Un_Cons (x . 0) . 1) . 0)

3.9988 false

([1,3,0],2) -> 0;
([3],3) -> 0;
([2,3,2],1) -> 3;
([2,3,2],3) -> 0;
([3],1) -> 0;
([3,3],2) -> 0;
([], 0) -> 0;

=================================
None
([2],1) -> 0;
([1,2],3) -> 0;
([3,0],0) -> 3;
([0,2,0],0) -> 0;
([0,1],0) -> 0;
([2],0) -> 2;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> (match x . 0 with
                  | Nil _ -> x . 1
                  | Cons _ -> Un_Cons (x . 0) . 0)
      | S _ -> 0

0.4511 false

([3,0],1) -> 0;
([3,0,2],0) -> 3;
([1],1) -> 0;
([2,1,3],0) -> 2;
([2,1],3) -> 0;
([0],3) -> 0;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> 0)

2.4867 false

([2,1],2) -> 0;
([3,1],2) -> 0;
([2,2],0) -> 2;
([0],0) -> 0;
([3,3,1],2) -> 1;
([1],2) -> 0;
([2,3],2) -> 0;
([], 0) -> 0;

=================================
None
([3,3],0) -> 3;
([3,3],2) -> 0;
([0,2],0) -> 0;
([2],3) -> 0;
([2,1],2) -> 0;
([3],1) -> 0;
([3],0) -> 3;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> 0)

0.3262 false

([3,2],3) -> 0;
([3,1],0) -> 3;
([3,2,0],1) -> 2;
([0,1],0) -> 0;
([3],3) -> 0;
([0,0,3],1) -> 0;
([2,1,2],3) -> 0;
([], 0) -> 0;

=================================
None
([1,2,0],1) -> 2;
([0,1,1],2) -> 1;
([2,3],1) -> 3;
([1,2],1) -> 2;
([1,1],1) -> 1;
([0,3],1) -> 3;
([2,3],3) -> 0;
([], 0) -> 0;

=================================
None
([0,1],1) -> 1;
([3,2,0],1) -> 2;
([3,0],3) -> 0;
([3,2,2],2) -> 2;
([0],2) -> 0;
([1],0) -> 1;
([3,1],0) -> 3;
([], 0) -> 0;

=================================
None
([0],0) -> 0;
([2,1,1],0) -> 2;
([2,2],3) -> 0;
([3],2) -> 0;
([2,1],3) -> 0;
([0,0],3) -> 0;
([1,1,2],0) -> 1;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> (match x . 0 with
                  | Nil _ -> x . 1
                  | Cons _ -> Un_Cons (x . 0) . 0)
      | S _ -> 0

5.8280 false

([2,3],1) -> 3;
([3],2) -> 0;
([0,2],2) -> 0;
([2,1],0) -> 2;
([1],0) -> 1;
([1],1) -> 0;
([2],0) -> 2;
([], 0) -> 0;

=================================
None
([1],3) -> 0;
([0,3,3],2) -> 3;
([2,3],1) -> 3;
([3,3,1],3) -> 0;
([1,3],0) -> 1;
([3,1],2) -> 0;
([3,0],0) -> 3;
([], 0) -> 0;

=================================
None
([3,3],1) -> 3;
([1,2],3) -> 0;
([1,2],0) -> 1;
([3],1) -> 0;
([0,1,1],1) -> 1;
([3,3,0],0) -> 3;
([0,3],1) -> 3;
([], 0) -> 0;

=================================
None
([1],3) -> 0;
([3,1,0],1) -> 1;
([3,0,3],2) -> 3;
([1],0) -> 1;
([0,1,3],3) -> 0;
([0],1) -> 0;
([2,1],2) -> 0;
([], 0) -> 0;

=================================
None
([1,3],2) -> 0;
([2,3],2) -> 0;
([1,0,1],1) -> 0;
([0,0,3],0) -> 0;
([0,1,1],1) -> 1;
([2,1],3) -> 0;
([3,0,2],2) -> 2;
([3,1,0],1) -> 1;
([], 0) -> 0;

=================================
None
([0,2,2],2) -> 2;
([3,0,0],3) -> 0;
([3],0) -> 3;
([1],2) -> 0;
([0,2],0) -> 0;
([3],1) -> 0;
([0,1,2],3) -> 0;
([0,3,3],0) -> 0;
([], 0) -> 0;

=================================
None
([2,3],3) -> 0;
([0],2) -> 0;
([3,2],3) -> 0;
([2,0,1],0) -> 2;
([0,0],2) -> 0;
([0,3],3) -> 0;
([0,2],0) -> 0;
([2,0,3],1) -> 0;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> 0)

3.7801 false

([0],0) -> 0;
([1,0],3) -> 0;
([0,0,3],2) -> 3;
([3,2],3) -> 0;
([3,3],3) -> 0;
([3,0],3) -> 0;
([0],1) -> 0;
([2,2,3],1) -> 2;
([], 0) -> 0;

=================================
None
([2,3,3],0) -> 2;
([1,0],3) -> 0;
([1],3) -> 0;
([3,1,2],0) -> 3;
([0,2],3) -> 0;
([3,0,1],1) -> 0;
([2,3],2) -> 0;
([2,0,3],1) -> 0;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> (match x . 0 with
                  | Nil _ -> x . 1
                  | Cons _ -> Un_Cons (x . 0) . 0)
      | S _ -> 0

21.6101 false

([0,1],0) -> 0;
([1,2],0) -> 1;
([1,3,0],0) -> 1;
([3,1,3],2) -> 3;
([0,0],3) -> 0;
([1,0,1],0) -> 1;
([2,2],1) -> 2;
([1,3,0],2) -> 0;
([], 0) -> 0;

=================================
None
([0,2],2) -> 0;
([0,2],1) -> 2;
([1,1],2) -> 0;
([0,3],1) -> 3;
([0],0) -> 0;
([3,1],2) -> 0;
([2],2) -> 0;
([1],3) -> 0;
([], 0) -> 0;

=================================
None
([3,1,2],0) -> 3;
([3,1,2],3) -> 0;
([0,3],0) -> 0;
([3,0,1],2) -> 1;
([2],1) -> 0;
([1,1,0],1) -> 1;
([0],3) -> 0;
([0,2],2) -> 0;
([], 0) -> 0;

=================================
None
([3,3],3) -> 0;
([2,0],0) -> 2;
([1,3,3],1) -> 3;
([0,3,0],0) -> 0;
([3],1) -> 0;
([2,2,3],2) -> 3;
([0],0) -> 0;
([0],3) -> 0;
([], 0) -> 0;

=================================
None
([2,1,2],0) -> 2;
([0],2) -> 0;
([0],0) -> 0;
([1],3) -> 0;
([3,0,1],2) -> 1;
([0,1],0) -> 0;
([3],1) -> 0;
([1,1,3],0) -> 1;
([], 0) -> 0;

=================================
None
([2],3) -> 0;
([0],2) -> 0;
([1],3) -> 0;
([2,0,3],1) -> 0;
([2,1],0) -> 2;
([0,0,2],1) -> 0;
([3],2) -> 0;
([2,1,1],1) -> 1;
([2,2],3) -> 0;
([], 0) -> 0;

=================================
None
([1,3,2],2) -> 2;
([0,1],0) -> 0;
([1],0) -> 1;
([3,2,1],3) -> 0;
([2],2) -> 0;
([3,2],2) -> 0;
([1,3],1) -> 3;
([1],3) -> 0;
([3,2,0],2) -> 0;
([], 0) -> 0;

=================================
None
([1,1],3) -> 0;
([0,1],3) -> 0;
([1],2) -> 0;
([3,3,1],3) -> 0;
([2,0],2) -> 0;
([1,1],2) -> 0;
([1,2,3],1) -> 2;
([0,2,0],0) -> 0;
([0,0],3) -> 0;
([], 0) -> 0;

=================================
None
([0,1,2],0) -> 0;
([2,1],3) -> 0;
([2],0) -> 2;
([3],2) -> 0;
([3,3,0],1) -> 3;
([1,0,1],3) -> 0;
([1,3,1],3) -> 0;
([2,2,2],2) -> 2;
([1],1) -> 0;
([], 0) -> 0;

=================================
None
([0,1,3],0) -> 0;
([1,2],3) -> 0;
([3,2,0],0) -> 3;
([3,2],1) -> 2;
([1,2,2],0) -> 1;
([1,3],0) -> 1;
([1,2],2) -> 0;
([3,2,0],1) -> 2;
([2,2],0) -> 2;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> Un_S (Un_Cons (x . 0) . 0))

3.5351 false

([1,0,2],1) -> 0;
([2,0],2) -> 0;
([1],3) -> 0;
([2,2],3) -> 0;
([0,0],0) -> 0;
([2,0],3) -> 0;
([1,0],1) -> 0;
([3,0],0) -> 3;
([0,3,2],1) -> 3;
([], 0) -> 0;

=================================
None
([2,3],2) -> 0;
([3,0],1) -> 0;
([0],1) -> 0;
([3,2],1) -> 2;
([1,1],1) -> 1;
([3,1],1) -> 1;
([0,1],1) -> 1;
([0],0) -> 0;
([0,2,2],3) -> 0;
([], 0) -> 0;

=================================
None
([2,0,3],1) -> 0;
([2,0],0) -> 2;
([3,3],2) -> 0;
([1,1],3) -> 0;
([2],1) -> 0;
([1,0,1],0) -> 1;
([3],0) -> 3;
([3],3) -> 0;
([3],1) -> 0;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> 0)

0.7735 false

([2,3,1],3) -> 0;
([0,1],0) -> 0;
([2,1],2) -> 0;
([1],3) -> 0;
([0,2,2],2) -> 2;
([0,2,2],1) -> 2;
([0],1) -> 0;
([0,0],2) -> 0;
([2],3) -> 0;
([], 0) -> 0;

=================================
None
([1],0) -> 1;
([1],3) -> 0;
([0,1,0],0) -> 0;
([1,3,3],1) -> 3;
([0,0],3) -> 0;
([2,3,0],2) -> 0;
([3],2) -> 0;
([0,2,1],0) -> 0;
([1,2],2) -> 0;
([], 0) -> 0;

=================================
None
([0,0],2) -> 0;
([1,0,0],2) -> 0;
([2,2,1],1) -> 2;
([1],0) -> 1;
([1,3],1) -> 3;
([0,0,0],1) -> 0;
([3,2],0) -> 3;
([1,3,2],3) -> 0;
([3],3) -> 0;
([0],3) -> 0;
([], 0) -> 0;

=================================
None
([0,1],2) -> 0;
([3,0,1],0) -> 3;
([2,3,0],2) -> 0;
([1],0) -> 1;
([3,3],0) -> 3;
([3,3,2],0) -> 3;
([3,2,0],2) -> 0;
([0],3) -> 0;
([1,0,1],3) -> 0;
([0,3,0],3) -> 0;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> 0)

1.4700 false

([0,1],1) -> 1;
([1,0,0],2) -> 0;
([3],3) -> 0;
([2,3,3],2) -> 3;
([0,2],2) -> 0;
([0,0,3],3) -> 0;
([1,3,3],3) -> 0;
([2,2,2],0) -> 2;
([1,1],2) -> 0;
([3,1],0) -> 3;
([], 0) -> 0;

=================================
None
([0,3],1) -> 3;
([1,3],2) -> 0;
([2,1,0],1) -> 1;
([3,0],3) -> 0;
([1],2) -> 0;
([0],3) -> 0;
([2,0],2) -> 0;
([3,1],1) -> 1;
([3,1],2) -> 0;
([3,2,2],1) -> 2;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_S (x . 1) with
                     | O _ -> Un_Cons (Un_Cons (x . 0) . 1) . 0
                     | S _ -> 0)

79.7728 false

([1,3],0) -> 1;
([0],1) -> 0;
([2,0],3) -> 0;
([2],0) -> 2;
([3],1) -> 0;
([3],0) -> 3;
([0,3],2) -> 0;
([0],3) -> 0;
([3,1],0) -> 3;
([1],0) -> 1;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> (match x . 0 with
                  | Nil _ -> x . 1
                  | Cons _ -> Un_Cons (x . 0) . 0)
      | S _ -> 0

0.3452 false

([2,0],2) -> 0;
([2],1) -> 0;
([1],3) -> 0;
([2,1],2) -> 0;
([1,0],2) -> 0;
([3],0) -> 3;
([1,0,0],1) -> 0;
([3],2) -> 0;
([2,3],0) -> 2;
([3,1],0) -> 3;
([], 0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> 0)

0.1340 false

([1,3],1) -> 3;
([0,1],2) -> 0;
([3,0],3) -> 0;
([1,2,3],2) -> 3;
([3],2) -> 0;
([3,3],1) -> 3;
([2,0,1],2) -> 1;
([0,0],3) -> 0;
([3],0) -> 3;
([2,3],0) -> 2;
([], 0) -> 0;

=================================
None
([3],2) -> 0;
([3,3,1],0) -> 3;
([1,2,1],0) -> 1;
([0,1,1],0) -> 0;
([3,2,1],2) -> 1;
([2,3,1],2) -> 1;
([2,1,1],3) -> 0;
([1,2],3) -> 0;
([3,3],1) -> 3;
([0],3) -> 0;
([], 0) -> 0;

=================================
None
([2,2],2) -> 0;
([3,0],1) -> 0;
([1,0],1) -> 0;
([1,1],2) -> 0;
([2],2) -> 0;
([1],1) -> 0;
([2],3) -> 0;
([1,1,2],1) -> 1;
([3,2,2],0) -> 3;
([0,1],3) -> 0;
([], 0) -> 0;

=================================
None
([2,3,0],3) -> 0;
([0,2,3],2) -> 3;
([0],3) -> 0;
([3,1],1) -> 1;
([1,2,3],0) -> 1;
([0,1],0) -> 0;
([1],0) -> 1;
([2,1],3) -> 0;
([1,2],3) -> 0;
([2,2],2) -> 0;
([], 0) -> 0;

=================================
None
