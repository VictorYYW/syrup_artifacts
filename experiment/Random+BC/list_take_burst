list_take
(1,[2]) -> [2];
(0, []) -> [];

=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> x . 1

0.0154 false

(3,[1]) -> [1];
(0, []) -> [];

=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> x . 1

0.0328 false

(3,[1,1,0]) -> [1,1,0];
(0, []) -> [];

=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> x . 1

1.1673 false

(0,[2,1]) -> [];
(0, []) -> [];

=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> Nil

0.0000 false

(2,[2]) -> [2];
(0, []) -> [];

=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> x . 1

0.0277 false

(1,[2,2,0]) -> [2];
(0, []) -> [];

=================================
None
(3,[1,3]) -> [1,3];
(0, []) -> [];

=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> x . 1

1.2618 false

(0,[3]) -> [];
(0, []) -> [];

=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> Nil

0.0000 false

(1,[2,2]) -> [2];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> x . 1
      | S _ -> Un_Cons (x . 1) . 1

0.3252 false

(0,[0,1]) -> [];
(0, []) -> [];

=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> Nil

0.0000 false

(1,[0]) -> [0];
(3,[2,1,0]) -> [2,1,0];
(0, []) -> [];

=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> x . 1

0.0059 false

(0,[3]) -> [];
(2,[2,3]) -> [2,3];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

34.3735 false

(1,[2,1]) -> [2];
(1,[1,0]) -> [1];
(0, []) -> [];

=================================
None
(0,[1,3,2]) -> [];
(2,[2,3,1]) -> [2,3];
(0, []) -> [];

=================================
None
(1,[2]) -> [2];
(3,[3,2]) -> [3,2];
(0, []) -> [];

=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> x . 1

0.0166 false

(0,[1]) -> [];
(3,[1,2,2]) -> [1,2,2];
(0, []) -> [];

=================================
None
(0,[1]) -> [];
(2,[2,2]) -> [2,2];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

13.4271 false

(3,[2,2,1]) -> [2,2,1];
(1,[0,0,2]) -> [0];
(0, []) -> [];

=================================
None
(0,[0,0]) -> [];
(1,[1,3]) -> [1];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> Cons (x . 0, Nil)

3.8936 false

(1,[1,1,0]) -> [1];
(1,[2]) -> [2];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> x . 1
      | S _ -> Cons (Un_Cons (x . 1) . 0, Nil)

19.0323 false

(1,[2,2]) -> [2];
(3,[2]) -> [2];
(3,[2,0,1]) -> [2,0,1];
(0, []) -> [];

=================================
STACKOVERFLOW

(2,[0,0]) -> [0,0];
(0,[2,0,2]) -> [];
(1,[0]) -> [0];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

38.3777 false

(2,[3,1]) -> [3,1];
(1,[3,0]) -> [3];
(0,[0,1]) -> [];
(0, []) -> [];

=================================
None
(3,[2,2]) -> [2,2];
(0,[3]) -> [];
(0,[1,1]) -> [];
(0, []) -> [];

=================================
None
(3,[2,1,3]) -> [2,1,3];
(1,[1]) -> [1];
(1,[0,0]) -> [0];
(0, []) -> [];

=================================
None
(0,[3,0,3]) -> [];
(0,[3]) -> [];
(3,[2,0,0]) -> [2,0,0];
(0, []) -> [];

=================================
None
(1,[0,2,1]) -> [0];
(1,[1,3,3]) -> [1];
(0,[0,2,2]) -> [];
(0, []) -> [];

=================================
None
(0,[3,0]) -> [];
(1,[2,3]) -> [2];
(3,[1]) -> [1];
(0, []) -> [];

=================================
None
(3,[2,1]) -> [2,1];
(0,[1,2]) -> [];
(1,[1,0,1]) -> [1];
(0, []) -> [];

=================================
None
(0,[2,3,2]) -> [];
(3,[0,2]) -> [0,2];
(3,[3,0,2]) -> [3,0,2];
(0, []) -> [];

=================================
None
(1,[2,3]) -> [2];
(2,[0,1,1]) -> [0,1];
(3,[3,2]) -> [3,2];
(2,[1]) -> [1];
(0, []) -> [];

=================================
None
(3,[0,2]) -> [0,2];
(1,[0]) -> [0];
(1,[3]) -> [3];
(2,[3,0]) -> [3,0];
(0, []) -> [];

=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> x . 1

0.3924 false

(0,[3,2]) -> [];
(0,[0,0,1]) -> [];
(1,[3,3]) -> [3];
(0,[3,3]) -> [];
(0, []) -> [];

=================================
None
(2,[0,0,1]) -> [0,0];
(2,[2]) -> [2];
(2,[0]) -> [0];
(1,[3]) -> [3];
(0, []) -> [];

=================================
None
(2,[3,2,1]) -> [3,2];
(0,[3,1]) -> [];
(0,[1,0,2]) -> [];
(0,[1,3,1]) -> [];
(0, []) -> [];

=================================
None
(2,[3,1]) -> [3,1];
(2,[2,3]) -> [2,3];
(3,[2,0]) -> [2,0];
(1,[3]) -> [3];
(0, []) -> [];

=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> x . 1

0.5374 false

(3,[2,3,2]) -> [2,3,2];
(2,[3]) -> [3];
(1,[2]) -> [2];
(0,[0]) -> [];
(0, []) -> [];

=================================
None
(1,[0,0,1]) -> [0];
(1,[1]) -> [1];
(0,[2]) -> [];
(0,[3]) -> [];
(0, []) -> [];

=================================
None
(3,[1,0,2]) -> [1,0,2];
(2,[2,0]) -> [2,0];
(2,[1]) -> [1];
(1,[0]) -> [0];
(0, []) -> [];

=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> x . 1

6.9977 false

(3,[1,1]) -> [1,1];
(1,[0]) -> [0];
(0,[3]) -> [];
(1,[0,0]) -> [0];
(0, []) -> [];

=================================
None
(0,[0]) -> [];
(1,[0,2]) -> [0];
(1,[1,3,3]) -> [1];
(0,[1,3,2]) -> [];
(1,[3,1]) -> [3];
(0, []) -> [];

=================================
None
(0,[1,1,3]) -> [];
(0,[0,1,0]) -> [];
(1,[2]) -> [2];
(0,[2,1,3]) -> [];
(2,[1]) -> [1];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

49.5102 false

(3,[0,1,0]) -> [0,1,0];
(0,[3,2,2]) -> [];
(0,[1,2,2]) -> [];
(3,[3]) -> [3];
(0,[0,3,0]) -> [];
(0, []) -> [];

=================================
None
(0,[1,0]) -> [];
(1,[2]) -> [2];
(2,[0]) -> [0];
(1,[2,1,2]) -> [2];
(1,[0]) -> [0];
(0, []) -> [];

=================================
None
(2,[1,0]) -> [1,0];
(2,[1,2]) -> [1,2];
(2,[3]) -> [3];
(1,[1]) -> [1];
(1,[3]) -> [3];
(0, []) -> [];

=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> x . 1

0.0616 false

(1,[2,0,1]) -> [2];
(2,[0]) -> [0];
(2,[3,0,1]) -> [3,0];
(2,[2]) -> [2];
(0,[2]) -> [];
(0, []) -> [];

=================================
None
(3,[3]) -> [3];
(3,[2,3]) -> [2,3];
(1,[3]) -> [3];
(1,[2]) -> [2];
(2,[2,3]) -> [2,3];
(0, []) -> [];

=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> x . 1

0.0553 false

(0,[2]) -> [];
(1,[3,1,1]) -> [3];
(1,[1]) -> [1];
(0,[2,3,1]) -> [];
(0,[3]) -> [];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> Cons (Un_Cons (x . 1) . 0, Nil)

100.7551 false

(1,[0,3]) -> [0];
(3,[0,0,3]) -> [0,0,3];
(0,[0]) -> [];
(2,[0,0]) -> [0,0];
(0,[2]) -> [];
(0, []) -> [];

=================================
None
(1,[3,3]) -> [3];
(0,[3]) -> [];
(3,[1,0]) -> [1,0];
(1,[1,0]) -> [1];
(0,[2,3]) -> [];
(0, []) -> [];

=================================
None
(2,[2,2]) -> [2,2];
(2,[1,3]) -> [1,3];
(3,[0,1,0]) -> [0,1,0];
(2,[3,0]) -> [3,0];
(0,[3,0]) -> [];
(2,[1]) -> [1];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

78.0234 false

(1,[2,3]) -> [2];
(0,[1]) -> [];
(1,[3,3,2]) -> [3];
(2,[2]) -> [2];
(0,[2,3,3]) -> [];
(3,[3,1,1]) -> [3,1,1];
(0, []) -> [];

=================================
None
(3,[0,0]) -> [0,0];
(2,[3]) -> [3];
(2,[3,0,2]) -> [3,0];
(0,[2]) -> [];
(2,[3,0]) -> [3,0];
(3,[2]) -> [2];
(0, []) -> [];

=================================
None
(0,[1,0,1]) -> [];
(0,[3,0,2]) -> [];
(2,[2,2,2]) -> [2,2];
(3,[0]) -> [0];
(3,[3]) -> [3];
(0,[1,2,0]) -> [];
(0, []) -> [];

=================================
None
(1,[0,3,1]) -> [0];
(3,[3]) -> [3];
(2,[1]) -> [1];
(3,[2]) -> [2];
(2,[1,2]) -> [1,2];
(1,[1]) -> [1];
(0, []) -> [];

=================================
None
(3,[3,1]) -> [3,1];
(1,[3,2]) -> [3];
(1,[2,0,3]) -> [2];
(0,[1]) -> [];
(3,[2,2,2]) -> [2,2,2];
(3,[3,1,2]) -> [3,1,2];
(0, []) -> [];

=================================
STACKOVERFLOW

(2,[0,2]) -> [0,2];
(3,[0,1]) -> [0,1];
(2,[1,0]) -> [1,0];
(1,[1]) -> [1];
(2,[2]) -> [2];
(3,[0,3,2]) -> [0,3,2];
(0, []) -> [];

=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> x . 1

0.2172 false

(0,[2]) -> [];
(3,[0,1,2]) -> [0,1,2];
(1,[2]) -> [2];
(2,[3,1,2]) -> [3,1];
(2,[3,3,3]) -> [3,3];
(0,[1,0,0]) -> [];
(0, []) -> [];

=================================
None
(0,[3,3,1]) -> [];
(1,[0,1]) -> [0];
(3,[3]) -> [3];
(3,[0,1,1]) -> [0,1,1];
(0,[2,0,0]) -> [];
(0,[2,1]) -> [];
(0, []) -> [];

=================================
None
(1,[0,2]) -> [0];
(3,[3,2,2]) -> [3,2,2];
(0,[1,0,3]) -> [];
(0,[1]) -> [];
(3,[3,2,3]) -> [3,2,3];
(0,[1,2]) -> [];
(0, []) -> [];

=================================
None
(1,[1]) -> [1];
(2,[3,2]) -> [3,2];
(3,[2,1]) -> [2,1];
(3,[2,0,1]) -> [2,0,1];
(3,[2]) -> [2];
(0,[2]) -> [];
(1,[0,0]) -> [0];
(0, []) -> [];

=================================
None
(3,[1]) -> [1];
(3,[0]) -> [0];
(3,[1,0]) -> [1,0];
(2,[1,0]) -> [1,0];
(2,[1]) -> [1];
(0,[1,0]) -> [];
(1,[0]) -> [0];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

0.2964 false

(3,[3,0]) -> [3,0];
(0,[3]) -> [];
(3,[0,3]) -> [0,3];
(1,[2,3,3]) -> [2];
(2,[0,3,1]) -> [0,3];
(0,[1,1,2]) -> [];
(0,[2,1]) -> [];
(0, []) -> [];

=================================
None
(1,[2,2,2]) -> [2];
(3,[0]) -> [0];
(3,[2,3]) -> [2,3];
(0,[3]) -> [];
(3,[1,2]) -> [1,2];
(3,[2,1,1]) -> [2,1,1];
(1,[0]) -> [0];
(0, []) -> [];

=================================
None
(0,[3,3]) -> [];
(0,[1]) -> [];
(2,[3]) -> [3];
(3,[2,0]) -> [2,0];
(2,[3,1]) -> [3,1];
(1,[1]) -> [1];
(1,[0]) -> [0];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

20.9576 false

(1,[0,1]) -> [0];
(0,[0,1]) -> [];
(2,[3,0,2]) -> [3,0];
(2,[3,1]) -> [3,1];
(0,[3]) -> [];
(3,[1,0,0]) -> [1,0,0];
(3,[3,3,0]) -> [3,3,0];
(0, []) -> [];

=================================
None
(3,[2,1,0]) -> [2,1,0];
(3,[1,0,1]) -> [1,0,1];
(0,[1,1]) -> [];
(0,[0,1]) -> [];
(0,[0]) -> [];
(3,[1]) -> [1];
(2,[1,3,0]) -> [1,3];
(0, []) -> [];

=================================
None
(1,[3,0]) -> [3];
(2,[1]) -> [1];
(0,[0,1]) -> [];
(0,[1,1]) -> [];
(2,[2,2,0]) -> [2,2];
(2,[0]) -> [0];
(2,[0,0]) -> [0,0];
(0, []) -> [];

=================================
None
(3,[2]) -> [2];
(0,[1,0]) -> [];
(2,[1,3,2]) -> [1,3];
(0,[3]) -> [];
(0,[1,1]) -> [];
(2,[0,1,1]) -> [0,1];
(0,[3,3,0]) -> [];
(0, []) -> [];

=================================
None
(0,[2,0,0]) -> [];
(0,[0,0]) -> [];
(2,[0,1]) -> [0,1];
(3,[0,1,1]) -> [0,1,1];
(2,[2,1]) -> [2,1];
(3,[0,2]) -> [0,2];
(3,[0,0]) -> [0,0];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

36.3039 false

(0,[2,1,3]) -> [];
(3,[3,0,0]) -> [3,0,0];
(1,[1]) -> [1];
(0,[3,3]) -> [];
(3,[0]) -> [0];
(0,[0]) -> [];
(3,[1,0,3]) -> [1,0,3];
(0,[3,2]) -> [];
(0, []) -> [];

=================================
None
(3,[2]) -> [2];
(0,[3,2,3]) -> [];
(3,[1,0]) -> [1,0];
(0,[1,0,3]) -> [];
(0,[1,1,1]) -> [];
(3,[2,0]) -> [2,0];
(2,[3,1,3]) -> [3,1];
(2,[0,2,2]) -> [0,2];
(0, []) -> [];

=================================
None
(0,[1,3]) -> [];
(3,[1,2,2]) -> [1,2,2];
(0,[2,0,3]) -> [];
(1,[3]) -> [3];
(3,[3]) -> [3];
(3,[3,3,2]) -> [3,3,2];
(2,[3,1]) -> [3,1];
(2,[3,2,1]) -> [3,2];
(0, []) -> [];

=================================
None
(0,[2,1]) -> [];
(1,[2,0,2]) -> [2];
(3,[1]) -> [1];
(0,[0,0,2]) -> [];
(3,[2,1,2]) -> [2,1,2];
(0,[2,0,2]) -> [];
(0,[0,3,0]) -> [];
(2,[0]) -> [0];
(0, []) -> [];

=================================
None
(0,[1]) -> [];
(3,[3]) -> [3];
(0,[1,3,3]) -> [];
(2,[1,3,2]) -> [1,3];
(3,[2,0,0]) -> [2,0,0];
(1,[0,2,0]) -> [0];
(3,[0,3]) -> [0,3];
(0,[2,1]) -> [];
(0, []) -> [];

=================================
STACKOVERFLOW

(3,[3,0]) -> [3,0];
(0,[0,3]) -> [];
(1,[1]) -> [1];
(0,[2,0,2]) -> [];
(3,[1]) -> [1];
(2,[2]) -> [2];
(0,[3,3,1]) -> [];
(1,[2,3,1]) -> [2];
(0, []) -> [];

=================================
None
(1,[2,0]) -> [2];
(2,[3]) -> [3];
(1,[2,2,1]) -> [2];
(2,[0,1,3]) -> [0,1];
(2,[2]) -> [2];
(1,[3]) -> [3];
(0,[1]) -> [];
(2,[3,1]) -> [3,1];
(0, []) -> [];

=================================
None
(3,[3,2]) -> [3,2];
(3,[0,2]) -> [0,2];
(0,[1]) -> [];
(0,[0,3,3]) -> [];
(1,[0,1,0]) -> [0];
(3,[1,0]) -> [1,0];
(2,[3,3,2]) -> [3,3];
(2,[3,3]) -> [3,3];
(0, []) -> [];

=================================
None
(3,[1]) -> [1];
(1,[0,0]) -> [0];
(2,[1]) -> [1];
(3,[3]) -> [3];
(3,[2]) -> [2];
(0,[3]) -> [];
(1,[3,0]) -> [3];
(2,[0,2]) -> [0,2];
(0, []) -> [];

=================================
None
(3,[1]) -> [1];
(2,[0,0,1]) -> [0,0];
(0,[2,2]) -> [];
(1,[2,0,2]) -> [2];
(3,[0]) -> [0];
(0,[2,1,2]) -> [];
(1,[2]) -> [2];
(2,[2,3]) -> [2,3];
(0, []) -> [];

=================================
None
(1,[1]) -> [1];
(2,[0,0]) -> [0,0];
(1,[3,2,1]) -> [3];
(1,[1,0]) -> [1];
(2,[1,1]) -> [1,1];
(2,[0]) -> [0];
(1,[0,0,1]) -> [0];
(0,[3,3,3]) -> [];
(1,[1,1,2]) -> [1];
(0, []) -> [];

=================================
None
(3,[2,3,1]) -> [2,3,1];
(2,[0]) -> [0];
(3,[1,0]) -> [1,0];
(3,[1,1,0]) -> [1,1,0];
(3,[2]) -> [2];
(3,[0,3]) -> [0,3];
(1,[0,0]) -> [0];
(0,[1,0,3]) -> [];
(1,[3]) -> [3];
(0, []) -> [];

=================================
None
(1,[2,1,2]) -> [2];
(0,[1]) -> [];
(1,[1]) -> [1];
(0,[0]) -> [];
(2,[2,2,3]) -> [2,2];
(3,[2,3]) -> [2,3];
(3,[2,3,1]) -> [2,3,1];
(2,[0,0]) -> [0,0];
(1,[1,3,1]) -> [1];
(0, []) -> [];

=================================
None
(0,[3,0]) -> [];
(0,[0,2]) -> [];
(3,[1]) -> [1];
(0,[1]) -> [];
(1,[0,1,3]) -> [0];
(1,[2,1]) -> [2];
(2,[2]) -> [2];
(0,[0,0]) -> [];
(1,[0,1]) -> [0];
(0, []) -> [];

=================================
None
(2,[0,3]) -> [0,3];
(2,[3]) -> [3];
(2,[0,2,0]) -> [0,2];
(3,[3]) -> [3];
(1,[2,2]) -> [2];
(1,[0]) -> [0];
(2,[3,1,1]) -> [3,1];
(1,[3]) -> [3];
(2,[1]) -> [1];
(0, []) -> [];

=================================
None
(3,[1,0]) -> [1,0];
(0,[0]) -> [];
(1,[2,2]) -> [2];
(2,[3]) -> [3];
(3,[3,2,0]) -> [3,2,0];
(1,[1,2]) -> [1];
(3,[1,2]) -> [1,2];
(3,[0]) -> [0];
(2,[3,2]) -> [3,2];
(0, []) -> [];

=================================
None
(0,[0,0]) -> [];
(3,[0]) -> [0];
(0,[0]) -> [];
(1,[2,0]) -> [2];
(3,[0,2]) -> [0,2];
(0,[1,0,0]) -> [];
(0,[3,0]) -> [];
(2,[0]) -> [0];
(1,[1,3,2]) -> [1];
(0, []) -> [];

=================================
None
(3,[0,2]) -> [0,2];
(0,[0]) -> [];
(0,[3]) -> [];
(3,[3]) -> [3];
(1,[0,1,1]) -> [0];
(1,[2,2,3]) -> [2];
(2,[1]) -> [1];
(1,[0,2]) -> [0];
(1,[1]) -> [1];
(0, []) -> [];

=================================
None
(1,[0,1,2]) -> [0];
(3,[1,3,0]) -> [1,3,0];
(2,[3,1,2]) -> [3,1];
(2,[3,0,0]) -> [3,0];
(2,[2,1]) -> [2,1];
(0,[2,0,0]) -> [];
(0,[3,2]) -> [];
(0,[2,0,1]) -> [];
(3,[2]) -> [2];
(0, []) -> [];

=================================
None
(3,[1,3,2]) -> [1,3,2];
(1,[3]) -> [3];
(0,[1,0,2]) -> [];
(1,[0,0]) -> [0];
(0,[0,2,0]) -> [];
(1,[2,3,0]) -> [2];
(0,[1,2,0]) -> [];
(2,[1,3]) -> [1,3];
(1,[1]) -> [1];
(0, []) -> [];

=================================
None
(2,[2]) -> [2];
(3,[0,0]) -> [0,0];
(3,[0,3,2]) -> [0,3,2];
(0,[1,1,0]) -> [];
(3,[2,0,2]) -> [2,0,2];
(1,[1,0,0]) -> [1];
(1,[3,2]) -> [3];
(3,[0,2]) -> [0,2];
(3,[2,1]) -> [2,1];
(1,[3,0]) -> [3];
(0, []) -> [];

=================================
None
(1,[3,1,3]) -> [3];
(0,[2]) -> [];
(3,[1,1,2]) -> [1,1,2];
(3,[3]) -> [3];
(2,[3,2,3]) -> [3,2];
(1,[1,2]) -> [1];
(1,[0,3,1]) -> [0];
(2,[3]) -> [3];
(0,[3,2,1]) -> [];
(3,[2]) -> [2];
(0, []) -> [];

=================================
None
(0,[1]) -> [];
(3,[3]) -> [3];
(2,[2,3]) -> [2,3];
(3,[0,3]) -> [0,3];
(3,[0]) -> [0];
(0,[2,1]) -> [];
(1,[3,3,3]) -> [3];
(2,[3,1,0]) -> [3,1];
(3,[3,3]) -> [3,3];
(0,[2,3,1]) -> [];
(0, []) -> [];

=================================
None
(2,[3]) -> [3];
(0,[3,2]) -> [];
(3,[3,2,0]) -> [3,2,0];
(2,[2,3,3]) -> [2,3];
(3,[2,0]) -> [2,0];
(3,[3]) -> [3];
(1,[1,2]) -> [1];
(2,[0,1,3]) -> [0,1];
(2,[0]) -> [0];
(1,[0,1]) -> [0];
(0, []) -> [];

=================================
None
(0,[0,1]) -> [];
(1,[1]) -> [1];
(2,[2,1]) -> [2,1];
(2,[3]) -> [3];
(3,[1,2]) -> [1,2];
(0,[2,0,2]) -> [];
(0,[2]) -> [];
(0,[2,3]) -> [];
(0,[0,1,2]) -> [];
(0,[1]) -> [];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

0.0771 false

(0,[2]) -> [];
(3,[0]) -> [0];
(1,[0]) -> [0];
(1,[2]) -> [2];
(2,[1,3]) -> [1,3];
(2,[1]) -> [1];
(2,[0,1,1]) -> [0,1];
(1,[0,0,3]) -> [0];
(0,[3]) -> [];
(1,[3,2,3]) -> [3];
(0, []) -> [];

=================================
None
(1,[2,3,2]) -> [2];
(3,[2,3]) -> [2,3];
(3,[2]) -> [2];
(1,[3,0]) -> [3];
(1,[2,3,0]) -> [2];
(0,[1,0,0]) -> [];
(2,[1]) -> [1];
(0,[3,0,1]) -> [];
(2,[3,1,3]) -> [3,1];
(2,[1,3,0]) -> [1,3];
(0, []) -> [];

=================================
STACKOVERFLOW

(0,[1,0]) -> [];
(1,[2]) -> [2];
(2,[1,3]) -> [1,3];
(3,[1,3]) -> [1,3];
(1,[1]) -> [1];
(2,[2]) -> [2];
(2,[3,0]) -> [3,0];
(3,[1]) -> [1];
(2,[0]) -> [0];
(0,[0,1]) -> [];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

0.9910 false

(1,[1]) -> [1];
(1,[0]) -> [0];
(1,[3,2,3]) -> [3];
(2,[2,0]) -> [2,0];
(3,[1,2]) -> [1,2];
(3,[2,1]) -> [2,1];
(2,[0]) -> [0];
(1,[2]) -> [2];
(2,[1]) -> [1];
(1,[3,0,2]) -> [3];
(0, []) -> [];

=================================
None
(2,[3,3,2]) -> [3,3];
(2,[1,1]) -> [1,1];
(0,[2]) -> [];
(2,[0]) -> [0];
(1,[3]) -> [3];
(0,[3,1]) -> [];
(2,[1,2,2]) -> [1,2];
(2,[0,0,0]) -> [0,0];
(0,[0]) -> [];
(3,[2,2,0]) -> [2,2,0];
(0, []) -> [];

=================================
None
