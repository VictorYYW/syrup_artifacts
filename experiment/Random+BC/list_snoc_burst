list_snoc
([1,1],1) -> [1,1,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, x . 0)

0.0479 false

([2,3],1) -> [2,3,1];
([], 0) -> [0];

=================================
None
([0,1],0) -> [0,1,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0930 true

([3,3,2],2) -> [3,3,2,2];
([], 0) -> [0];

=================================
None
([1],2) -> [1,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_S (x . 1), f (Un_Cons (x . 0) . 1, x . 1))

1.2167 false

([2],2) -> [2,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, x . 0)

0.0679 false

([0,3],1) -> [0,3,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

21.8390 true

([0,3,2],0) -> [0,3,2,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

1.7692 true

([1,0],3) -> [1,0,3];
([], 0) -> [0];

=================================
None
([1,3],1) -> [1,3,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (x . 1,
                         Cons (Un_Cons (Un_Cons (x . 0) . 1) . 0,
                                f (Nil, x . 1)))

100.1219 false

([3,2,0],3) -> [3,2,0,3];
([2],3) -> [2,3];
([], 0) -> [0];

=================================
None
([2,0,0],2) -> [2,0,0,2];
([0],2) -> [0,2];
([], 0) -> [0];

=================================
None
([3],3) -> [3,3];
([3,0,0],0) -> [3,0,0,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

2.9219 true

([1,0,1],0) -> [1,0,1,0];
([2,0,1],3) -> [2,0,1,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.6367 true

([1,3],3) -> [1,3,3];
([0],3) -> [0,3];
([], 0) -> [0];

=================================
None
([0,1],0) -> [0,1,0];
([3,0,2],0) -> [3,0,2,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0981 true

([0],2) -> [0,2];
([3,0],1) -> [3,0,1];
([], 0) -> [0];

=================================
None
([0],1) -> [0,1];
([3],3) -> [3,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

5.4685 true

([2,1],0) -> [2,1,0];
([2],0) -> [2,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1198 true

([1,0,3],0) -> [1,0,3,0];
([0],1) -> [0,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

1.5927 true

([3,3,3],0) -> [3,3,3,0];
([2,0,1],2) -> [2,0,1,2];
([0],3) -> [0,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

5.4527 true

([3],3) -> [3,3];
([1,0],0) -> [1,0,0];
([1,3,0],2) -> [1,3,0,2];
([], 0) -> [0];

=================================
None
([1],2) -> [1,2];
([3],2) -> [3,2];
([0,1],1) -> [0,1,1];
([], 0) -> [0];

=================================
None
([0],2) -> [0,2];
([1,0],2) -> [1,0,2];
([3],3) -> [3,3];
([], 0) -> [0];

=================================
None
([2,3],1) -> [2,3,1];
([1],2) -> [1,2];
([1,2],0) -> [1,2,0];
([], 0) -> [0];

=================================
None
([0,0],1) -> [0,0,1];
([1,0,1],1) -> [1,0,1,1];
([2,3,1],3) -> [2,3,1,3];
([], 0) -> [0];

=================================
None
([0],2) -> [0,2];
([1,0],3) -> [1,0,3];
([0],1) -> [0,1];
([], 0) -> [0];

=================================
None
([1,3],0) -> [1,3,0];
([3,0],1) -> [3,0,1];
([1],1) -> [1,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1835 true

([3,1,3],3) -> [3,1,3,3];
([1],1) -> [1,1];
([2],0) -> [2,0];
([], 0) -> [0];

=================================
None
([2,1,3],3) -> [2,1,3,3];
([3],1) -> [3,1];
([0,0],1) -> [0,0,1];
([], 0) -> [0];

=================================
None
([3],0) -> [3,0];
([1,3],2) -> [1,3,2];
([2],1) -> [2,1];
([2,3],1) -> [2,3,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.9387 true

([2,3],2) -> [2,3,2];
([2,1,2],2) -> [2,1,2,2];
([2,0,3],2) -> [2,0,3,2];
([2],3) -> [2,3];
([], 0) -> [0];

=================================
None
([1,1],2) -> [1,1,2];
([0,3,0],1) -> [0,3,0,1];
([0],3) -> [0,3];
([0,1,1],3) -> [0,1,1,3];
([], 0) -> [0];

=================================
None
([2],2) -> [2,2];
([1],1) -> [1,1];
([3],0) -> [3,0];
([3,2],3) -> [3,2,3];
([], 0) -> [0];

=================================
None
([2,1],3) -> [2,1,3];
([0],3) -> [0,3];
([2],2) -> [2,2];
([2,0,1],3) -> [2,0,1,3];
([], 0) -> [0];

=================================
None
([0,1],1) -> [0,1,1];
([3],1) -> [3,1];
([1],1) -> [1,1];
([0,2],3) -> [0,2,3];
([], 0) -> [0];

=================================
None
([3,2],2) -> [3,2,2];
([0],0) -> [0,0];
([1,3,2],1) -> [1,3,2,1];
([2],3) -> [2,3];
([], 0) -> [0];

=================================
None
([0,1,1],1) -> [0,1,1,1];
([3],2) -> [3,2];
([2,2,3],2) -> [2,2,3,2];
([2,0],3) -> [2,0,3];
([], 0) -> [0];

=================================
None
([0,0],1) -> [0,0,1];
([0,3,2],0) -> [0,3,2,0];
([1,0,1],1) -> [1,0,1,1];
([1,3,0],3) -> [1,3,0,3];
([], 0) -> [0];

=================================
None
([2,1],3) -> [2,1,3];
([3],3) -> [3,3];
([2],2) -> [2,2];
([3],0) -> [3,0];
([], 0) -> [0];

=================================
None
([0,2],2) -> [0,2,2];
([2,1],0) -> [2,1,0];
([0,0,1],1) -> [0,0,1,1];
([1,1],2) -> [1,1,2];
([3],0) -> [3,0];
([], 0) -> [0];

=================================
None
([2,1],0) -> [2,1,0];
([2,1,2],3) -> [2,1,2,3];
([3],2) -> [3,2];
([3],3) -> [3,3];
([2,0],2) -> [2,0,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1146 true

([1],1) -> [1,1];
([0,1,3],1) -> [0,1,3,1];
([2],2) -> [2,2];
([3,2,1],0) -> [3,2,1,0];
([2,2],2) -> [2,2,2];
([], 0) -> [0];

=================================
None
([3,3,3],0) -> [3,3,3,0];
([0,0,2],0) -> [0,0,2,0];
([0,0,0],1) -> [0,0,0,1];
([3],2) -> [3,2];
([3],1) -> [3,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

5.2316 true

([0,1,0],0) -> [0,1,0,0];
([0,2,2],1) -> [0,2,2,1];
([0,3,0],3) -> [0,3,0,3];
([1,2],0) -> [1,2,0];
([2],1) -> [2,1];
([], 0) -> [0];

=================================
None
([3,3,3],1) -> [3,3,3,1];
([0,2,1],2) -> [0,2,1,2];
([2,1],1) -> [2,1,1];
([0,2,0],1) -> [0,2,0,1];
([1],3) -> [1,3];
([], 0) -> [0];

=================================
None
([3,0],0) -> [3,0,0];
([2,3],2) -> [2,3,2];
([3,1,1],3) -> [3,1,1,3];
([2],1) -> [2,1];
([1,3],3) -> [1,3,3];
([], 0) -> [0];

=================================
None
([3],2) -> [3,2];
([1],1) -> [1,1];
([2,1],3) -> [2,1,3];
([0,0,1],0) -> [0,0,1,0];
([1,2],0) -> [1,2,0];
([], 0) -> [0];

=================================
None
([2],1) -> [2,1];
([0],2) -> [0,2];
([1,0,3],2) -> [1,0,3,2];
([1],2) -> [1,2];
([3],1) -> [3,1];
([], 0) -> [0];

=================================
None
([1],3) -> [1,3];
([3,3,1],2) -> [3,3,1,2];
([1,2],1) -> [1,2,1];
([3,1],3) -> [3,1,3];
([0,1],1) -> [0,1,1];
([], 0) -> [0];

=================================
None
([3,2],1) -> [3,2,1];
([0],1) -> [0,1];
([1,3],3) -> [1,3,3];
([3],3) -> [3,3];
([3,0,3],2) -> [3,0,3,2];
([3,3],2) -> [3,3,2];
([], 0) -> [0];

=================================
None
([3,3],1) -> [3,3,1];
([0,2],3) -> [0,2,3];
([2],1) -> [2,1];
([3,3,0],3) -> [3,3,0,3];
([0],3) -> [0,3];
([3],2) -> [3,2];
([], 0) -> [0];

=================================
None
([1],2) -> [1,2];
([1,0,0],3) -> [1,0,0,3];
([0,0,3],2) -> [0,0,3,2];
([3,1],2) -> [3,1,2];
([2,2,1],2) -> [2,2,1,2];
([0],0) -> [0,0];
([], 0) -> [0];

=================================
None
([3,3],1) -> [3,3,1];
([3,3,1],2) -> [3,3,1,2];
([2],0) -> [2,0];
([1],2) -> [1,2];
([0],2) -> [0,2];
([1,3],3) -> [1,3,3];
([], 0) -> [0];

=================================
None
([0,1],3) -> [0,1,3];
([0],3) -> [0,3];
([0],2) -> [0,2];
([3],2) -> [3,2];
([0,1],0) -> [0,1,0];
([0,0],1) -> [0,0,1];
([], 0) -> [0];

=================================
None
([0,3],0) -> [0,3,0];
([1,0,0],3) -> [1,0,0,3];
([2],3) -> [2,3];
([2,0],2) -> [2,0,2];
([1],0) -> [1,0];
([0],1) -> [0,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1508 true

([0,3,3],3) -> [0,3,3,3];
([3,1],3) -> [3,1,3];
([2],0) -> [2,0];
([1,1],1) -> [1,1,1];
([2],1) -> [2,1];
([1],3) -> [1,3];
([], 0) -> [0];

=================================
None
([3,2],3) -> [3,2,3];
([2],2) -> [2,2];
([3,1],2) -> [3,1,2];
([1],1) -> [1,1];
([2],3) -> [2,3];
([1],0) -> [1,0];
([], 0) -> [0];

=================================
None
([0,0],0) -> [0,0,0];
([3,0,1],2) -> [3,0,1,2];
([3,0],1) -> [3,0,1];
([1,2],1) -> [1,2,1];
([2],3) -> [2,3];
([0],2) -> [0,2];
([], 0) -> [0];

=================================
None
([1],0) -> [1,0];
([1],3) -> [1,3];
([3],2) -> [3,2];
([1,0],2) -> [1,0,2];
([1,1],2) -> [1,1,2];
([3,0,2],0) -> [3,0,2,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.4984 true

([0],1) -> [0,1];
([1,2],1) -> [1,2,1];
([3],3) -> [3,3];
([0,0,2],1) -> [0,0,2,1];
([0],3) -> [0,3];
([2,3],2) -> [2,3,2];
([1,0,3],3) -> [1,0,3,3];
([], 0) -> [0];

=================================
None
([0],3) -> [0,3];
([0,2],0) -> [0,2,0];
([0,1,2],0) -> [0,1,2,0];
([0,0,1],2) -> [0,0,1,2];
([0,0],1) -> [0,0,1];
([2,2,1],2) -> [2,2,1,2];
([3,3],2) -> [3,3,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

10.4602 true

([0,0],0) -> [0,0,0];
([1],1) -> [1,1];
([0,0,3],0) -> [0,0,3,0];
([2],3) -> [2,3];
([1,1,2],1) -> [1,1,2,1];
([1],2) -> [1,2];
([3,0,3],1) -> [3,0,3,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

3.5331 true

([2,0],2) -> [2,0,2];
([1],2) -> [1,2];
([2],2) -> [2,2];
([0],0) -> [0,0];
([2,0,2],0) -> [2,0,2,0];
([0,1],2) -> [0,1,2];
([2,1],0) -> [2,1,0];
([], 0) -> [0];

=================================
None
([1],1) -> [1,1];
([0],0) -> [0,0];
([3,3,2],1) -> [3,3,2,1];
([2],2) -> [2,2];
([0],3) -> [0,3];
([1,3],3) -> [1,3,3];
([3],1) -> [3,1];
([], 0) -> [0];

=================================
None
([2,1],0) -> [2,1,0];
([3],1) -> [3,1];
([0],1) -> [0,1];
([0,1,1],0) -> [0,1,1,0];
([1,0],2) -> [1,0,2];
([3,1,3],1) -> [3,1,3,1];
([0,0],0) -> [0,0,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1170 true

([0],3) -> [0,3];
([0],1) -> [0,1];
([1,2],2) -> [1,2,2];
([3,3,3],1) -> [3,3,3,1];
([1],0) -> [1,0];
([3],1) -> [3,1];
([3,0,0],2) -> [3,0,0,2];
([], 0) -> [0];

=================================
None
([1,0,3],2) -> [1,0,3,2];
([1,1],3) -> [1,1,3];
([2,0,3],3) -> [2,0,3,3];
([3,0,1],0) -> [3,0,1,0];
([2,0],3) -> [2,0,3];
([0,3],0) -> [0,3,0];
([3],3) -> [3,3];
([], 0) -> [0];

=================================
None
([0,1],2) -> [0,1,2];
([1],3) -> [1,3];
([1],2) -> [1,2];
([0],0) -> [0,0];
([0,3,0],3) -> [0,3,0,3];
([3,1],3) -> [3,1,3];
([0,1,0],1) -> [0,1,0,1];
([], 0) -> [0];

=================================
None
([2,1,0],3) -> [2,1,0,3];
([3,1],3) -> [3,1,3];
([0,0,2],1) -> [0,0,2,1];
([1],2) -> [1,2];
([3,2],1) -> [3,2,1];
([3,3,1],3) -> [3,3,1,3];
([3,0],3) -> [3,0,3];
([], 0) -> [0];

=================================
None
([3],2) -> [3,2];
([0,1,0],2) -> [0,1,0,2];
([2,0,1],3) -> [2,0,1,3];
([2,0],2) -> [2,0,2];
([1,1],0) -> [1,1,0];
([1,0],1) -> [1,0,1];
([2,1],0) -> [2,1,0];
([2,3,0],2) -> [2,3,0,2];
([], 0) -> [0];

=================================
None
([0,2,1],2) -> [0,2,1,2];
([0,0,2],1) -> [0,0,2,1];
([1,0],2) -> [1,0,2];
([1],1) -> [1,1];
([2,0,3],1) -> [2,0,3,1];
([2,3],3) -> [2,3,3];
([3],0) -> [3,0];
([2,1,2],2) -> [2,1,2,2];
([], 0) -> [0];

=================================
None
([3,2,3],3) -> [3,2,3,3];
([1,2],2) -> [1,2,2];
([1,0,2],2) -> [1,0,2,2];
([2,2],3) -> [2,2,3];
([1,3],2) -> [1,3,2];
([0],1) -> [0,1];
([2],2) -> [2,2];
([1,0,3],2) -> [1,0,3,2];
([], 0) -> [0];

=================================
None
([2,1],2) -> [2,1,2];
([3],0) -> [3,0];
([0,3],0) -> [0,3,0];
([3,3,0],1) -> [3,3,0,1];
([2,3],2) -> [2,3,2];
([0,1,1],0) -> [0,1,1,0];
([0,3,3],3) -> [0,3,3,3];
([1,3,0],1) -> [1,3,0,1];
([], 0) -> [0];

=================================
None
([2,1,1],2) -> [2,1,1,2];
([3,1,2],1) -> [3,1,2,1];
([3,0],0) -> [3,0,0];
([0,2],3) -> [0,2,3];
([1,0,0],3) -> [1,0,0,3];
([2,1],2) -> [2,1,2];
([2],0) -> [2,0];
([3,2,0],3) -> [3,2,0,3];
([], 0) -> [0];

=================================
None
([3,1,2],1) -> [3,1,2,1];
([1,2],0) -> [1,2,0];
([0],2) -> [0,2];
([1,1,1],2) -> [1,1,1,2];
([2],2) -> [2,2];
([3,1],2) -> [3,1,2];
([0],3) -> [0,3];
([0,2,0],3) -> [0,2,0,3];
([], 0) -> [0];

=================================
None
([0,0],2) -> [0,0,2];
([2],2) -> [2,2];
([1],3) -> [1,3];
([0,1],0) -> [0,1,0];
([3],2) -> [3,2];
([3,3],1) -> [3,3,1];
([2,2],1) -> [2,2,1];
([1],0) -> [1,0];
([], 0) -> [0];

=================================
None
([0],0) -> [0,0];
([3,1,1],0) -> [3,1,1,0];
([1,3,2],2) -> [1,3,2,2];
([2,0,1],1) -> [2,0,1,1];
([3,0,3],0) -> [3,0,3,0];
([0,1],0) -> [0,1,0];
([2],3) -> [2,3];
([3,3,0],0) -> [3,3,0,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.9975 true

([1,1,3],0) -> [1,1,3,0];
([0,1,3],2) -> [0,1,3,2];
([3,0,1],1) -> [3,0,1,1];
([3,3,0],1) -> [3,3,0,1];
([0,0],2) -> [0,0,2];
([3],0) -> [3,0];
([2,3,0],2) -> [2,3,0,2];
([2,0],3) -> [2,0,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.9106 true

([3],0) -> [3,0];
([2,2],0) -> [2,2,0];
([3,0],3) -> [3,0,3];
([2],1) -> [2,1];
([3,0],2) -> [3,0,2];
([3,2,3],3) -> [3,2,3,3];
([0],3) -> [0,3];
([1,0,1],3) -> [1,0,1,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0887 true

([2],0) -> [2,0];
([3,0],0) -> [3,0,0];
([1,1,1],3) -> [1,1,1,3];
([2,2,3],2) -> [2,2,3,2];
([3,0],1) -> [3,0,1];
([2],3) -> [2,3];
([2,2],3) -> [2,2,3];
([1],2) -> [1,2];
([1,3],2) -> [1,3,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

40.0700 true

([1,2],3) -> [1,2,3];
([3,3,2],2) -> [3,3,2,2];
([3,2,3],1) -> [3,2,3,1];
([2],0) -> [2,0];
([0,0],3) -> [0,0,3];
([0],3) -> [0,3];
([0,2,3],3) -> [0,2,3,3];
([2,0],0) -> [2,0,0];
([1,2],2) -> [1,2,2];
([], 0) -> [0];

=================================
None
([0],3) -> [0,3];
([0],1) -> [0,1];
([3,3],2) -> [3,3,2];
([1,0],3) -> [1,0,3];
([2,1],1) -> [2,1,1];
([0,0],3) -> [0,0,3];
([0],0) -> [0,0];
([2,2],0) -> [2,2,0];
([3],1) -> [3,1];
([], 0) -> [0];

=================================
None
([0,0,3],1) -> [0,0,3,1];
([2,0,0],2) -> [2,0,0,2];
([2,1,3],1) -> [2,1,3,1];
([0],3) -> [0,3];
([3,1,1],3) -> [3,1,1,3];
([3,0,1],1) -> [3,0,1,1];
([2,1,3],0) -> [2,1,3,0];
([0,1],2) -> [0,1,2];
([2,0],0) -> [2,0,0];
([], 0) -> [0];

=================================
None
([0,0,2],3) -> [0,0,2,3];
([0,2],1) -> [0,2,1];
([3],2) -> [3,2];
([2],1) -> [2,1];
([0],1) -> [0,1];
([1],2) -> [1,2];
([2,3],0) -> [2,3,0];
([0],2) -> [0,2];
([3,2,3],2) -> [3,2,3,2];
([], 0) -> [0];

=================================
None
([1,0],0) -> [1,0,0];
([1],1) -> [1,1];
([3],2) -> [3,2];
([2,3],1) -> [2,3,1];
([1],0) -> [1,0];
([0,0],0) -> [0,0,0];
([2,1],2) -> [2,1,2];
([0,0],3) -> [0,0,3];
([3],1) -> [3,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

12.8216 true

([2,1,0],2) -> [2,1,0,2];
([3],1) -> [3,1];
([2,3,0],1) -> [2,3,0,1];
([3,3],0) -> [3,3,0];
([3,3,3],2) -> [3,3,3,2];
([1,1],2) -> [1,1,2];
([3,0,3],0) -> [3,0,3,0];
([2,1],2) -> [2,1,2];
([0],2) -> [0,2];
([], 0) -> [0];

=================================
None
([3,2,1],2) -> [3,2,1,2];
([0],3) -> [0,3];
([0,0],3) -> [0,0,3];
([3],0) -> [3,0];
([1],0) -> [1,0];
([2,2,1],1) -> [2,2,1,1];
([2,1],1) -> [2,1,1];
([3,1,0],2) -> [3,1,0,2];
([0,3],3) -> [0,3,3];
([], 0) -> [0];

=================================
None
([2,2,1],1) -> [2,2,1,1];
([0,3,1],2) -> [0,3,1,2];
([3,2],2) -> [3,2,2];
([2],3) -> [2,3];
([3,1],2) -> [3,1,2];
([2,2],0) -> [2,2,0];
([3,0,2],1) -> [3,0,2,1];
([2],1) -> [2,1];
([1,3],0) -> [1,3,0];
([], 0) -> [0];

=================================
None
([3],1) -> [3,1];
([1],0) -> [1,0];
([1,0,3],1) -> [1,0,3,1];
([1,2,1],0) -> [1,2,1,0];
([1,3],3) -> [1,3,3];
([0,2],1) -> [0,2,1];
([3,0],1) -> [3,0,1];
([2],2) -> [2,2];
([3],0) -> [3,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

69.3698 true

([0,0,0],0) -> [0,0,0,0];
([0],0) -> [0,0];
([1,2,1],3) -> [1,2,1,3];
([0],1) -> [0,1];
([2,1],0) -> [2,1,0];
([1],2) -> [1,2];
([3,2],1) -> [3,2,1];
([3,3],2) -> [3,3,2];
([0],2) -> [0,2];
([0,1,2],0) -> [0,1,2,0];
([], 0) -> [0];

=================================
None
([3,1],2) -> [3,1,2];
([3,3],0) -> [3,3,0];
([2,2,2],2) -> [2,2,2,2];
([2,2],3) -> [2,2,3];
([3,3],2) -> [3,3,2];
([0],3) -> [0,3];
([1,2],1) -> [1,2,1];
([1],1) -> [1,1];
([3,2,0],0) -> [3,2,0,0];
([1],0) -> [1,0];
([], 0) -> [0];

=================================
None
([1,3,0],3) -> [1,3,0,3];
([0,1,2],2) -> [0,1,2,2];
([3,2],1) -> [3,2,1];
([0],3) -> [0,3];
([3],1) -> [3,1];
([1],0) -> [1,0];
([2,1,1],2) -> [2,1,1,2];
([1,3],3) -> [1,3,3];
([2],0) -> [2,0];
([2,0,0],1) -> [2,0,0,1];
([], 0) -> [0];

=================================
None
([1],3) -> [1,3];
([0,2],1) -> [0,2,1];
([0,1,2],1) -> [0,1,2,1];
([3,0,2],1) -> [3,0,2,1];
([2,3],1) -> [2,3,1];
([3,0,1],1) -> [3,0,1,1];
([0,3],1) -> [0,3,1];
([3,3,0],1) -> [3,3,0,1];
([3],3) -> [3,3];
([3,0,1],2) -> [3,0,1,2];
([], 0) -> [0];

=================================
None
([1,3],3) -> [1,3,3];
([1,1,3],3) -> [1,1,3,3];
([0,1,1],0) -> [0,1,1,0];
([2],0) -> [2,0];
([1,1],1) -> [1,1,1];
([2,0,3],1) -> [2,0,3,1];
([3,1,3],0) -> [3,1,3,0];
([3,3],0) -> [3,3,0];
([1],1) -> [1,1];
([2],2) -> [2,2];
([], 0) -> [0];

=================================
None
([2,2,1],3) -> [2,2,1,3];
([3],0) -> [3,0];
([3,3,3],2) -> [3,3,3,2];
([2],3) -> [2,3];
([2,2],0) -> [2,2,0];
([2,1,3],0) -> [2,1,3,0];
([1,1,2],3) -> [1,1,2,3];
([0,1,2],3) -> [0,1,2,3];
([3,0,2],1) -> [3,0,2,1];
([3,3,3],0) -> [3,3,3,0];
([], 0) -> [0];

=================================
None
([3],3) -> [3,3];
([0],0) -> [0,0];
([0,1,2],3) -> [0,1,2,3];
([0,2,3],1) -> [0,2,3,1];
([3,2,1],0) -> [3,2,1,0];
([2],3) -> [2,3];
([2],0) -> [2,0];
([1],0) -> [1,0];
([0,0],3) -> [0,0,3];
([0,1,3],2) -> [0,1,3,2];
([], 0) -> [0];

=================================
None
([1,3,2],3) -> [1,3,2,3];
([3,2,3],0) -> [3,2,3,0];
([3,2,1],3) -> [3,2,1,3];
([2,1,3],2) -> [2,1,3,2];
([0,3],3) -> [0,3,3];
([2],0) -> [2,0];
([2,2,1],3) -> [2,2,1,3];
([1],3) -> [1,3];
([3,3],3) -> [3,3,3];
([0,0,3],1) -> [0,0,3,1];
([], 0) -> [0];

=================================
None
([3],3) -> [3,3];
([0,3,1],0) -> [0,3,1,0];
([1,2],3) -> [1,2,3];
([3,3],2) -> [3,3,2];
([0,1,2],3) -> [0,1,2,3];
([1],1) -> [1,1];
([0],3) -> [0,3];
([1,2,0],1) -> [1,2,0,1];
([2],0) -> [2,0];
([3],0) -> [3,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

6.2864 true

([3],1) -> [3,1];
([1],1) -> [1,1];
([2],2) -> [2,2];
([3],0) -> [3,0];
([1,0],3) -> [1,0,3];
([2,3],0) -> [2,3,0];
([3,0],2) -> [3,0,2];
([1,2,2],0) -> [1,2,2,0];
([3,3],0) -> [3,3,0];
([3,3],3) -> [3,3,3];
([], 0) -> [0];

=================================
None
