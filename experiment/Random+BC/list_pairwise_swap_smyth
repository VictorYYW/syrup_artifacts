list_pairwise_swap
[3,1] -> [1,3];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      [1, #2.1 y1] in list_pairwise_swap) : NatList -> NatList)
0.00307999999995 false false

[0,2,2] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_pairwise_swap = \xs -> [] in list_pairwise_swap) : NatList -> NatList)
0.00159800000006 false false

[0,1] -> [1,0];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      [1, 0] in list_pairwise_swap) : NatList -> NatList)
0.00315399999999 false false

[3,1,0] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_pairwise_swap = \xs -> [] in list_pairwise_swap) : NatList -> NatList)
0.00168499999995 false false

[1,1] -> [1,1];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_pairwise_swap = \xs -> xs in list_pairwise_swap) : NatList -> NatList)
0.001665 false false

[1,1,0] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_pairwise_swap = \xs -> [] in list_pairwise_swap) : NatList -> NatList)
0.00174900000002 false false

[3,1,0] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_pairwise_swap = \xs -> [] in list_pairwise_swap) : NatList -> NatList)
0.00168600000006 false false

[0,2] -> [2,0];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      [2, 0] in list_pairwise_swap) : NatList -> NatList)
0.00332400000002 false false

[3] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_pairwise_swap = \xs -> [] in list_pairwise_swap) : NatList -> NatList)
0.00165900000002 false false

[3,2,0] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_pairwise_swap = \xs -> [] in list_pairwise_swap) : NatList -> NatList)
0.00165199999992 false false

[0] -> [];
[3,2] -> [2,3];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          [#2.1 y2, #2.1 y1] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          Cons
            ( #2.1 y2
            , Cons
                ( #2.1 y1
                , list_pairwise_swap (#2.2 y1)
                )
            ) in list_pairwise_swap) : NatList -> NatList)
0.00794500000006 false false

[3] -> [];
[1,0,2] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_pairwise_swap = \xs -> [] in list_pairwise_swap) : NatList -> NatList)
0.00164399999994 false false

[3] -> [];
[2,2,1] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_pairwise_swap = \xs -> [] in list_pairwise_swap) : NatList -> NatList)
0.00169600000004 false false

[1] -> [];
[3,2,2] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_pairwise_swap = \xs -> [] in list_pairwise_swap) : NatList -> NatList)
0.00171599999999 false false

[1,3,1] -> [];
[1] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_pairwise_swap = \xs -> [] in list_pairwise_swap) : NatList -> NatList)
0.00171099999989 false false

[3] -> [];
[2,2] -> [2,2];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          Cons (#2.1 y1, #2.2 y1) in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          Cons
            ( #2.1 y1
            , Cons
                ( #2.1 y1
                , list_pairwise_swap (#2.2 y1)
                )
            ) in list_pairwise_swap) : NatList -> NatList)
0.00783499999989 false false

[0] -> [];
[3] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_pairwise_swap = \xs -> [] in list_pairwise_swap) : NatList -> NatList)
0.00160699999992 false false

[2,2,3] -> [];
[0] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_pairwise_swap = \xs -> [] in list_pairwise_swap) : NatList -> NatList)
0.00161299999991 false false

[2,2,1] -> [];
[0] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_pairwise_swap = \xs -> [] in list_pairwise_swap) : NatList -> NatList)
0.00163700000007 false false

[1] -> [];
[1,1] -> [1,1];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          Cons (#2.1 y1, #2.2 y1) in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          Cons
            ( #2.1 y1
            , Cons
                ( #2.1 y1
                , list_pairwise_swap (#2.2 y1)
                )
            ) in list_pairwise_swap) : NatList -> NatList)
0.00711799999999 false false

[1,0,2] -> [];
[3,2] -> [2,3];
[0] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.0180190000001 false false

[2,3] -> [3,2];
[1,2] -> [2,1];
[2,1,1] -> [];
[] -> [];

=================================
NOSOL

[0] -> [];
[2,3,2] -> [];
[3] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_pairwise_swap = \xs -> [] in list_pairwise_swap) : NatList -> NatList)
0.00165399999992 false false

[1] -> [];
[0,0,1] -> [];
[2] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_pairwise_swap = \xs -> [] in list_pairwise_swap) : NatList -> NatList)
0.00163599999996 false false

[1,2,3] -> [];
[1] -> [];
[0,1] -> [1,0];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.1 y1 of
        Z y2 -> 
          [1, 0]

        S y2 -> 
          [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.1 y1 of
        Z y2 -> 
          Cons
            ( 1
            , Cons (0, list_pairwise_swap (#2.2 y1))
            )

        S y2 -> 
          [] in list_pairwise_swap) : NatList -> NatList)
0.00803100000007 false false

[3,1,3] -> [];
[2,2] -> [2,2];
[2,2,3] -> [];
[] -> [];

=================================
NOSOL

[0,1,1] -> [];
[2,3,0] -> [];
[2,2] -> [2,2];
[] -> [];

=================================
NOSOL

[2,0,0] -> [];
[1] -> [];
[3,0,2] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_pairwise_swap = \xs -> [] in list_pairwise_swap) : NatList -> NatList)
0.00160499999993 false false

[2,3,1] -> [];
[2] -> [];
[1] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_pairwise_swap = \xs -> [] in list_pairwise_swap) : NatList -> NatList)
0.001622 false false

[0,1] -> [1,0];
[2,3] -> [3,2];
[0,1,0] -> [];
[] -> [];

=================================
NOSOL

[3,2,3] -> [];
[1,0] -> [0,1];
[0] -> [];
[2] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [0, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( 0
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.0187289999999 false false

[0,0] -> [0,0];
[1,0,2] -> [];
[3,1] -> [1,3];
[2,1] -> [1,2];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.1 y1 of
        Z y2 -> 
          Cons (0, #2.2 y1)

        S y2 -> 
          case y2 of
            Z y3 -> 
              []

            S y3 -> 
              [1, #2.1 y1] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.1 y1 of
        Z y2 -> 
          Cons (0, #2.2 y1)

        S y2 -> 
          case y2 of
            Z y3 -> 
              []

            S y3 -> 
              Cons
                ( 1
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                ) in list_pairwise_swap) : NatList -> NatList)
0.0219689999999 false false

[0] -> [];
[2,1,2] -> [];
[3,2,1] -> [];
[0,3,0] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_pairwise_swap = \xs -> [] in list_pairwise_swap) : NatList -> NatList)
0.00165300000003 false false

[0] -> [];
[3] -> [];
[2,1] -> [1,2];
[0,0,3] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.018579 false false

[2,1,3] -> [];
[3,2,1] -> [];
[2,0] -> [0,2];
[2,1] -> [1,2];
[] -> [];

=================================
NOSOL

[1,3,1] -> [];
[0,0,1] -> [];
[0] -> [];
[2,2] -> [2,2];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              xs

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y1
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.018941 false false

[3,3] -> [3,3];
[1] -> [];
[3] -> [];
[3,1] -> [1,3];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          [#2.1 y2, #2.1 y1] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          Cons
            ( #2.1 y2
            , Cons
                ( #2.1 y1
                , list_pairwise_swap (#2.2 y1)
                )
            ) in list_pairwise_swap) : NatList -> NatList)
0.00907499999994 false false

[0] -> [];
[3,3,0] -> [];
[3] -> [];
[0,1] -> [1,0];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, 0]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons (0, list_pairwise_swap (#2.2 y1))
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.019078 false false

[3,3] -> [3,3];
[3,1] -> [1,3];
[3,1,3] -> [];
[0,3] -> [3,0];
[] -> [];

=================================
NOSOL

[3,0] -> [0,3];
[0,2,1] -> [];
[2,2] -> [2,2];
[3] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.0220810000001 false false

[3] -> [];
[1] -> [];
[1,2,2] -> [];
[1,3,1] -> [];
[2] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_pairwise_swap = \xs -> [] in list_pairwise_swap) : NatList -> NatList)
0.00169000000005 false false

[1,0,3] -> [];
[1,3,1] -> [];
[0,0,3] -> [];
[0,1,3] -> [];
[1,1] -> [1,1];
[] -> [];

=================================
NOSOL

[1] -> [];
[3,2,2] -> [];
[3] -> [];
[3,0] -> [0,3];
[1,3,3] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [0, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( 0
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.0182130000001 false false

[0] -> [];
[1,1] -> [1,1];
[2,2,3] -> [];
[3,0] -> [0,3];
[2,0,2] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.024954 false false

[2] -> [];
[1,2,2] -> [];
[1,2,3] -> [];
[1] -> [];
[0,3,3] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_pairwise_swap = \xs -> [] in list_pairwise_swap) : NatList -> NatList)
0.001667 false false

[2,1] -> [1,2];
[1,3] -> [3,1];
[1,2,0] -> [];
[0] -> [];
[2,3,3] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.0250450000001 false false

[2,3,1] -> [];
[1,3,3] -> [];
[1] -> [];
[0,2] -> [2,0];
[2,1] -> [1,2];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.0237850000001 false false

[2,3,0] -> [];
[1,3] -> [3,1];
[3,3,2] -> [];
[2,0,3] -> [];
[1,1] -> [1,1];
[] -> [];

=================================
NOSOL

[3,1,0] -> [];
[0,1] -> [1,0];
[1,1] -> [1,1];
[2,1,0] -> [];
[0,2,3] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.1 y1 of
        Z y2 -> 
          case list_pairwise_swap (#2.2 y1) of
            Nil y3 -> 
              []

            Cons y3 -> 
              [1, 0]

        S y2 -> 
          case y2 of
            Z y3 -> 
              Cons (1, #2.2 y1)

            S y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.1 y1 of
        Z y2 -> 
          case list_pairwise_swap (#2.2 y1) of
            Nil y3 -> 
              []

            Cons y3 -> 
              [1, 0]

        S y2 -> 
          case y2 of
            Z y3 -> 
              Cons (1, #2.2 y1)

            S y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.021154 false false

[2,1,0] -> [];
[3] -> [];
[1,1,3] -> [];
[0] -> [];
[2,0] -> [0,2];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [0, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( 0
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.0216700000001 false false

[3,3] -> [3,3];
[0] -> [];
[0,1,0] -> [];
[2,3,0] -> [];
[3] -> [];
[0,3,2] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons (#2.1 y1, #2.2 y1)

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y1
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.029145 false false

[3,1,0] -> [];
[3,1] -> [1,3];
[3] -> [];
[0,3,0] -> [];
[3,2] -> [2,3];
[2] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.0278820000001 false false

[3,3,3] -> [];
[1] -> [];
[0,3,2] -> [];
[2,0] -> [0,2];
[2] -> [];
[3,1,2] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [0, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( 0
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.026693 false false

[3,0] -> [0,3];
[1] -> [];
[3] -> [];
[3,0,3] -> [];
[2,0] -> [0,2];
[1,3] -> [3,1];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.025789 false false

[3] -> [];
[3,1,2] -> [];
[1] -> [];
[3,1] -> [1,3];
[2,3,3] -> [];
[2,3] -> [3,2];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.027957 false false

[3,0,0] -> [];
[1] -> [];
[2,3,1] -> [];
[2,0,1] -> [];
[0,1] -> [1,0];
[2] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.1 y1 of
        Z y2 -> 
          [1, 0]

        S y2 -> 
          [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.1 y1 of
        Z y2 -> 
          Cons
            ( 1
            , Cons (0, list_pairwise_swap (#2.2 y1))
            )

        S y2 -> 
          [] in list_pairwise_swap) : NatList -> NatList)
0.00730599999997 false false

[1] -> [];
[0] -> [];
[1,0,3] -> [];
[0,0,2] -> [];
[2] -> [];
[3,2] -> [2,3];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.0269209999999 false false

[0] -> [];
[3,2] -> [2,3];
[3,2,2] -> [];
[2,3] -> [3,2];
[1] -> [];
[3,3,3] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.033271 false false

[1] -> [];
[2,1,1] -> [];
[3,2] -> [2,3];
[2,1] -> [1,2];
[1,1] -> [1,1];
[3,3,1] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.0308170000001 false false

[3,2] -> [2,3];
[3,3] -> [3,3];
[0,2,1] -> [];
[1] -> [];
[2] -> [];
[1,0] -> [0,1];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.0288989999999 false false

[0,3] -> [3,0];
[3,0] -> [0,3];
[3,0,0] -> [];
[0,1] -> [1,0];
[1,3] -> [3,1];
[1,2,3] -> [];
[1,1,0] -> [];
[] -> [];

=================================
NOSOL

[3,1,2] -> [];
[1,2] -> [2,1];
[1,0,2] -> [];
[2] -> [];
[3,1] -> [1,3];
[0] -> [];
[2,2,0] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.044956 false false

[1] -> [];
[2,1] -> [1,2];
[0,1] -> [1,0];
[0] -> [];
[1,2,2] -> [];
[0,0] -> [0,0];
[3,3,2] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.0402650000001 false false

[2] -> [];
[0] -> [];
[1,0] -> [0,1];
[0,1,1] -> [];
[2,3] -> [3,2];
[3,1,2] -> [];
[2,2] -> [2,2];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.0533539999999 false false

[0] -> [];
[3] -> [];
[2,2,3] -> [];
[3,0,1] -> [];
[0,3] -> [3,0];
[1] -> [];
[2,3] -> [3,2];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.038726 false false

[2] -> [];
[3,1] -> [1,3];
[0,0,0] -> [];
[2,0,3] -> [];
[2,1] -> [1,2];
[1,3,2] -> [];
[1,0,0] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.052596 false false

[1,0,2] -> [];
[0,1,3] -> [];
[2] -> [];
[3] -> [];
[3,3,0] -> [];
[1,3,3] -> [];
[0,0] -> [0,0];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              xs

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( 0
                , Cons (0, list_pairwise_swap (#2.2 y1))
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.04251 false false

[3] -> [];
[1] -> [];
[0] -> [];
[1,0] -> [0,1];
[0,2] -> [2,0];
[1,3] -> [3,1];
[2,0] -> [0,2];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          [#2.1 y2, #2.1 y1] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          Cons
            ( #2.1 y2
            , Cons
                ( #2.1 y1
                , list_pairwise_swap (#2.2 y1)
                )
            ) in list_pairwise_swap) : NatList -> NatList)
0.00809800000002 false false

[2,0,3] -> [];
[3] -> [];
[2] -> [];
[0] -> [];
[0,3] -> [3,0];
[0,2,2] -> [];
[1,0] -> [0,1];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.038078 false false

[3,2,3] -> [];
[0,0,2] -> [];
[1,1,3] -> [];
[1,1,1] -> [];
[3] -> [];
[2,3] -> [3,2];
[1,3,1] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.0513619999999 false false

[1,2,0] -> [];
[3,0] -> [0,3];
[2,3,3] -> [];
[0] -> [];
[2,0] -> [0,2];
[2,2,2] -> [];
[3] -> [];
[1,3,0] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [0, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( 0
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.076417 false false

[3,0,3] -> [];
[1,3,0] -> [];
[1] -> [];
[2,2] -> [2,2];
[2,3,2] -> [];
[2,1,3] -> [];
[2] -> [];
[3,3] -> [3,3];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              xs

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y1
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.0713109999999 false false

[3,3] -> [3,3];
[0,3] -> [3,0];
[1,2,2] -> [];
[1] -> [];
[3,0,3] -> [];
[1,3] -> [3,1];
[2,2] -> [2,2];
[2,3] -> [3,2];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.0823399999999 false false

[1,2] -> [2,1];
[2,2,2] -> [];
[3] -> [];
[0] -> [];
[1,0,0] -> [];
[2] -> [];
[0,1,2] -> [];
[1,1,1] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.0646059999999 false false

[0] -> [];
[1] -> [];
[0,2] -> [2,0];
[0,3] -> [3,0];
[3,0] -> [0,3];
[2,0] -> [0,2];
[2,2,3] -> [];
[2,2,0] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.070172 false false

[2,0,0] -> [];
[1,3,3] -> [];
[1,1] -> [1,1];
[2,1,2] -> [];
[1,0,1] -> [];
[3,1] -> [1,3];
[2,1] -> [1,2];
[3,2] -> [2,3];
[] -> [];

=================================
NOSOL

[3] -> [];
[2,0] -> [0,2];
[1,1,3] -> [];
[2,2] -> [2,2];
[0,2,3] -> [];
[3,3] -> [3,3];
[2] -> [];
[2,3] -> [3,2];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.071567 false false

[0] -> [];
[1,0] -> [0,1];
[3] -> [];
[1,1,2] -> [];
[2,1] -> [1,2];
[0,1,3] -> [];
[1,3] -> [3,1];
[2,1,0] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.0718549999999 false false

[2,0] -> [0,2];
[1] -> [];
[3] -> [];
[0,1,2] -> [];
[1,0,3] -> [];
[0,0] -> [0,0];
[0,1,1] -> [];
[2,1] -> [1,2];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.0703719999999 false false

[3] -> [];
[1,1,1] -> [];
[3,3,0] -> [];
[1] -> [];
[0,1] -> [1,0];
[0,3] -> [3,0];
[3,0] -> [0,3];
[0,2] -> [2,0];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.068309 false false

[2] -> [];
[3] -> [];
[3,2,2] -> [];
[0,3,0] -> [];
[2,1] -> [1,2];
[0] -> [];
[1] -> [];
[3,2,3] -> [];
[3,3,3] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.11091 false false

[0,3,2] -> [];
[1,1,2] -> [];
[3,3,1] -> [];
[1,3] -> [3,1];
[2] -> [];
[2,3,3] -> [];
[3,3] -> [3,3];
[0] -> [];
[3,1,0] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.148146 false false

[0] -> [];
[3,0,2] -> [];
[2] -> [];
[2,3] -> [3,2];
[2,2] -> [2,2];
[1,2,0] -> [];
[3,1,0] -> [];
[2,0] -> [0,2];
[1,2] -> [2,1];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.136254 false false

[0,2] -> [2,0];
[1,0,3] -> [];
[0,1,1] -> [];
[3,3,0] -> [];
[2,3,1] -> [];
[1] -> [];
[3] -> [];
[3,1] -> [1,3];
[3,2] -> [2,3];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.140746 false false

[3,1] -> [1,3];
[0] -> [];
[2,1,0] -> [];
[3,0] -> [0,3];
[2,2,3] -> [];
[1,0,2] -> [];
[1] -> [];
[3] -> [];
[2,1] -> [1,2];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.122762 false false

[3] -> [];
[2] -> [];
[1,3] -> [3,1];
[0,2,3] -> [];
[3,1] -> [1,3];
[3,2,1] -> [];
[2,0] -> [0,2];
[0,0,0] -> [];
[0,1,1] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.145598 false false

[0,3] -> [3,0];
[2,0] -> [0,2];
[3,1] -> [1,3];
[3,3] -> [3,3];
[0,1] -> [1,0];
[3,0,1] -> [];
[2,2,3] -> [];
[1,3,2] -> [];
[3,2] -> [2,3];
[] -> [];

=================================
NOSOL

[2] -> [];
[1,0,2] -> [];
[0] -> [];
[3,0,0] -> [];
[2,0] -> [0,2];
[1,3,3] -> [];
[1] -> [];
[0,3] -> [3,0];
[3,1,1] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.122039 false false

[0,0,1] -> [];
[0,2] -> [2,0];
[0,0] -> [0,0];
[2] -> [];
[0] -> [];
[1,0] -> [0,1];
[0,1,2] -> [];
[3] -> [];
[0,3,1] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.119047 false false

[2,0] -> [0,2];
[2] -> [];
[1,2,1] -> [];
[2,0,2] -> [];
[1] -> [];
[0,1,1] -> [];
[2,1,0] -> [];
[0] -> [];
[3] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [0, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( 0
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.107374 false false

[1] -> [];
[1,3,1] -> [];
[3,1] -> [1,3];
[0,0] -> [0,0];
[1,3] -> [3,1];
[3] -> [];
[1,1] -> [1,1];
[2] -> [];
[0,2] -> [2,0];
[2,0] -> [0,2];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.230006 false false

[1] -> [];
[0] -> [];
[2,1,0] -> [];
[3,1,1] -> [];
[3,1,2] -> [];
[1,1,3] -> [];
[1,3] -> [3,1];
[3] -> [];
[0,1] -> [1,0];
[2] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.229292 false false

[0,1] -> [1,0];
[2,1] -> [1,2];
[0] -> [];
[1] -> [];
[1,0,3] -> [];
[3] -> [];
[1,2] -> [2,1];
[2] -> [];
[2,2,3] -> [];
[0,3,2] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.233105 false false

[3,1,1] -> [];
[0,3] -> [3,0];
[2,0,1] -> [];
[1,2,3] -> [];
[0,1] -> [1,0];
[1,3,3] -> [];
[0] -> [];
[1] -> [];
[2] -> [];
[0,1,2] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, 0]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons (0, list_pairwise_swap (#2.2 y1))
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.269698 false false

[3] -> [];
[2,2,0] -> [];
[2,0] -> [0,2];
[1,1] -> [1,1];
[3,0,3] -> [];
[1] -> [];
[0] -> [];
[0,2,0] -> [];
[0,0,2] -> [];
[2,3,1] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.277332 false false

[1] -> [];
[2,2,1] -> [];
[3] -> [];
[2] -> [];
[0,1,3] -> [];
[1,3,0] -> [];
[1,3] -> [3,1];
[1,0,0] -> [];
[3,1,0] -> [];
[0] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.239228 false false

[2] -> [];
[3] -> [];
[3,2,3] -> [];
[3,3,2] -> [];
[0] -> [];
[3,1,2] -> [];
[2,3] -> [3,2];
[2,1,0] -> [];
[0,1] -> [1,0];
[1,2] -> [2,1];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.254609 false false

[3] -> [];
[2,3,1] -> [];
[2,2] -> [2,2];
[2] -> [];
[3,0] -> [0,3];
[0] -> [];
[2,1,2] -> [];
[1] -> [];
[1,3] -> [3,1];
[0,3,2] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.231487 false false

[1,2,1] -> [];
[0,1] -> [1,0];
[1] -> [];
[0] -> [];
[0,3,0] -> [];
[2,0,3] -> [];
[2] -> [];
[2,3,1] -> [];
[0,3,3] -> [];
[3,2,2] -> [];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, 0]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons (0, list_pairwise_swap (#2.2 y1))
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.275045 false false

[0] -> [];
[0,3,1] -> [];
[2,3,1] -> [];
[2] -> [];
[1,3] -> [3,1];
[1,1] -> [1,1];
[1,2,2] -> [];
[3,0,1] -> [];
[0,3,3] -> [];
[3,2] -> [2,3];
[] -> [];

=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.325489 false false

