list_stutter
[2,2,1] -> [2,2,2,2,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.0154439999999 true true

[3,0,0] -> [3,3,0,0,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00628000000006 true true

[2,3,3] -> [2,2,3,3,3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( 2
        , Cons
            ( #2.1 y1
            , Cons
                ( S (#2.1 y1)
                , Cons (S (#2.1 y1), #2.2 y1)
                )
            )
        ) in list_stutter) : NatList -> NatList)
0.00881000000004 false false

[3] -> [3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons (#2.1 y1, xs) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.009503 false true

[1,2] -> [1,1,2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00609800000007 true true

[2,0] -> [2,2,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00470700000005 true true

[1,2] -> [1,1,2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00607500000001 true true

[2,0,1] -> [2,2,0,0,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00710699999991 true true

[0] -> [0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons (0, xs) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( 0
        , Cons (0, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00437600000009 false false

[3,2,1] -> [3,3,2,2,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.020569 true true

[1] -> [1,1];
[3] -> [3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons (#2.1 y1, xs) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00601899999992 false true

[3,2] -> [3,3,2,2];
[3] -> [3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00340000000006 true true

[2] -> [2,2];
[2,2] -> [2,2,2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.0099889999999 true true

[2,3,3] -> [2,2,3,3,3,3];
[1] -> [1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.003199 true true

[3,1] -> [3,3,1,1];
[1,3,0] -> [1,1,3,3,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00358499999993 true true

[0,3] -> [0,0,3,3];
[2] -> [2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00292300000001 true true

[3,3,2] -> [3,3,3,3,2,2];
[2] -> [2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00326799999993 true true

[1,3] -> [1,1,3,3];
[1,1] -> [1,1,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00523799999996 true true

[3,2] -> [3,3,2,2];
[3] -> [3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.0034599999999 true true

[1] -> [1,1];
[3,1,1] -> [3,3,1,1,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00562100000002 true true

[2] -> [2,2];
[3] -> [3,3];
[0,1,1] -> [0,0,1,1,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00289300000009 true true

[2,0] -> [2,2,0,0];
[0,2,2] -> [0,0,2,2,2,2];
[3,0] -> [3,3,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00317999999993 true true

[0] -> [0,0];
[3,0] -> [3,3,0,0];
[1,3] -> [1,1,3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00286800000003 true true

[0,0,1] -> [0,0,0,0,1,1];
[0,2,2] -> [0,0,2,2,2,2];
[3,3,3] -> [3,3,3,3,3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00330899999994 true true

[1,2,0] -> [1,1,2,2,0,0];
[2,1,2] -> [2,2,1,1,2,2];
[2,0,2] -> [2,2,0,0,2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00369599999999 true true

[2,2] -> [2,2,2,2];
[1,2,3] -> [1,1,2,2,3,3];
[0,1,2] -> [0,0,1,1,2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00348800000006 true true

[0] -> [0,0];
[2] -> [2,2];
[0,0,1] -> [0,0,0,0,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00297799999998 true true

[0] -> [0,0];
[1,3] -> [1,1,3,3];
[3] -> [3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00291599999991 true true

[1,1,3] -> [1,1,1,1,3,3];
[2,2] -> [2,2,2,2];
[0,0] -> [0,0,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00384000000008 true true

[1,0] -> [1,1,0,0];
[0,2,1] -> [0,0,2,2,1,1];
[2,3] -> [2,2,3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.0030690000001 true true

[1,1,2] -> [1,1,1,1,2,2];
[1,3,1] -> [1,1,3,3,1,1];
[0,2,3] -> [0,0,2,2,3,3];
[3] -> [3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00325700000008 true true

[0,0] -> [0,0,0,0];
[0,0,2] -> [0,0,0,0,2,2];
[3,1] -> [3,3,1,1];
[2,2] -> [2,2,2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00321099999996 true true

[0] -> [0,0];
[1,0] -> [1,1,0,0];
[0,1,2] -> [0,0,1,1,2,2];
[2,1] -> [2,2,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00305099999991 true true

[1] -> [1,1];
[1,1,3] -> [1,1,1,1,3,3];
[2,3] -> [2,2,3,3];
[3,3] -> [3,3,3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00342799999999 true true

[2,2,3] -> [2,2,2,2,3,3];
[1,2] -> [1,1,2,2];
[1,1] -> [1,1,1,1];
[3] -> [3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00350400000002 true true

[1] -> [1,1];
[0,1] -> [0,0,1,1];
[3] -> [3,3];
[0,2,0] -> [0,0,2,2,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.003062 true true

[0,0,2] -> [0,0,0,0,2,2];
[3] -> [3,3];
[2] -> [2,2];
[0] -> [0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00302800000009 true true

[0,0] -> [0,0,0,0];
[0,1,1] -> [0,0,1,1,1,1];
[3,1] -> [3,3,1,1];
[0] -> [0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00556499999993 true true

[3,3,0] -> [3,3,3,3,0,0];
[3,2,0] -> [3,3,2,2,0,0];
[3,1,2] -> [3,3,1,1,2,2];
[2] -> [2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.0036990000001 true true

[2] -> [2,2];
[3,3,1] -> [3,3,3,3,1,1];
[1] -> [1,1];
[2,1,1] -> [2,2,1,1,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00357600000007 true true

[1] -> [1,1];
[1,2,2] -> [1,1,2,2,2,2];
[3,3,1] -> [3,3,3,3,1,1];
[3,0] -> [3,3,0,0];
[3,0,3] -> [3,3,0,0,3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00365899999997 true true

[2,2] -> [2,2,2,2];
[2,3,1] -> [2,2,3,3,1,1];
[3,2,2] -> [3,3,2,2,2,2];
[0,0,2] -> [0,0,0,0,2,2];
[2,3,0] -> [2,2,3,3,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00338000000011 true true

[1,0,2] -> [1,1,0,0,2,2];
[1,3] -> [1,1,3,3];
[1] -> [1,1];
[2] -> [2,2];
[3,1] -> [3,3,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00363900000002 true true

[0,2,0] -> [0,0,2,2,0,0];
[3] -> [3,3];
[0,1,2] -> [0,0,1,1,2,2];
[1,1,3] -> [1,1,1,1,3,3];
[1] -> [1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00318900000002 true true

[2,3,1] -> [2,2,3,3,1,1];
[2,0] -> [2,2,0,0];
[0] -> [0,0];
[3,3,0] -> [3,3,3,3,0,0];
[1,3,2] -> [1,1,3,3,2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00324599999999 true true

[1,1] -> [1,1,1,1];
[1] -> [1,1];
[3,0,1] -> [3,3,0,0,1,1];
[3] -> [3,3];
[0,2] -> [0,0,2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00315399999999 true true

[3,1] -> [3,3,1,1];
[2,3,0] -> [2,2,3,3,0,0];
[1,1] -> [1,1,1,1];
[0,3,1] -> [0,0,3,3,1,1];
[2] -> [2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00343799999996 true true

[1,1,2] -> [1,1,1,1,2,2];
[3,1,0] -> [3,3,1,1,0,0];
[3,0] -> [3,3,0,0];
[3,0,0] -> [3,3,0,0,0,0];
[0,1,0] -> [0,0,1,1,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00353300000006 true true

[0,3] -> [0,0,3,3];
[3,1] -> [3,3,1,1];
[0,1,3] -> [0,0,1,1,3,3];
[3] -> [3,3];
[0,3,1] -> [0,0,3,3,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00320099999999 true true

[1,1] -> [1,1,1,1];
[0] -> [0,0];
[0,1,0] -> [0,0,1,1,0,0];
[2] -> [2,2];
[3,3] -> [3,3,3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00304899999992 true true

[2] -> [2,2];
[0,0,0] -> [0,0,0,0,0,0];
[2,2] -> [2,2,2,2];
[0,0] -> [0,0,0,0];
[1,1,3] -> [1,1,1,1,3,3];
[1,3] -> [1,1,3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00321200000008 true true

[2,0,3] -> [2,2,0,0,3,3];
[2,2,0] -> [2,2,2,2,0,0];
[3,3,0] -> [3,3,3,3,0,0];
[0,3] -> [0,0,3,3];
[1,2,1] -> [1,1,2,2,1,1];
[3,3,3] -> [3,3,3,3,3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00348000000008 true true

[0,2] -> [0,0,2,2];
[2] -> [2,2];
[1,2] -> [1,1,2,2];
[0,3] -> [0,0,3,3];
[0,0,2] -> [0,0,0,0,2,2];
[1] -> [1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00317500000006 true true

[3] -> [3,3];
[2] -> [2,2];
[1,0] -> [1,1,0,0];
[2,2,2] -> [2,2,2,2,2,2];
[0] -> [0,0];
[2,1,1] -> [2,2,1,1,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00321299999996 true true

[0,3] -> [0,0,3,3];
[0,0] -> [0,0,0,0];
[3] -> [3,3];
[1,2] -> [1,1,2,2];
[1,1] -> [1,1,1,1];
[2,3,3] -> [2,2,3,3,3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00326300000006 true true

[0] -> [0,0];
[3,3] -> [3,3,3,3];
[2,0] -> [2,2,0,0];
[2] -> [2,2];
[2,3,1] -> [2,2,3,3,1,1];
[1] -> [1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00312299999996 true true

[2,3,2] -> [2,2,3,3,2,2];
[0,0] -> [0,0,0,0];
[1,3,3] -> [1,1,3,3,3,3];
[0] -> [0,0];
[2,0,0] -> [2,2,0,0,0,0];
[3,3,0] -> [3,3,3,3,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00342500000011 true true

[1,3,1] -> [1,1,3,3,1,1];
[1,3] -> [1,1,3,3];
[2,3,3] -> [2,2,3,3,3,3];
[0] -> [0,0];
[2] -> [2,2];
[3,3,0] -> [3,3,3,3,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00333799999999 true true

[0,2,2] -> [0,0,2,2,2,2];
[3,1,2] -> [3,3,1,1,2,2];
[0] -> [0,0];
[2,1,1] -> [2,2,1,1,1,1];
[2,1,0] -> [2,2,1,1,0,0];
[1,2] -> [1,1,2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00356000000011 true true

[3,2] -> [3,3,2,2];
[3] -> [3,3];
[0] -> [0,0];
[1] -> [1,1];
[0,1,1] -> [0,0,1,1,1,1];
[2] -> [2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00317300000006 true true

[3,2] -> [3,3,2,2];
[1,0,1] -> [1,1,0,0,1,1];
[1,0,0] -> [1,1,0,0,0,0];
[1,1,1] -> [1,1,1,1,1,1];
[0,0,3] -> [0,0,0,0,3,3];
[1] -> [1,1];
[2,1] -> [2,2,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00360099999989 true true

[1] -> [1,1];
[0,3,0] -> [0,0,3,3,0,0];
[3,0] -> [3,3,0,0];
[3,3] -> [3,3,3,3];
[3,1,1] -> [3,3,1,1,1,1];
[3] -> [3,3];
[3,3,1] -> [3,3,3,3,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.003422 true true

[1] -> [1,1];
[1,3,0] -> [1,1,3,3,0,0];
[3,1,1] -> [3,3,1,1,1,1];
[3,1,3] -> [3,3,1,1,3,3];
[3,2,3] -> [3,3,2,2,3,3];
[0,2,0] -> [0,0,2,2,0,0];
[2,1,3] -> [2,2,1,1,3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00365499999998 true true

[3,1,1] -> [3,3,1,1,1,1];
[0] -> [0,0];
[1] -> [1,1];
[1,1,3] -> [1,1,1,1,3,3];
[2,1,0] -> [2,2,1,1,0,0];
[0,1] -> [0,0,1,1];
[3,0] -> [3,3,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00336300000004 true true

[2] -> [2,2];
[2,3,3] -> [2,2,3,3,3,3];
[1,3,0] -> [1,1,3,3,0,0];
[0,1,0] -> [0,0,1,1,0,0];
[0] -> [0,0];
[3,1,1] -> [3,3,1,1,1,1];
[3,2] -> [3,3,2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00336199999992 true true

[3,0,3] -> [3,3,0,0,3,3];
[1,1] -> [1,1,1,1];
[2,0,1] -> [2,2,0,0,1,1];
[3,0] -> [3,3,0,0];
[0] -> [0,0];
[2,2] -> [2,2,2,2];
[2,3] -> [2,2,3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00358699999992 true true

[1,0,1] -> [1,1,0,0,1,1];
[3,3] -> [3,3,3,3];
[3,1,0] -> [3,3,1,1,0,0];
[0,3] -> [0,0,3,3];
[2,0] -> [2,2,0,0];
[3] -> [3,3];
[2] -> [2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00330000000008 true true

[1] -> [1,1];
[1,2] -> [1,1,2,2];
[3,0] -> [3,3,0,0];
[0,2] -> [0,0,2,2];
[3] -> [3,3];
[3,2,1] -> [3,3,2,2,1,1];
[1,1] -> [1,1,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00332299999991 true true

[3,1] -> [3,3,1,1];
[3,0,2] -> [3,3,0,0,2,2];
[1,1] -> [1,1,1,1];
[3,1,2] -> [3,3,1,1,2,2];
[1,1,1] -> [1,1,1,1,1,1];
[2] -> [2,2];
[0] -> [0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00348699999995 true true

[0,2] -> [0,0,2,2];
[2,0] -> [2,2,0,0];
[1] -> [1,1];
[1,1] -> [1,1,1,1];
[0,1,0] -> [0,0,1,1,0,0];
[3] -> [3,3];
[2,3,1] -> [2,2,3,3,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00340800000004 true true

[3] -> [3,3];
[2,2,1] -> [2,2,2,2,1,1];
[0,2,3] -> [0,0,2,2,3,3];
[0,0,2] -> [0,0,0,0,2,2];
[0] -> [0,0];
[1] -> [1,1];
[1,2] -> [1,1,2,2];
[0,0] -> [0,0,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.0035190000001 true true

[1] -> [1,1];
[2,0,0] -> [2,2,0,0,0,0];
[1,0,2] -> [1,1,0,0,2,2];
[0] -> [0,0];
[3,0] -> [3,3,0,0];
[2,2] -> [2,2,2,2];
[0,2] -> [0,0,2,2];
[3] -> [3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00354300000004 true true

[2] -> [2,2];
[3,0,1] -> [3,3,0,0,1,1];
[0] -> [0,0];
[3] -> [3,3];
[2,1,0] -> [2,2,1,1,0,0];
[2,1] -> [2,2,1,1];
[3,1,0] -> [3,3,1,1,0,0];
[1,0,1] -> [1,1,0,0,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00341400000002 true true

[0,0,2] -> [0,0,0,0,2,2];
[1] -> [1,1];
[1,1] -> [1,1,1,1];
[2,2,3] -> [2,2,2,2,3,3];
[0,3,1] -> [0,0,3,3,1,1];
[0,0] -> [0,0,0,0];
[0,1,2] -> [0,0,1,1,2,2];
[3,2] -> [3,3,2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.0035190000001 true true

[2] -> [2,2];
[3] -> [3,3];
[0] -> [0,0];
[3,1] -> [3,3,1,1];
[1] -> [1,1];
[0,2,0] -> [0,0,2,2,0,0];
[2,0] -> [2,2,0,0];
[2,1] -> [2,2,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00340000000006 true true

[1] -> [1,1];
[3,2,2] -> [3,3,2,2,2,2];
[0] -> [0,0];
[2,0,1] -> [2,2,0,0,1,1];
[2,1] -> [2,2,1,1];
[3,2,0] -> [3,3,2,2,0,0];
[2,1,1] -> [2,2,1,1,1,1];
[0,1] -> [0,0,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00351000000001 true true

[2,1,2] -> [2,2,1,1,2,2];
[3] -> [3,3];
[0] -> [0,0];
[3,2] -> [3,3,2,2];
[0,2,0] -> [0,0,2,2,0,0];
[2,0,3] -> [2,2,0,0,3,3];
[3,3] -> [3,3,3,3];
[0,1,0] -> [0,0,1,1,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.003467 true true

[2] -> [2,2];
[3,0,0] -> [3,3,0,0,0,0];
[2,2] -> [2,2,2,2];
[3] -> [3,3];
[3,3] -> [3,3,3,3];
[1,3] -> [1,1,3,3];
[3,2] -> [3,3,2,2];
[1,0,2] -> [1,1,0,0,2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00393699999995 true true

[3,3] -> [3,3,3,3];
[1,1] -> [1,1,1,1];
[2] -> [2,2];
[1,0] -> [1,1,0,0];
[2,2] -> [2,2,2,2];
[2,3] -> [2,2,3,3];
[0,1] -> [0,0,1,1];
[1,0,0] -> [1,1,0,0,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00338600000009 true true

[2,0,0] -> [2,2,0,0,0,0];
[3] -> [3,3];
[3,0] -> [3,3,0,0];
[1,1,2] -> [1,1,1,1,2,2];
[1,3] -> [1,1,3,3];
[2,2] -> [2,2,2,2];
[2,0] -> [2,2,0,0];
[2,1] -> [2,2,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00402699999995 true true

[3] -> [3,3];
[2,3] -> [2,2,3,3];
[1,2,0] -> [1,1,2,2,0,0];
[2] -> [2,2];
[1] -> [1,1];
[2,0] -> [2,2,0,0];
[0,3] -> [0,0,3,3];
[3,3] -> [3,3,3,3];
[2,1,0] -> [2,2,1,1,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00346500000001 true true

[3,2] -> [3,3,2,2];
[0,1,1] -> [0,0,1,1,1,1];
[0] -> [0,0];
[0,2,2] -> [0,0,2,2,2,2];
[0,2] -> [0,0,2,2];
[1,3] -> [1,1,3,3];
[1,0] -> [1,1,0,0];
[2,0,2] -> [2,2,0,0,2,2];
[3,2,2] -> [3,3,2,2,2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00358899999992 true true

[2,0,1] -> [2,2,0,0,1,1];
[0,3] -> [0,0,3,3];
[0,1] -> [0,0,1,1];
[3,3] -> [3,3,3,3];
[1,2,2] -> [1,1,2,2,2,2];
[0,2,2] -> [0,0,2,2,2,2];
[2,3] -> [2,2,3,3];
[2] -> [2,2];
[2,1,1] -> [2,2,1,1,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00358099999994 true true

[2] -> [2,2];
[0] -> [0,0];
[1,1,0] -> [1,1,1,1,0,0];
[2,0] -> [2,2,0,0];
[2,1] -> [2,2,1,1];
[1,2] -> [1,1,2,2];
[0,0,1] -> [0,0,0,0,1,1];
[3,2] -> [3,3,2,2];
[1] -> [1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00340099999994 true true

[1,0] -> [1,1,0,0];
[0,0] -> [0,0,0,0];
[2,0,1] -> [2,2,0,0,1,1];
[0] -> [0,0];
[3] -> [3,3];
[2,1,0] -> [2,2,1,1,0,0];
[1,1,2] -> [1,1,1,1,2,2];
[1,3] -> [1,1,3,3];
[2] -> [2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00354199999992 true true

[2,1,2] -> [2,2,1,1,2,2];
[3,3] -> [3,3,3,3];
[0,1,1] -> [0,0,1,1,1,1];
[2,0] -> [2,2,0,0];
[0,0] -> [0,0,0,0];
[1] -> [1,1];
[0,2,2] -> [0,0,2,2,2,2];
[2,3] -> [2,2,3,3];
[1,0] -> [1,1,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00717499999996 true true

[1] -> [1,1];
[3,2,3] -> [3,3,2,2,3,3];
[3,2,0] -> [3,3,2,2,0,0];
[2] -> [2,2];
[1,3] -> [1,1,3,3];
[0,2] -> [0,0,2,2];
[2,3] -> [2,2,3,3];
[1,0] -> [1,1,0,0];
[1,0,1] -> [1,1,0,0,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00389700000005 true true

[2,1] -> [2,2,1,1];
[0,3] -> [0,0,3,3];
[0,2,0] -> [0,0,2,2,0,0];
[2,1,1] -> [2,2,1,1,1,1];
[3,0] -> [3,3,0,0];
[2,2] -> [2,2,2,2];
[0,0,3] -> [0,0,0,0,3,3];
[3] -> [3,3];
[3,0,0] -> [3,3,0,0,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00381799999991 true true

[2,2] -> [2,2,2,2];
[3] -> [3,3];
[3,3,3] -> [3,3,3,3,3,3];
[2,1,0] -> [2,2,1,1,0,0];
[2,3,1] -> [2,2,3,3,1,1];
[1,3,0] -> [1,1,3,3,0,0];
[1,2] -> [1,1,2,2];
[1,1] -> [1,1,1,1];
[2,1] -> [2,2,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00444199999993 true true

[2,0] -> [2,2,0,0];
[1,0,0] -> [1,1,0,0,0,0];
[1,3] -> [1,1,3,3];
[3] -> [3,3];
[1,1,1] -> [1,1,1,1,1,1];
[1,0] -> [1,1,0,0];
[1,1] -> [1,1,1,1];
[2,3,0] -> [2,2,3,3,0,0];
[2,0,1] -> [2,2,0,0,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00439099999994 true true

[0] -> [0,0];
[2] -> [2,2];
[1] -> [1,1];
[3,1,1] -> [3,3,1,1,1,1];
[2,2,2] -> [2,2,2,2,2,2];
[3,2,1] -> [3,3,2,2,1,1];
[1,3] -> [1,1,3,3];
[3] -> [3,3];
[3,3] -> [3,3,3,3];
[1,0] -> [1,1,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00381900000002 true true

[2,3] -> [2,2,3,3];
[0] -> [0,0];
[3,2] -> [3,3,2,2];
[2] -> [2,2];
[0,3,2] -> [0,0,3,3,2,2];
[1] -> [1,1];
[2,3,2] -> [2,2,3,3,2,2];
[3] -> [3,3];
[0,2] -> [0,0,2,2];
[1,2] -> [1,1,2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00860899999998 true true

[2] -> [2,2];
[0,3,0] -> [0,0,3,3,0,0];
[0] -> [0,0];
[0,2,1] -> [0,0,2,2,1,1];
[0,3,3] -> [0,0,3,3,3,3];
[2,2] -> [2,2,2,2];
[3,3] -> [3,3,3,3];
[1,2] -> [1,1,2,2];
[3] -> [3,3];
[3,1] -> [3,3,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00983500000007 true true

[0] -> [0,0];
[1,1,0] -> [1,1,1,1,0,0];
[2] -> [2,2];
[0,0] -> [0,0,0,0];
[1] -> [1,1];
[0,1,1] -> [0,0,1,1,1,1];
[0,2,3] -> [0,0,2,2,3,3];
[0,1] -> [0,0,1,1];
[0,3] -> [0,0,3,3];
[3] -> [3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00354300000004 true true

[0,0] -> [0,0,0,0];
[2,1,2] -> [2,2,1,1,2,2];
[0,2] -> [0,0,2,2];
[0,3] -> [0,0,3,3];
[1] -> [1,1];
[0,2,3] -> [0,0,2,2,3,3];
[3,2,3] -> [3,3,2,2,3,3];
[3,3,1] -> [3,3,3,3,1,1];
[3,0,0] -> [3,3,0,0,0,0];
[1,0] -> [1,1,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.0038790000001 true true

[1,3,0] -> [1,1,3,3,0,0];
[3,1] -> [3,3,1,1];
[2] -> [2,2];
[0] -> [0,0];
[2,1] -> [2,2,1,1];
[1,1,3] -> [1,1,1,1,3,3];
[1,1,1] -> [1,1,1,1,1,1];
[0,1,3] -> [0,0,1,1,3,3];
[3,3] -> [3,3,3,3];
[3,2] -> [3,3,2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00379100000009 true true

[0,3,2] -> [0,0,3,3,2,2];
[1,3,0] -> [1,1,3,3,0,0];
[1,2,3] -> [1,1,2,2,3,3];
[1] -> [1,1];
[0] -> [0,0];
[2,2] -> [2,2,2,2];
[0,1] -> [0,0,1,1];
[0,1,2] -> [0,0,1,1,2,2];
[0,0] -> [0,0,0,0];
[1,2,1] -> [1,1,2,2,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00373399999989 true true

[2,1] -> [2,2,1,1];
[1,2] -> [1,1,2,2];
[1,0] -> [1,1,0,0];
[0,2,1] -> [0,0,2,2,1,1];
[1,2,3] -> [1,1,2,2,3,3];
[2] -> [2,2];
[2,0] -> [2,2,0,0];
[3,0] -> [3,3,0,0];
[0,3,2] -> [0,0,3,3,2,2];
[0,1] -> [0,0,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00371399999995 true true

[1,0,2] -> [1,1,0,0,2,2];
[3,2,1] -> [3,3,2,2,1,1];
[0,1,0] -> [0,0,1,1,0,0];
[3,0] -> [3,3,0,0];
[0,2,2] -> [0,0,2,2,2,2];
[2] -> [2,2];
[3] -> [3,3];
[1,2,2] -> [1,1,2,2,2,2];
[1,3,2] -> [1,1,3,3,2,2];
[1,0] -> [1,1,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.003604 true true

[3,0] -> [3,3,0,0];
[1,3,2] -> [1,1,3,3,2,2];
[0,3] -> [0,0,3,3];
[1] -> [1,1];
[0] -> [0,0];
[3,3] -> [3,3,3,3];
[3,1,2] -> [3,3,1,1,2,2];
[2,3,1] -> [2,2,3,3,1,1];
[2] -> [2,2];
[1,2,2] -> [1,1,2,2,2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.0035969999999 true true

