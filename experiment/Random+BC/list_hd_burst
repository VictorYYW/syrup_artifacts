list_hd
[1,3] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0117 true

[3,2,1] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0244 true

[3,1,3] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0412 true

[3] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0047 true

[3] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0046 true

[2] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0044 true

[0,1] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> 0

0.0000 false

[0] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> 0

0.0000 false

[1,2] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0107 true

[0,0] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> 0

0.0000 false

[0,3] -> 0;
[2,2,1] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0240 true

[3,0] -> 3;
[3,2] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0094 true

[3] -> 3;
[2] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0046 true

[1] -> 1;
[0,0] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0042 true

[0,2] -> 0;
[0,3,1] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> 0

0.0000 false

[0,1,0] -> 0;
[0,2,1] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> 0

0.0000 false

[3] -> 3;
[0,2,3] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0048 true

[0,1] -> 0;
[3,1] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0105 true

[2,0] -> 2;
[1,2,3] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0088 true

[1,2,3] -> 1;
[0,1] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0282 true

[0] -> 0;
[3] -> 3;
[2,1,1] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0049 true

[1,1,2] -> 1;
[0] -> 0;
[0,0,2] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0237 true

[0] -> 0;
[2,1] -> 2;
[2] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0099 true

[0,3,1] -> 0;
[0,0] -> 0;
[0,3] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> 0

0.0001 false

[3] -> 3;
[3,2] -> 3;
[2] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0048 true

[2,2] -> 2;
[1,2,0] -> 1;
[2,0,3] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0112 true

[0,3] -> 0;
[1,1] -> 1;
[3,3] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0098 true

[1,1] -> 1;
[0,1] -> 0;
[0,0] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0084 true

[0,0] -> 0;
[1] -> 1;
[3] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0042 true

[2] -> 2;
[3,1] -> 3;
[0,2] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0046 true

[1,2] -> 1;
[1] -> 1;
[2,0,1] -> 2;
[3,0,2] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0106 true

[2] -> 2;
[1,3,2] -> 1;
[1] -> 1;
[2,0] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0045 true

[2,0] -> 2;
[0,1,1] -> 0;
[3,0,0] -> 3;
[1,2] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0088 true

[2] -> 2;
[3,1,3] -> 3;
[0,2] -> 0;
[3,2,1] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0045 true

[3] -> 3;
[3,3,3] -> 3;
[3,3] -> 3;
[2] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0047 true

[1] -> 1;
[0,0,3] -> 0;
[3,0] -> 3;
[3] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0043 true

[0,1,3] -> 0;
[3,2,2] -> 3;
[3] -> 3;
[1] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0293 true

[2] -> 2;
[3,0,3] -> 3;
[2,3,3] -> 2;
[1,3] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0047 true

[3,2] -> 3;
[0,2,1] -> 0;
[0,2,2] -> 0;
[0,1] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0113 true

[3] -> 3;
[1,2,2] -> 1;
[2] -> 2;
[0] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0047 true

[3,3,1] -> 3;
[3,2] -> 3;
[1,0,3] -> 1;
[0] -> 0;
[3] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0265 true

[2,2,0] -> 2;
[2,3] -> 2;
[0,0,2] -> 0;
[3,2,0] -> 3;
[1] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0331 true

[1,1] -> 1;
[3] -> 3;
[2,1,2] -> 2;
[0,2,0] -> 0;
[1] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0085 true

[0] -> 0;
[3] -> 3;
[3,2,1] -> 3;
[1,3,1] -> 1;
[1] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0048 true

[3] -> 3;
[0,1,1] -> 0;
[1,2] -> 1;
[2] -> 2;
[0] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0048 true

[3,0,1] -> 3;
[3] -> 3;
[3,0] -> 3;
[1,2,3] -> 1;
[1,2] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0207 true

[0,1] -> 0;
[2,3,0] -> 2;
[0] -> 0;
[2,1] -> 2;
[2,2] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0212 true

[1,0,3] -> 1;
[1,0] -> 1;
[3] -> 3;
[0,3,0] -> 0;
[0,3] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0181 true

[1,1] -> 1;
[1] -> 1;
[3,1,2] -> 3;
[3,1,0] -> 3;
[3] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0073 true

[2,1] -> 2;
[0,1] -> 0;
[3] -> 3;
[1,2] -> 1;
[1] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0092 true

[0,0] -> 0;
[2,1,2] -> 2;
[0,0,0] -> 0;
[2] -> 2;
[0] -> 0;
[1,0] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0216 true

[2,3] -> 2;
[3] -> 3;
[3,2] -> 3;
[1,0] -> 1;
[1,3,1] -> 1;
[2,1] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0101 true

[3,2,2] -> 3;
[2,2] -> 2;
[0,2,2] -> 0;
[1,3,0] -> 1;
[1,0] -> 1;
[0,1] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0255 true

[0,2,1] -> 0;
[3,1] -> 3;
[1] -> 1;
[1,2] -> 1;
[0,1,1] -> 0;
[1,1] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0096 true

[0,0,0] -> 0;
[3] -> 3;
[1,1,3] -> 1;
[2,0] -> 2;
[1,0] -> 1;
[1,1,0] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0047 true

[2,2] -> 2;
[3] -> 3;
[2] -> 2;
[0,1] -> 0;
[3,1,2] -> 3;
[3,1,0] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0095 true

[2,1] -> 2;
[2] -> 2;
[1,3,3] -> 1;
[3] -> 3;
[0] -> 0;
[2,2,3] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0102 true

[1,0,2] -> 1;
[0] -> 0;
[3,0] -> 3;
[0,0] -> 0;
[2] -> 2;
[2,2] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0175 true

[1,3] -> 1;
[2,1,3] -> 2;
[0] -> 0;
[0,3] -> 0;
[3,2] -> 3;
[3,0,3] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0116 true

[0,0] -> 0;
[3,2] -> 3;
[3,3,0] -> 3;
[2,2,1] -> 2;
[3,3] -> 3;
[2,0,1] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0114 true

[0,2,3] -> 0;
[0,0,2] -> 0;
[3,2] -> 3;
[2,2,0] -> 2;
[2] -> 2;
[0,3] -> 0;
[2,1] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0100 true

[2,1,3] -> 2;
[2,0] -> 2;
[0,0,0] -> 0;
[3,0,3] -> 3;
[0,1,1] -> 0;
[2] -> 2;
[1,1] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0282 true

[0,2] -> 0;
[2,0] -> 2;
[3,3,0] -> 3;
[2,3,3] -> 2;
[0] -> 0;
[2,2] -> 2;
[0,2,1] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0072 true

[1,2] -> 1;
[1] -> 1;
[3] -> 3;
[2,0,3] -> 2;
[3,1,3] -> 3;
[0,0,2] -> 0;
[3,2] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0108 true

[1,3,1] -> 1;
[2] -> 2;
[1,0] -> 1;
[0] -> 0;
[3] -> 3;
[1,1,2] -> 1;
[1] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0224 true

[2,1] -> 2;
[2] -> 2;
[2,1,2] -> 2;
[0] -> 0;
[3] -> 3;
[0,2,2] -> 0;
[0,3,0] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0099 true

[0,3,0] -> 0;
[3,1,3] -> 3;
[3,0,3] -> 3;
[3,0,1] -> 3;
[0,0] -> 0;
[2] -> 2;
[3,3,3] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0309 true

[3,1] -> 3;
[1] -> 1;
[3,0] -> 3;
[1,1,0] -> 1;
[0,0] -> 0;
[2,0,0] -> 2;
[2] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0099 true

[1,1] -> 1;
[0,1,0] -> 0;
[1] -> 1;
[2,3] -> 2;
[1,2] -> 1;
[0] -> 0;
[1,3,0] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0086 true

[2,2] -> 2;
[1] -> 1;
[0,2,0] -> 0;
[1,0,2] -> 1;
[3,3,2] -> 3;
[3,3] -> 3;
[2,3,1] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0112 true

[2,2,3] -> 2;
[1,0,0] -> 1;
[2,2,1] -> 2;
[1,1] -> 1;
[3,2,3] -> 3;
[0,1,0] -> 0;
[3,1] -> 3;
[2,1,2] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0317 true

[1,1] -> 1;
[1,1,2] -> 1;
[0] -> 0;
[1,3,3] -> 1;
[3,3,3] -> 3;
[2,1] -> 2;
[2,3,3] -> 2;
[3,1,3] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0099 true

[1] -> 1;
[1,3,3] -> 1;
[2,1] -> 2;
[3,0] -> 3;
[1,1,3] -> 1;
[0] -> 0;
[0,1] -> 0;
[0,3,2] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0043 true

[3,0,1] -> 3;
[3] -> 3;
[0,0,1] -> 0;
[1,1,2] -> 1;
[2] -> 2;
[2,2] -> 2;
[0,2] -> 0;
[2,3,0] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0212 true

[1] -> 1;
[2,1,3] -> 2;
[1,2,1] -> 1;
[0] -> 0;
[2] -> 2;
[3] -> 3;
[0,2] -> 0;
[0,1] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0043 true

[1] -> 1;
[0,0,3] -> 0;
[3,0,2] -> 3;
[3,3] -> 3;
[1,0,1] -> 1;
[3,1,2] -> 3;
[2] -> 2;
[0] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0043 true

[3] -> 3;
[2,3,1] -> 2;
[0,3] -> 0;
[0,0] -> 0;
[0] -> 0;
[0,0,2] -> 0;
[0,2] -> 0;
[2] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0048 true

[2,0,3] -> 2;
[3,0] -> 3;
[0,3] -> 0;
[3,2] -> 3;
[3] -> 3;
[0,2] -> 0;
[0,0,2] -> 0;
[0,0,3] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0194 true

[1,2,3] -> 1;
[0] -> 0;
[1,1] -> 1;
[1,1,2] -> 1;
[1] -> 1;
[2,0] -> 2;
[3] -> 3;
[2,2] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0243 true

[3,0] -> 3;
[2] -> 2;
[3,2,2] -> 3;
[0] -> 0;
[3,0,0] -> 3;
[1,0,0] -> 1;
[2,2] -> 2;
[2,1,3] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0089 true

[0,0] -> 0;
[1,1,0] -> 1;
[3,2] -> 3;
[2] -> 2;
[1] -> 1;
[2,0] -> 2;
[3,0,2] -> 3;
[0] -> 0;
[0,1] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0163 true

[2,1] -> 2;
[0,2] -> 0;
[3,0,3] -> 3;
[3,3] -> 3;
[1,1,3] -> 1;
[2,0,3] -> 2;
[0,1] -> 0;
[1,3] -> 1;
[2,0,1] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0101 true

[0] -> 0;
[2,1,2] -> 2;
[0,1] -> 0;
[2] -> 2;
[3,3,2] -> 3;
[2,0] -> 2;
[3,0] -> 3;
[1,2,0] -> 1;
[3] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0212 true

[0,1,2] -> 0;
[1,1] -> 1;
[0,0] -> 0;
[2] -> 2;
[0,0,3] -> 0;
[2,0,0] -> 2;
[3,0,1] -> 3;
[2,1] -> 2;
[3,2,2] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0097 true

[3,3] -> 3;
[2,3] -> 2;
[2,3,2] -> 2;
[0,3,0] -> 0;
[2,2,2] -> 2;
[2] -> 2;
[0] -> 0;
[1] -> 1;
[0,2] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0139 true

[1] -> 1;
[3,3,2] -> 3;
[2,1,0] -> 2;
[0,3] -> 0;
[3,0] -> 3;
[3,2] -> 3;
[0] -> 0;
[2,3] -> 2;
[3,3,3] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0044 true

[0] -> 0;
[3] -> 3;
[2] -> 2;
[0,3,0] -> 0;
[1] -> 1;
[0,0] -> 0;
[3,1] -> 3;
[1,1,0] -> 1;
[0,1] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0048 true

[2] -> 2;
[1,1,0] -> 1;
[1,1,2] -> 1;
[1,3] -> 1;
[1,0] -> 1;
[1,2] -> 1;
[0] -> 0;
[2,2] -> 2;
[1,3,3] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0046 true

[0,2,1] -> 0;
[2,2,0] -> 2;
[1,0,3] -> 1;
[1,2] -> 1;
[3] -> 3;
[2,3,0] -> 2;
[3,2,0] -> 3;
[3,3] -> 3;
[1] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0204 true

[1] -> 1;
[1,1] -> 1;
[0,1] -> 0;
[2,1,2] -> 2;
[1,1,1] -> 1;
[3,2] -> 3;
[2,0] -> 2;
[1,2,2] -> 1;
[2,3] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0044 true

[3,1] -> 3;
[2,1] -> 2;
[1,2,0] -> 1;
[2,0] -> 2;
[0,0] -> 0;
[1,2] -> 1;
[2] -> 2;
[1,3,1] -> 1;
[1,3,2] -> 1;
[0] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0105 true

[1] -> 1;
[1,2] -> 1;
[2] -> 2;
[0,0,3] -> 0;
[2,0,3] -> 2;
[3] -> 3;
[0,1] -> 0;
[3,3,2] -> 3;
[2,2,3] -> 2;
[3,1,0] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0044 true

[0,1] -> 0;
[2,0] -> 2;
[0,0,3] -> 0;
[0,2] -> 0;
[0] -> 0;
[3,1,0] -> 3;
[3,1,3] -> 3;
[2] -> 2;
[3,2] -> 3;
[1,1,3] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0088 true

[1,0] -> 1;
[3,3] -> 3;
[2] -> 2;
[1,1] -> 1;
[2,2] -> 2;
[3,0] -> 3;
[3,3,2] -> 3;
[3,1,3] -> 3;
[1,2] -> 1;
[3,0,2] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0089 true

[1] -> 1;
[2,0,0] -> 2;
[0,2] -> 0;
[1,2,0] -> 1;
[0] -> 0;
[2,2] -> 2;
[0,0,2] -> 0;
[3] -> 3;
[0,2,0] -> 0;
[1,3,1] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0044 true

[2,1] -> 2;
[0] -> 0;
[2] -> 2;
[2,0,0] -> 2;
[3,1,0] -> 3;
[2,1,2] -> 2;
[1,2,0] -> 1;
[1,1,0] -> 1;
[2,2] -> 2;
[1,1] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0099 true

[2,3] -> 2;
[1,3] -> 1;
[1,0] -> 1;
[2,3,0] -> 2;
[0,0,3] -> 0;
[1] -> 1;
[2,2,3] -> 2;
[1,1,0] -> 1;
[0,2] -> 0;
[3] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0105 true

[0] -> 0;
[1] -> 1;
[1,1] -> 1;
[1,2] -> 1;
[2,0] -> 2;
[1,3] -> 1;
[1,1,0] -> 1;
[1,0,3] -> 1;
[1,3,1] -> 1;
[3,2] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0044 true

[1] -> 1;
[0] -> 0;
[3,0,2] -> 3;
[1,2,2] -> 1;
[1,1] -> 1;
[2] -> 2;
[2,2,0] -> 2;
[3,2,1] -> 3;
[2,1,2] -> 2;
[0,2,2] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0044 true

[1,3] -> 1;
[2,3,0] -> 2;
[1] -> 1;
[0,2,1] -> 0;
[3,2] -> 3;
[3,1] -> 3;
[3,2,2] -> 3;
[3,3] -> 3;
[0,3,1] -> 0;
[2,2] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0120 true

