list_drop
([0,0,3],3) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([3,0],0) -> [3,0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> x . 0

0.0095 false

([3,3],2) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0000 false

([0,1],0) -> [0,1];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> x . 0

0.0072 false

([3,1],3) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0000 false

([1,0,1],0) -> [1,0,1];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> x . 0

0.0186 false

([0,3,3],1) -> [3,3];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

0.1670 false

([1,0],3) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([3,2],2) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0000 false

([1,2],2) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0000 false

([0,3],3) -> [];
([0],3) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([1,0,2],0) -> [1,0,2];
([1],3) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

0.2910 false

([2,3,2],1) -> [3,2];
([2,1],1) -> [1];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

0.1973 false

([3,0],1) -> [0];
([1,0],0) -> [1,0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

0.1097 false

([2,3],1) -> [3];
([1,0,1],1) -> [0,1];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

0.0526 false

([3,0,3],1) -> [0,3];
([0],0) -> [0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

0.3165 false

([0,3,1],2) -> [1];
([1],2) -> [];
 ([], 0) -> [];

=================================
None
([0,1,1],1) -> [1,1];
([0],2) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

0.0883 false

([3],1) -> [];
([3],2) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([0,3],2) -> [];
([0],1) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([1,1,1],2) -> [1];
([2],0) -> [2];
([0,0,3],3) -> [];
 ([], 0) -> [];

=================================
None
([3],0) -> [3];
([3,0,1],1) -> [0,1];
([1,2],3) -> [];
 ([], 0) -> [];

=================================
None
([3],0) -> [3];
([2,1],1) -> [1];
([2,0],3) -> [];
 ([], 0) -> [];

=================================
None
([1,2,1],1) -> [2,1];
([3,2,1],0) -> [3,2,1];
([1,2,3],1) -> [2,3];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

0.1237 false

([1],1) -> [];
([3],0) -> [3];
([0],2) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

0.0123 false

([0,2,1],3) -> [];
([1,3,2],3) -> [];
([0,2],1) -> [2];
 ([], 0) -> [];

=================================
None
([0],1) -> [];
([2],0) -> [2];
([3],2) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

0.0112 false

([0,0,3],0) -> [0,0,3];
([3],2) -> [];
([0,1],2) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.4271 false

([3],2) -> [];
([0],1) -> [];
([0],0) -> [0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

0.0191 false

([0,1,0],2) -> [0];
([2],3) -> [];
([2,1],3) -> [];
 ([], 0) -> [];

=================================
None
([1],0) -> [1];
([3,1],2) -> [];
([3,1,0],3) -> [];
([0,2],3) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.0664 false

([2],0) -> [2];
([1,2],1) -> [2];
([1,0,1],0) -> [1,0,1];
([1,2,0],1) -> [2,0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

0.0230 false

([1,0],3) -> [];
([2,1],3) -> [];
([2],2) -> [];
([2],3) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([2,1],1) -> [1];
([3,3,1],1) -> [3,1];
([3],2) -> [];
([3],0) -> [3];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

0.0314 false

([0,3],3) -> [];
([1],3) -> [];
([3],1) -> [];
([1,0],0) -> [1,0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.4632 false

([3,2],3) -> [];
([2,0],3) -> [];
([3,1,3],0) -> [3,1,3];
([1,1],1) -> [1];
 ([], 0) -> [];

=================================
None
([1],0) -> [1];
([2],2) -> [];
([2],3) -> [];
([2],1) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

0.0180 false

([2],3) -> [];
([0,1],1) -> [1];
([3],0) -> [3];
([0],0) -> [0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

0.0289 false

([0,0],2) -> [];
([1],1) -> [];
([0,3,0],3) -> [];
([0],3) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([0],0) -> [0];
([3,3],0) -> [3,3];
([1,1],0) -> [1,1];
([0],1) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

0.0090 false

([0,2,1],3) -> [];
([3,2],3) -> [];
([0,1],3) -> [];
([2,2,0],2) -> [0];
([1],0) -> [1];
 ([], 0) -> [];

=================================
None
([2,0,1],0) -> [2,0,1];
([0],0) -> [0];
([3],2) -> [];
([3,3,0],3) -> [];
([1,1],0) -> [1,1];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

1.0875 false

([0,3,3],0) -> [0,3,3];
([3],1) -> [];
([0,2,3],2) -> [3];
([0],2) -> [];
([0,0,1],0) -> [0,0,1];
 ([], 0) -> [];

=================================
None
([3,0],0) -> [3,0];
([0],2) -> [];
([1,2],0) -> [1,2];
([3,0,3],3) -> [];
([3,3],3) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.5422 false

([3],2) -> [];
([1,2,1],1) -> [2,1];
([2],0) -> [2];
([0,1],1) -> [1];
([1,1,0],3) -> [];
 ([], 0) -> [];

=================================
None
([1,2],3) -> [];
([2,3],0) -> [2,3];
([2,0,0],0) -> [2,0,0];
([2,2,1],3) -> [];
([1,3,0],0) -> [1,3,0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.4849 false

([3],3) -> [];
([3,0],3) -> [];
([2,0],3) -> [];
([2,0],0) -> [2,0];
([3],1) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.4662 false

([1,0],2) -> [];
([1],1) -> [];
([1,3],1) -> [3];
([0,1,2],0) -> [0,1,2];
([3],1) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1))

107.0620 false

([3,0,2],0) -> [3,0,2];
([1],3) -> [];
([3,2],3) -> [];
([0],0) -> [0];
([3,0,0],0) -> [3,0,0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.5400 false

([1,0,0],0) -> [1,0,0];
([0,1],0) -> [0,1];
([1,3],0) -> [1,3];
([1,3,3],3) -> [];
([0],2) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

2.0910 false

([1,3],1) -> [3];
([2],0) -> [2];
([2,3],3) -> [];
([3,0],1) -> [0];
([1],2) -> [];
([2,0,0],1) -> [0,0];
 ([], 0) -> [];

=================================
None
([2,2,1],3) -> [];
([3,3],1) -> [3];
([0,2,3],1) -> [2,3];
([1],1) -> [];
([1,3,0],0) -> [1,3,0];
([0,1,1],0) -> [0,1,1];
 ([], 0) -> [];

=================================
None
([1,3],1) -> [3];
([1,1],1) -> [1];
([0,3],2) -> [];
([2],1) -> [];
([2,0,0],3) -> [];
([0,2,0],0) -> [0,2,0];
 ([], 0) -> [];

=================================
None
([2,0],1) -> [0];
([0],1) -> [];
([1,3,1],2) -> [1];
([3,2],1) -> [2];
([1],0) -> [1];
([1,2,0],3) -> [];
 ([], 0) -> [];

=================================
None
([3,2],1) -> [2];
([1,3,0],2) -> [0];
([3,0],2) -> [];
([1,2],0) -> [1,2];
([3,1],3) -> [];
([3],0) -> [3];
 ([], 0) -> [];

=================================
None
([1],1) -> [];
([2,2],2) -> [];
([1,3],0) -> [1,3];
([2],1) -> [];
([3],3) -> [];
([2,2,1],3) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.2544 false

([0],2) -> [];
([3,2,3],0) -> [3,2,3];
([2,2],0) -> [2,2];
([3,0],1) -> [0];
([3],1) -> [];
([0],0) -> [0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

0.0925 false

([2,2,3],2) -> [3];
([3,2],0) -> [3,2];
([1],1) -> [];
([0,0,1],1) -> [0,1];
([2],1) -> [];
([2,2,3],3) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (f (x . 0, Un_S (x . 1))) . 1

23.5040 false

([2],1) -> [];
([1,2],0) -> [1,2];
([0],1) -> [];
([2],2) -> [];
([2,1],3) -> [];
([3],2) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.2527 false

([1],2) -> [];
([1,0,0],0) -> [1,0,0];
([3,3,0],0) -> [3,3,0];
([1,3],0) -> [1,3];
([3,0,3],3) -> [];
([2,2,0],0) -> [2,2,0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

1.2006 false

([1],2) -> [];
([2,2,1],1) -> [2,1];
([2],1) -> [];
([3],2) -> [];
([3,1,2],2) -> [2];
([2,0],2) -> [];
([3,3,2],0) -> [3,3,2];
 ([], 0) -> [];

=================================
None
([2,0],2) -> [];
([2,1,0],1) -> [1,0];
([1,0,2],3) -> [];
([3],2) -> [];
([3],3) -> [];
([1],0) -> [1];
([0,0],2) -> [];
 ([], 0) -> [];

=================================
None
([3,0],1) -> [0];
([2],3) -> [];
([2,3],3) -> [];
([3,3],0) -> [3,3];
([2,0],1) -> [0];
([1,0],3) -> [];
([3],2) -> [];
 ([], 0) -> [];

=================================
None
([1],3) -> [];
([0],1) -> [];
([3],1) -> [];
([0,2,3],1) -> [2,3];
([3,2],1) -> [2];
([2],0) -> [2];
([0,2],0) -> [0,2];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

0.1275 false

([2],0) -> [2];
([1,0,0],2) -> [0];
([0,0,0],3) -> [];
([3,2,2],1) -> [2,2];
([3],3) -> [];
([2,1],3) -> [];
([3],0) -> [3];
 ([], 0) -> [];

=================================
None
([2,3,0],2) -> [0];
([0],3) -> [];
([2],0) -> [2];
([1,1],3) -> [];
([1,3,0],3) -> [];
([3],3) -> [];
([2,1],3) -> [];
 ([], 0) -> [];

=================================
None
([3,2],0) -> [3,2];
([2],3) -> [];
([2,3],3) -> [];
([0,0,1],2) -> [1];
([1],3) -> [];
([3,3],2) -> [];
([0,2,0],2) -> [0];
 ([], 0) -> [];

=================================
None
([2,2,3],3) -> [];
([1],0) -> [1];
([0,2,3],3) -> [];
([3,0],2) -> [];
([1],3) -> [];
([1,1],3) -> [];
([1],2) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.3401 false

([1],1) -> [];
([2,2],2) -> [];
([2,2],1) -> [2];
([1],2) -> [];
([2,0],3) -> [];
([1,3],3) -> [];
([0],3) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> (match Un_S (x . 1) with
                  | O _ -> Un_Cons (x . 0) . 1
                  | S _ -> Nil)

21.2882 false

([2],0) -> [2];
([2,3,0],0) -> [2,3,0];
([3,1],2) -> [];
([2,1,0],2) -> [0];
([0,2,3],2) -> [3];
([2],3) -> [];
([1],2) -> [];
 ([], 0) -> [];

=================================
None
([2,0,2],3) -> [];
([3,1,1],2) -> [1];
([3],1) -> [];
([1],1) -> [];
([3,2],2) -> [];
([3,0,0],1) -> [0,0];
([3,3,3],1) -> [3,3];
([3,1],0) -> [3,1];
 ([], 0) -> [];

=================================
None
([0,1],0) -> [0,1];
([2],3) -> [];
([2,2],3) -> [];
([1],1) -> [];
([2,1,0],0) -> [2,1,0];
([2],0) -> [2];
([1],2) -> [];
([0],0) -> [0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.4844 false

([2],1) -> [];
([3,2],2) -> [];
([3,2],0) -> [3,2];
([1],0) -> [1];
([3],2) -> [];
([2,3],0) -> [2,3];
([3],1) -> [];
([1,1,3],1) -> [1,3];
 ([], 0) -> [];

=================================
None
([3],1) -> [];
([2,0],2) -> [];
([0],1) -> [];
([3],3) -> [];
([3,1],1) -> [1];
([2,1],0) -> [2,1];
([3],0) -> [3];
([3],2) -> [];
 ([], 0) -> [];

=================================
None
([1,3,1],2) -> [1];
([3,2],3) -> [];
([3,2],2) -> [];
([0],0) -> [0];
([2,0],0) -> [2,0];
([3,3],2) -> [];
([1,0,2],0) -> [1,0,2];
([0,1],0) -> [0,1];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (Un_Cons (x . 0) . 1) . 1

11.2265 false

([3],0) -> [3];
([2,3,3],2) -> [3];
([2,3],3) -> [];
([0],3) -> [];
([0,1,0],3) -> [];
([0,3],0) -> [0,3];
([1,3,3],2) -> [3];
([0,3,0],3) -> [];
 ([], 0) -> [];

=================================
None
([3],2) -> [];
([3,0,1],0) -> [3,0,1];
([3],0) -> [3];
([3,0],0) -> [3,0];
([0],3) -> [];
([1],1) -> [];
([2,3,3],0) -> [2,3,3];
([0,3,3],1) -> [3,3];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

0.0505 false

([1,0,1],2) -> [1];
([2,1],2) -> [];
([0],0) -> [0];
([1],2) -> [];
([1,1,1],2) -> [1];
([1,1,2],3) -> [];
([1,1,0],2) -> [0];
([2,3,2],1) -> [3,2];
 ([], 0) -> [];

=================================
None
([3,2,3],0) -> [3,2,3];
([3,1,2],2) -> [2];
([0,1,1],1) -> [1,1];
([3],0) -> [3];
([2,1],3) -> [];
([0,2,3],2) -> [3];
([3],2) -> [];
([2],3) -> [];
 ([], 0) -> [];

=================================
None
([0],0) -> [0];
([3,2,2],1) -> [2,2];
([2,1,3],0) -> [2,1,3];
([2],2) -> [];
([1,1],1) -> [1];
([2,1],3) -> [];
([0,3],0) -> [0,3];
([2,0],3) -> [];
 ([], 0) -> [];

=================================
None
([2,1,2],2) -> [2];
([3,3],1) -> [3];
([3,1],1) -> [1];
([0,1],1) -> [1];
([1,2,1],1) -> [2,1];
([2,2],3) -> [];
([0,3,2],1) -> [3,2];
([1,1],2) -> [];
([3,2],1) -> [2];
 ([], 0) -> [];

=================================
None
([0],2) -> [];
([3,2,0],2) -> [0];
([3],2) -> [];
([2,2],2) -> [];
([3,1],2) -> [];
([0,3],3) -> [];
([2,3],2) -> [];
([2,2,1],0) -> [2,2,1];
([3,2],3) -> [];
 ([], 0) -> [];

=================================
None
([2],1) -> [];
([0,0],3) -> [];
([1,1,2],3) -> [];
([1,0,0],3) -> [];
([2],2) -> [];
([1,0,0],2) -> [0];
([3],0) -> [3];
([3,1,0],2) -> [0];
([3,1],1) -> [1];
 ([], 0) -> [];

=================================
None
([2,3,2],0) -> [2,3,2];
([0,2,0],3) -> [];
([2,3],3) -> [];
([1],2) -> [];
([1],0) -> [1];
([1,3],2) -> [];
([0,3],2) -> [];
([1],1) -> [];
([0,1,2],3) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

1.3341 false

([2],0) -> [2];
([3,3,1],1) -> [3,1];
([0,0],2) -> [];
([0,2],3) -> [];
([0,1],2) -> [];
([2,0],1) -> [0];
([1],1) -> [];
([3],1) -> [];
([3,1],1) -> [1];
 ([], 0) -> [];

=================================
None
([3],1) -> [];
([2],0) -> [2];
([2],1) -> [];
([1],2) -> [];
([3,2,1],1) -> [2,1];
([2,1,2],3) -> [];
([3,0,3],3) -> [];
([3,1],0) -> [3,1];
([0],0) -> [0];
 ([], 0) -> [];

=================================
None
([0],0) -> [0];
([1,0,3],2) -> [3];
([3],1) -> [];
([3,3,3],1) -> [3,3];
([3,2,2],2) -> [2];
([0,0],2) -> [];
([3,1],1) -> [1];
([2,3],0) -> [2,3];
([3,3],3) -> [];
 ([], 0) -> [];

=================================
None
([3],1) -> [];
([1,2],2) -> [];
([0],2) -> [];
([3],2) -> [];
([0,3,3],1) -> [3,3];
([0,2],0) -> [0,2];
([3,2,2],0) -> [3,2,2];
([0,0],2) -> [];
([0],0) -> [0];
 ([], 0) -> [];

=================================
None
([0,2],3) -> [];
([0],2) -> [];
([2,1,3],0) -> [2,1,3];
([3,0],0) -> [3,0];
([0],1) -> [];
([0,3],0) -> [0,3];
([0,1],0) -> [0,1];
([0,1],3) -> [];
([0,0,3],1) -> [0,3];
 ([], 0) -> [];

=================================
None
([0],1) -> [];
([2],0) -> [2];
([3,2,1],3) -> [];
([0],2) -> [];
([2,1,2],3) -> [];
([1,3],2) -> [];
([3],2) -> [];
([2],2) -> [];
([0,0],0) -> [0,0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.4064 false

([3],2) -> [];
([3,2,2],2) -> [2];
([0],3) -> [];
([1,1,1],1) -> [1,1];
([3,3,1],3) -> [];
([0,2],0) -> [0,2];
([3,2,1],0) -> [3,2,1];
([1,0],1) -> [0];
([0,1],3) -> [];
([0,1,2],3) -> [];
 ([], 0) -> [];

=================================
None
([0,2],3) -> [];
([3],3) -> [];
([2],0) -> [2];
([2,3,0],1) -> [3,0];
([2,2,1],1) -> [2,1];
([2,1],3) -> [];
([1,2],2) -> [];
([2,3],3) -> [];
([2,3],1) -> [3];
([0,0,2],0) -> [0,0,2];
 ([], 0) -> [];

=================================
None
([2,1,2],1) -> [1,2];
([1,3],0) -> [1,3];
([2,0,2],3) -> [];
([2,3],3) -> [];
([0],3) -> [];
([1],2) -> [];
([1],3) -> [];
([1],1) -> [];
([0,0],2) -> [];
([2],0) -> [2];
 ([], 0) -> [];

=================================
None
([3,3,2],1) -> [3,2];
([0,2],3) -> [];
([2,1,2],0) -> [2,1,2];
([1],3) -> [];
([0],2) -> [];
([3,3,1],1) -> [3,1];
([1,3,1],3) -> [];
([1,2,1],2) -> [1];
([3,0,0],2) -> [0];
([1],0) -> [1];
 ([], 0) -> [];

=================================
None
([1,0,1],1) -> [0,1];
([1],0) -> [1];
([3],3) -> [];
([0],2) -> [];
([2],2) -> [];
([0,2,3],1) -> [2,3];
([2,1,1],0) -> [2,1,1];
([1,1,0],1) -> [1,0];
([2,1,0],1) -> [1,0];
([2,1],3) -> [];
 ([], 0) -> [];

=================================
None
([2],0) -> [2];
([2],1) -> [];
([2,3],3) -> [];
([2,0],2) -> [];
([1,1],0) -> [1,1];
([0],3) -> [];
([2,0,1],1) -> [0,1];
([3,3,0],3) -> [];
([3,3],0) -> [3,3];
([3],2) -> [];
 ([], 0) -> [];

=================================
None
([2,0],1) -> [0];
([1],1) -> [];
([0],1) -> [];
([0],2) -> [];
([1,2],0) -> [1,2];
([2,2],2) -> [];
([2],1) -> [];
([2,1,0],1) -> [1,0];
([0,2],2) -> [];
([2,0,3],3) -> [];
 ([], 0) -> [];

=================================
None
([2,2],0) -> [2,2];
([0,0,3],0) -> [0,0,3];
([1,3],0) -> [1,3];
([2],1) -> [];
([0],3) -> [];
([1],3) -> [];
([3],3) -> [];
([2,0,1],2) -> [1];
([2,2],1) -> [2];
([1,1],3) -> [];
 ([], 0) -> [];

=================================
None
([2],0) -> [2];
([3],2) -> [];
([2,3],2) -> [];
([1],0) -> [1];
([0,3,3],2) -> [3];
([1],3) -> [];
([2,1],0) -> [2,1];
([3,2],3) -> [];
([0,0],2) -> [];
([2,0,0],2) -> [0];
 ([], 0) -> [];

=================================
None
([2,3],3) -> [];
([2,1,3],1) -> [1,3];
([1],1) -> [];
([3],0) -> [3];
([2],3) -> [];
([2,3],1) -> [3];
([3,0,0],2) -> [0];
([1,0,2],2) -> [2];
([0],1) -> [];
([1,3,1],2) -> [1];
 ([], 0) -> [];

=================================
None
